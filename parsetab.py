
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN BREAK CASE CHAR CHAVE_ABERTA CHAVE_FECHADA COLCHETE_ABERTO COLCHETE_FECHADO COMMENT COMPARE_OPERATOR CONTINUE DEFAULT DIVIDE DIVIDE_EQUAL DOIS_PONTOS DOT DOUBLE ELSE ELSEIF EQUAL FLOAT FOR GREATER_THAN GREATER_THAN_OR_EQUALS ID IF INT IS_DIFFERENT IS_EQUALS LESS_THAN LESS_THAN_OR_EQUALS MAIN MINUS MINUS_EQUAL MINUS_MINUS NOT NUMBER_DEC NUMBER_INT OPERATOR OR PAREN_ABERTO PAREN_FECHADO PLUS PLUS_EQUAL PLUS_PLUS PONTO_VIRGULA PRINTLN REST REST_EQUAL RETURN SCANF SPECIAL_SYMBOL STRING STRUCT SWITCH TIMES TIMES_EQUAL TYPE_BOOLEAN TYPE_CHAR TYPE_FLOAT TYPE_STRING VIRGULA VOID WHILEprograma : declaracaodeclaracao : declaracao declaracao\n    | declaracao_variavel\n    | declaracao_funcao\n    | declaracao_estrutura\n    | estrutura_de_controle\n    | print\n    | COMMENT\n    | \n    \n    declaracao_variavel : ID EQUAL expressao PONTO_VIRGULA\n    | tipo ID PONTO_VIRGULA\n    | tipo ID EQUAL expressao PONTO_VIRGULA\n    | tipo array EQUAL expressao PONTO_VIRGULA\n    | ID PLUS PLUS PONTO_VIRGULA\n    | ID MINUS MINUS PONTO_VIRGULA\n    | declaracao_variavel declaracao_variavel\n    \n    declaracao_funcao : tipo ID PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | VOID ID PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | tipo MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | VOID MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco\n    \n    declaracao_estrutura : STRUCT ID COLCHETE_ABERTO declaracao_variavel COLCHETE_FECHADO\n    \n    declaracao_ou_coisas : declaracao_ou_coisas declaracao_ou_coisas\n    | retorno\n    | declaracao_variavel\n    | estrutura_de_controle\n    | print\n    | COMMENT\n    | \n    \n    estrutura_de_controle : if\n    | while\n    | for\n    | switch\n    \n    print : PRINTLN PAREN_ABERTO expressao PAREN_FECHADO PONTO_VIRGULA\n    | \n    \n    print_statement : atribuicao operador\n    | atribuicao operador print_statement\n    | atribuicaooperador : PLUS\n    | MINUS\n    | TIMES\n    | DIVIDE\n    | RESTtipo : INT\n    | STRING\n    | BOOLEAN\n    | DOUBLE\n    | CHAR\n    | FLOATexpressao : atribuicao\n    \n    atribuicao : NUMBER_DEC\n    | NUMBER_INT\n    | TYPE_FLOAT\n    | TYPE_STRING\n    | TYPE_BOOLEAN\n    | TYPE_CHAR\n    | ID\n    | ID operador expressao\n    | ID EQUAL expressao\n    | ID PLUS_EQUAL expressao\n    | ID MINUS_EQUAL expressao\n    | ID TIMES_EQUAL expressao\n    | ID DIVIDE_EQUAL expressao\n    | ID REST_EQUAL expressao\n    | ID AND EQUAL expressao\n    | ID OR EQUAL expressao\n    | ID comparador expressao\n    | variavel_ou_valor PLUS_PLUS\n    | variavel_ou_valor MINUS_MINUS\n    | expressao_logica\n    \n    expressao_logica : expressao_relacional\n    | expressao_logica AND expressao_relacional\n    | expressao_logica OR expressao_relacional\n    | NOT expressao_relacional\n    \n    expressao_relacional : expressao_aritmetica\n    | expressao_aritmetica comparador expressao_aritmetica\n    \n    expressao_aritmetica : expressao_multiplicativa\n    | expressao_aritmetica PLUS expressao_multiplicativa\n    | expressao_aritmetica MINUS expressao_multiplicativa\n    \n    expressao_multiplicativa : expressao_unaria\n    | expressao_multiplicativa TIMES expressao_unaria\n    | expressao_multiplicativa DIVIDE expressao_unaria\n    | expressao_multiplicativa REST expressao_unaria\n    \n    expressao_unaria : expressao_postfix\n    | MINUS expressao_unaria\n    | PLUS_PLUS expressao_postfix\n    | MINUS_MINUS expressao_postfix\n    \n    expressao_postfix : primaria\n    | primaria CHAVE_ABERTA expressao CHAVE_FECHADA\n    | primaria PAREN_ABERTO argumentos PAREN_FECHADO\n    | primaria DOT ID\n    \n    argumentos : expressao_lista\n    | \n\n    expressao_lista : \n    \n    primaria : variavel_ou_valor\n    | PAREN_ABERTO expressao PAREN_FECHADOparametros : parametro\n    | parametro VIRGULA parametros\n    | \n    \n    parametro : tipo ID\n    | tipo ID CHAVE_ABERTA CHAVE_FECHADAbloco : COLCHETE_ABERTO declaracao_ou_coisas COLCHETE_FECHADOretorno : RETURN PONTO_VIRGULA\n    | RETURN ID PONTO_VIRGULA\n    | RETURN expressao PONTO_VIRGULA\n    | RETURN ID PAREN_ABERTO parametros_dado PAREN_FECHADO PONTO_VIRGULA\n    \n    parametros_dado : variavel_ou_valor VIRGULA parametros_dado\n    | variavel_ou_valorif : IF PAREN_ABERTO statement PAREN_FECHADO bloco\n    | IF PAREN_ABERTO statement PAREN_FECHADO bloco ELSE bloco\n    | IF PAREN_ABERTO statement PAREN_FECHADO bloco elseif ELSE bloco\n\n    elseif : ELSEIF PAREN_ABERTO statement PAREN_FECHADO bloco elseif\n    | \n    \n    statement : variavel_ou_valor comparador variavel_ou_valor operador_logico\n    \n    variavel_ou_valor : ID\n    | NUMBER_DEC\n    | NUMBER_INT\n    | TYPE_STRING\n    | TYPE_BOOLEAN\n    | TYPE_CHAR\n    | TYPE_FLOAT\n    \n    switch : SWITCH PAREN_ABERTO ID PAREN_FECHADO bloco_switch\n    \n    bloco_switch : COLCHETE_ABERTO cases COLCHETE_FECHADO\n    \n    cases : cases cases\n    | CASE expressao DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA\n    | DEFAULT DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA\n    | while : WHILE PAREN_ABERTO statement PAREN_FECHADO bloco\n    \n    for : FOR PAREN_ABERTO tipo ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO bloco\n    | FOR PAREN_ABERTO ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO blococomparador : LESS_THAN\n    | IS_EQUALS\n    | LESS_THAN_OR_EQUALS\n    | GREATER_THAN\n    | GREATER_THAN_OR_EQUALS\n    | IS_DIFFERENToperador_logico : AND statement\n    | OR statement\n    | array : ID chaves_array\n    | array_inicializacao\n    \n    array_inicializacao : COLCHETE_ABERTO expressao COLCHETE_FECHADO\n    \n    chaves_array : CHAVE_ABERTA expressao CHAVE_FECHADA\n    | CHAVE_ABERTA CHAVE_FECHADA'
    
_lr_action_items = {'COMMENT':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,118,138,139,182,187,191,192,193,194,196,199,206,208,209,210,214,215,216,217,218,219,230,233,234,235,243,245,246,248,250,253,254,260,270,278,279,],[8,8,-3,-4,-5,-6,-7,-8,-29,-30,-31,-32,8,-16,-11,-10,-14,-15,-12,-13,-21,-33,-108,219,-127,-121,-17,-19,-18,-20,219,-23,-24,-25,-26,-27,-109,219,-101,-102,-122,219,-110,-103,-104,219,219,219,-105,-129,-128,]),'ID':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,28,29,30,31,38,42,43,44,45,46,58,59,62,65,69,72,73,76,77,82,94,97,98,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,124,125,127,128,129,130,131,132,134,136,138,139,141,151,154,157,166,167,182,187,191,192,193,194,196,197,199,206,208,209,210,214,215,216,217,218,219,220,222,223,225,227,230,232,233,234,235,240,243,245,246,248,249,250,252,253,254,258,260,264,266,270,272,278,279,],[9,9,9,-4,-5,-6,-7,-8,34,39,41,-29,-30,-31,-32,-43,-44,-45,-46,-47,-48,9,9,47,48,48,48,86,86,95,96,86,86,86,86,48,-11,48,48,48,9,156,48,48,48,48,48,48,48,48,-38,-39,-40,-41,-42,-130,-131,-132,-133,-134,-135,-10,86,86,86,86,86,86,86,86,48,180,-14,-15,183,9,86,86,48,48,-12,-13,-21,-33,-108,9,-127,86,-121,-17,-19,-18,-20,9,-23,9,-25,-26,-27,236,86,86,86,48,-109,86,9,-101,-102,86,-122,9,-110,-103,86,-104,86,9,9,86,9,86,48,-105,48,-129,-128,]),'VOID':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,118,138,139,182,187,191,192,193,196,199,206,208,209,210,230,234,243,246,278,279,],[11,11,-3,-4,-5,-6,-7,-8,-29,-30,-31,-32,11,-16,-11,-10,-14,-15,-12,-13,-21,-33,-108,-127,-121,-17,-19,-18,-20,-109,-101,-122,-110,-129,-128,]),'STRUCT':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,118,138,139,182,187,191,192,193,196,199,206,208,209,210,230,234,243,246,278,279,],[12,12,-3,-4,-5,-6,-7,-8,-29,-30,-31,-32,12,-16,-11,-10,-14,-15,-12,-13,-21,-33,-108,-127,-121,-17,-19,-18,-20,-109,-101,-122,-110,-129,-128,]),'PRINTLN':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,118,138,139,182,187,191,192,193,194,196,199,206,208,209,210,214,215,216,217,218,219,230,233,234,235,243,245,246,248,250,253,254,260,270,278,279,],[17,17,-3,-4,-5,-6,-7,-8,-29,-30,-31,-32,17,-16,-11,-10,-14,-15,-12,-13,-21,-33,-108,17,-127,-121,-17,-19,-18,-20,17,-23,-24,-25,-26,-27,-109,17,-101,-102,-122,17,-110,-103,-104,17,17,17,-105,-129,-128,]),'INT':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,45,72,74,78,80,81,82,118,138,139,151,182,185,187,191,192,193,194,196,199,206,208,209,210,214,215,216,217,218,219,230,233,234,235,243,245,246,248,250,253,254,260,270,278,279,],[18,18,18,-4,-5,-6,-7,-8,-29,-30,-31,-32,18,18,18,-11,18,18,18,18,18,-10,-14,-15,18,-12,18,-13,-21,-33,-108,18,-127,-121,-17,-19,-18,-20,18,-23,18,-25,-26,-27,-109,18,-101,-102,-122,18,-110,-103,-104,18,18,18,-105,-129,-128,]),'STRING':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,45,72,74,78,80,81,82,118,138,139,151,182,185,187,191,192,193,194,196,199,206,208,209,210,214,215,216,217,218,219,230,233,234,235,243,245,246,248,250,253,254,260,270,278,279,],[19,19,19,-4,-5,-6,-7,-8,-29,-30,-31,-32,19,19,19,-11,19,19,19,19,19,-10,-14,-15,19,-12,19,-13,-21,-33,-108,19,-127,-121,-17,-19,-18,-20,19,-23,19,-25,-26,-27,-109,19,-101,-102,-122,19,-110,-103,-104,19,19,19,-105,-129,-128,]),'BOOLEAN':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,45,72,74,78,80,81,82,118,138,139,151,182,185,187,191,192,193,194,196,199,206,208,209,210,214,215,216,217,218,219,230,233,234,235,243,245,246,248,250,253,254,260,270,278,279,],[20,20,20,-4,-5,-6,-7,-8,-29,-30,-31,-32,20,20,20,-11,20,20,20,20,20,-10,-14,-15,20,-12,20,-13,-21,-33,-108,20,-127,-121,-17,-19,-18,-20,20,-23,20,-25,-26,-27,-109,20,-101,-102,-122,20,-110,-103,-104,20,20,20,-105,-129,-128,]),'DOUBLE':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,45,72,74,78,80,81,82,118,138,139,151,182,185,187,191,192,193,194,196,199,206,208,209,210,214,215,216,217,218,219,230,233,234,235,243,245,246,248,250,253,254,260,270,278,279,],[21,21,21,-4,-5,-6,-7,-8,-29,-30,-31,-32,21,21,21,-11,21,21,21,21,21,-10,-14,-15,21,-12,21,-13,-21,-33,-108,21,-127,-121,-17,-19,-18,-20,21,-23,21,-25,-26,-27,-109,21,-101,-102,-122,21,-110,-103,-104,21,21,21,-105,-129,-128,]),'CHAR':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,45,72,74,78,80,81,82,118,138,139,151,182,185,187,191,192,193,194,196,199,206,208,209,210,214,215,216,217,218,219,230,233,234,235,243,245,246,248,250,253,254,260,270,278,279,],[22,22,22,-4,-5,-6,-7,-8,-29,-30,-31,-32,22,22,22,-11,22,22,22,22,22,-10,-14,-15,22,-12,22,-13,-21,-33,-108,22,-127,-121,-17,-19,-18,-20,22,-23,22,-25,-26,-27,-109,22,-101,-102,-122,22,-110,-103,-104,22,22,22,-105,-129,-128,]),'FLOAT':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,45,72,74,78,80,81,82,118,138,139,151,182,185,187,191,192,193,194,196,199,206,208,209,210,214,215,216,217,218,219,230,233,234,235,243,245,246,248,250,253,254,260,270,278,279,],[23,23,23,-4,-5,-6,-7,-8,-29,-30,-31,-32,23,23,23,-11,23,23,23,23,23,-10,-14,-15,23,-12,23,-13,-21,-33,-108,23,-127,-121,-17,-19,-18,-20,23,-23,23,-25,-26,-27,-109,23,-101,-102,-122,23,-110,-103,-104,23,23,23,-105,-129,-128,]),'IF':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,118,138,139,182,187,191,192,193,194,196,199,206,208,209,210,214,215,216,217,218,219,230,233,234,235,243,245,246,248,250,253,254,260,270,278,279,],[24,24,-3,-4,-5,-6,-7,-8,-29,-30,-31,-32,24,-16,-11,-10,-14,-15,-12,-13,-21,-33,-108,24,-127,-121,-17,-19,-18,-20,24,-23,-24,-25,-26,-27,-109,24,-101,-102,-122,24,-110,-103,-104,24,24,24,-105,-129,-128,]),'WHILE':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,118,138,139,182,187,191,192,193,194,196,199,206,208,209,210,214,215,216,217,218,219,230,233,234,235,243,245,246,248,250,253,254,260,270,278,279,],[25,25,-3,-4,-5,-6,-7,-8,-29,-30,-31,-32,25,-16,-11,-10,-14,-15,-12,-13,-21,-33,-108,25,-127,-121,-17,-19,-18,-20,25,-23,-24,-25,-26,-27,-109,25,-101,-102,-122,25,-110,-103,-104,25,25,25,-105,-129,-128,]),'FOR':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,118,138,139,182,187,191,192,193,194,196,199,206,208,209,210,214,215,216,217,218,219,230,233,234,235,243,245,246,248,250,253,254,260,270,278,279,],[26,26,-3,-4,-5,-6,-7,-8,-29,-30,-31,-32,26,-16,-11,-10,-14,-15,-12,-13,-21,-33,-108,26,-127,-121,-17,-19,-18,-20,26,-23,-24,-25,-26,-27,-109,26,-101,-102,-122,26,-110,-103,-104,26,26,26,-105,-129,-128,]),'SWITCH':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,118,138,139,182,187,191,192,193,194,196,199,206,208,209,210,214,215,216,217,218,219,230,233,234,235,243,245,246,248,250,253,254,260,270,278,279,],[27,27,-3,-4,-5,-6,-7,-8,-29,-30,-31,-32,27,-16,-11,-10,-14,-15,-12,-13,-21,-33,-108,27,-127,-121,-17,-19,-18,-20,27,-23,-24,-25,-26,-27,-109,27,-101,-102,-122,27,-110,-103,-104,27,27,27,-105,-129,-128,]),'$end':([0,1,2,3,4,5,6,7,8,13,14,15,16,28,29,72,118,138,139,182,187,191,192,193,196,199,206,208,209,210,230,234,243,246,278,279,],[-9,0,-1,-3,-4,-5,-6,-7,-8,-29,-30,-31,-32,-2,-16,-11,-10,-14,-15,-12,-13,-21,-33,-108,-127,-121,-17,-19,-18,-20,-109,-101,-122,-110,-129,-128,]),'EQUAL':([9,34,35,37,47,48,75,95,104,105,145,148,156,186,236,],[31,73,77,-140,73,98,-139,157,166,167,-143,-141,197,-142,98,]),'PLUS':([9,32,48,51,52,53,54,55,56,57,63,64,66,67,68,86,87,88,89,90,91,92,121,122,123,133,171,172,173,174,175,176,180,181,203,204,236,],[32,70,107,-115,-116,-120,-117,-118,-119,-94,128,-76,-79,-83,-87,-114,-115,-116,-117,-118,-119,-120,-85,-94,-86,-84,128,-77,-78,-80,-81,-82,-90,-95,-88,-89,107,]),'MINUS':([9,31,33,38,42,48,51,52,53,54,55,56,57,62,63,64,65,66,67,68,69,73,76,77,86,87,88,89,90,91,92,97,98,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,125,127,128,129,130,131,132,133,134,166,167,171,172,173,174,175,176,180,181,203,204,220,227,236,266,272,],[33,65,71,65,65,108,-115,-116,-120,-117,-118,-119,-94,65,129,-76,65,-79,-83,-87,65,65,65,65,-114,-115,-116,-117,-118,-119,-120,65,65,65,65,65,65,65,65,-38,-39,-40,-41,-42,-130,-131,-132,-133,-134,-135,-85,-94,-86,65,65,65,65,65,65,65,65,-84,65,65,65,129,-77,-78,-80,-81,-82,-90,-95,-88,-89,65,65,108,65,65,]),'MAIN':([10,11,18,19,20,21,22,23,],[36,40,-43,-44,-45,-46,-47,-48,]),'COLCHETE_ABERTO':([10,18,19,20,21,22,23,30,41,153,155,158,184,188,189,190,211,231,255,276,277,],[38,-43,-44,-45,-46,-47,-48,38,82,194,194,200,194,194,194,194,194,194,194,194,194,]),'COLCHETE_FECHADO':([13,14,15,16,29,48,50,51,52,53,54,55,56,57,60,61,63,64,66,67,68,72,79,86,87,88,89,90,91,92,118,119,120,121,122,123,126,133,138,139,151,159,160,161,162,163,164,165,168,169,170,171,172,173,174,175,176,180,181,182,187,192,193,194,196,199,200,201,202,203,204,214,215,216,217,218,219,226,230,233,234,235,242,243,246,248,250,268,270,274,278,279,],[-29,-30,-31,-32,-16,-56,-49,-50,-51,-52,-53,-54,-55,-94,-69,-70,-74,-76,-79,-83,-87,-11,148,-114,-115,-116,-117,-118,-119,-120,-10,-67,-68,-85,-94,-86,-73,-84,-14,-15,191,-57,-58,-59,-60,-61,-62,-63,-66,-71,-72,-75,-77,-78,-80,-81,-82,-90,-95,-12,-13,-33,-108,-28,-127,-121,-126,-64,-65,-88,-89,234,-23,-24,-25,-26,-27,243,-109,-22,-101,-102,-123,-122,-110,-103,-104,-125,-105,-124,-129,-128,]),'RETURN':([13,14,15,16,29,72,118,138,139,182,187,192,193,194,196,199,214,215,216,217,218,219,230,233,234,235,243,245,246,248,250,253,254,260,270,278,279,],[-29,-30,-31,-32,-16,-11,-10,-14,-15,-12,-13,-33,-108,220,-127,-121,220,-23,-24,-25,-26,-27,-109,220,-101,-102,-122,220,-110,-103,-104,220,220,220,-105,-129,-128,]),'BREAK':([13,14,15,16,29,72,118,138,139,182,187,192,193,196,199,215,216,217,218,219,230,233,234,235,243,245,246,248,250,253,254,260,270,278,279,],[-29,-30,-31,-32,-16,-11,-10,-14,-15,-12,-13,-33,-108,-127,-121,-23,-24,-25,-26,-27,-109,-22,-101,-102,-122,-28,-110,-103,-104,-28,261,267,-105,-129,-128,]),'PAREN_ABERTO':([17,24,25,26,27,31,34,36,38,39,40,42,48,51,52,53,54,55,56,57,58,59,62,65,68,69,73,76,77,86,87,88,89,90,91,92,97,98,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,122,124,125,127,128,129,130,131,132,134,166,167,181,213,220,227,236,266,272,],[42,43,44,45,46,69,74,78,69,80,81,69,-114,-115,-116,-120,-117,-118,-119,-94,69,69,69,69,135,69,69,69,69,-114,-115,-116,-117,-118,-119,-120,69,69,69,69,69,69,69,69,-38,-39,-40,-41,-42,-130,-131,-132,-133,-134,-135,-94,69,69,69,69,69,69,69,69,69,69,69,-95,232,69,69,249,69,69,]),'NUMBER_DEC':([31,38,42,43,44,58,59,62,65,69,73,76,77,97,98,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,124,125,127,128,129,130,131,132,134,154,157,166,167,197,220,222,223,225,227,232,240,249,252,258,264,266,272,],[51,51,51,87,87,87,87,87,87,51,51,51,51,51,51,51,51,51,51,51,51,-38,-39,-40,-41,-42,-130,-131,-132,-133,-134,-135,87,87,87,87,87,87,87,87,51,87,87,51,51,87,51,87,87,87,51,87,87,87,87,87,87,51,51,]),'NUMBER_INT':([31,38,42,43,44,58,59,62,65,69,73,76,77,97,98,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,124,125,127,128,129,130,131,132,134,154,157,166,167,197,220,222,223,225,227,232,240,249,252,258,264,266,272,],[52,52,52,88,88,88,88,88,88,52,52,52,52,52,52,52,52,52,52,52,52,-38,-39,-40,-41,-42,-130,-131,-132,-133,-134,-135,88,88,88,88,88,88,88,88,52,88,88,52,52,88,52,88,88,88,52,88,88,88,88,88,88,52,52,]),'TYPE_FLOAT':([31,38,42,43,44,58,59,62,65,69,73,76,77,97,98,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,124,125,127,128,129,130,131,132,134,154,157,166,167,197,220,222,223,225,227,232,240,249,252,258,264,266,272,],[53,53,53,92,92,92,92,92,92,53,53,53,53,53,53,53,53,53,53,53,53,-38,-39,-40,-41,-42,-130,-131,-132,-133,-134,-135,92,92,92,92,92,92,92,92,53,92,92,53,53,92,53,92,92,92,53,92,92,92,92,92,92,53,53,]),'TYPE_STRING':([31,38,42,43,44,58,59,62,65,69,73,76,77,97,98,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,124,125,127,128,129,130,131,132,134,154,157,166,167,197,220,222,223,225,227,232,240,249,252,258,264,266,272,],[54,54,54,89,89,89,89,89,89,54,54,54,54,54,54,54,54,54,54,54,54,-38,-39,-40,-41,-42,-130,-131,-132,-133,-134,-135,89,89,89,89,89,89,89,89,54,89,89,54,54,89,54,89,89,89,54,89,89,89,89,89,89,54,54,]),'TYPE_BOOLEAN':([31,38,42,43,44,58,59,62,65,69,73,76,77,97,98,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,124,125,127,128,129,130,131,132,134,154,157,166,167,197,220,222,223,225,227,232,240,249,252,258,264,266,272,],[55,55,55,90,90,90,90,90,90,55,55,55,55,55,55,55,55,55,55,55,55,-38,-39,-40,-41,-42,-130,-131,-132,-133,-134,-135,90,90,90,90,90,90,90,90,55,90,90,55,55,90,55,90,90,90,55,90,90,90,90,90,90,55,55,]),'TYPE_CHAR':([31,38,42,43,44,58,59,62,65,69,73,76,77,97,98,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,124,125,127,128,129,130,131,132,134,154,157,166,167,197,220,222,223,225,227,232,240,249,252,258,264,266,272,],[56,56,56,91,91,91,91,91,91,56,56,56,56,56,56,56,56,56,56,56,56,-38,-39,-40,-41,-42,-130,-131,-132,-133,-134,-135,91,91,91,91,91,91,91,91,56,91,91,56,56,91,56,91,91,91,56,91,91,91,91,91,91,56,56,]),'NOT':([31,38,42,69,73,76,77,97,98,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,134,166,167,220,227,266,272,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-38,-39,-40,-41,-42,-130,-131,-132,-133,-134,-135,62,62,62,62,62,62,62,]),'PLUS_PLUS':([31,38,42,48,51,52,53,54,55,56,57,62,65,69,73,76,77,97,98,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,124,125,127,128,129,130,131,132,134,166,167,220,227,236,266,272,],[58,58,58,-114,-115,-116,-120,-117,-118,-119,119,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-38,-39,-40,-41,-42,-130,-131,-132,-133,-134,-135,58,58,58,58,58,58,58,58,58,58,58,58,58,-114,58,58,]),'MINUS_MINUS':([31,38,42,48,51,52,53,54,55,56,57,62,65,69,73,76,77,97,98,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,124,125,127,128,129,130,131,132,134,166,167,220,227,236,266,272,],[59,59,59,-114,-115,-116,-120,-117,-118,-119,120,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-38,-39,-40,-41,-42,-130,-131,-132,-133,-134,-135,59,59,59,59,59,59,59,59,59,59,59,59,59,-114,59,59,]),'PONTO_VIRGULA':([34,47,48,49,50,51,52,53,54,55,56,57,60,61,63,64,66,67,68,70,71,86,87,88,89,90,91,92,119,120,121,122,123,126,133,140,146,152,159,160,161,162,163,164,165,168,169,170,171,172,173,174,175,176,180,181,198,201,202,203,204,220,224,236,237,259,261,263,265,267,],[72,72,-56,118,-49,-50,-51,-52,-53,-54,-55,-94,-69,-70,-74,-76,-79,-83,-87,138,139,-114,-115,-116,-117,-118,-119,-120,-67,-68,-85,-94,-86,-73,-84,182,187,192,-57,-58,-59,-60,-61,-62,-63,-66,-71,-72,-75,-77,-78,-80,-81,-82,-90,-95,225,-64,-65,-88,-89,235,240,248,250,266,268,270,272,274,]),'CHAVE_ABERTA':([34,47,48,51,52,53,54,55,56,57,68,86,87,88,89,90,91,92,122,181,183,236,],[76,76,-114,-115,-116,-120,-117,-118,-119,-94,134,-114,-115,-116,-117,-118,-119,-120,-94,-95,205,-114,]),'PAREN_FECHADO':([48,50,51,52,53,54,55,56,57,60,61,63,64,66,67,68,74,78,80,81,83,84,86,87,88,89,90,91,92,93,96,119,120,121,122,123,126,133,135,137,142,143,147,149,150,159,160,161,162,163,164,165,168,169,170,171,172,173,174,175,176,178,179,180,181,183,185,195,201,202,203,204,207,221,229,238,239,247,256,257,271,273,275,],[-56,-49,-50,-51,-52,-53,-54,-55,-94,-69,-70,-74,-76,-79,-83,-87,-98,-98,-98,-98,152,153,-114,-115,-116,-117,-118,-119,-120,155,158,-67,-68,-85,-94,-86,-73,-84,-92,181,184,-96,188,189,190,-57,-58,-59,-60,-61,-62,-63,-66,-71,-72,-75,-77,-78,-80,-81,-82,204,-91,-90,-95,-99,-98,-138,-64,-65,-88,-89,-97,-113,-100,-136,-137,255,263,-107,-106,276,277,]),'CHAVE_FECHADA':([48,50,51,52,53,54,55,56,57,60,61,63,64,66,67,68,76,86,87,88,89,90,91,92,119,120,121,122,123,126,133,144,159,160,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,180,181,201,202,203,204,205,],[-56,-49,-50,-51,-52,-53,-54,-55,-94,-69,-70,-74,-76,-79,-83,-87,145,-114,-115,-116,-117,-118,-119,-120,-67,-68,-85,-94,-86,-73,-84,186,-57,-58,-59,-60,-61,-62,-63,-66,-71,-72,-75,-77,-78,-80,-81,-82,203,-90,-95,-64,-65,-88,-89,229,]),'DOIS_PONTOS':([48,50,51,52,53,54,55,56,57,60,61,63,64,66,67,68,86,87,88,89,90,91,92,119,120,121,122,123,126,133,159,160,161,162,163,164,165,168,169,170,171,172,173,174,175,176,180,181,201,202,203,204,228,244,],[-56,-49,-50,-51,-52,-53,-54,-55,-94,-69,-70,-74,-76,-79,-83,-87,-114,-115,-116,-117,-118,-119,-120,-67,-68,-85,-94,-86,-73,-84,-57,-58,-59,-60,-61,-62,-63,-66,-71,-72,-75,-77,-78,-80,-81,-82,-90,-95,-64,-65,-88,-89,245,253,]),'PLUS_EQUAL':([48,236,],[99,99,]),'MINUS_EQUAL':([48,236,],[100,100,]),'TIMES_EQUAL':([48,236,],[101,101,]),'DIVIDE_EQUAL':([48,236,],[102,102,]),'REST_EQUAL':([48,236,],[103,103,]),'AND':([48,51,52,53,54,55,56,57,60,61,63,64,66,67,68,86,87,88,89,90,91,92,121,122,123,126,133,169,170,171,172,173,174,175,176,180,181,195,203,204,236,],[104,-115,-116,-120,-117,-118,-119,-94,124,-70,-74,-76,-79,-83,-87,-114,-115,-116,-117,-118,-119,-120,-85,-94,-86,-73,-84,-71,-72,-75,-77,-78,-80,-81,-82,-90,-95,222,-88,-89,104,]),'OR':([48,51,52,53,54,55,56,57,60,61,63,64,66,67,68,86,87,88,89,90,91,92,121,122,123,126,133,169,170,171,172,173,174,175,176,180,181,195,203,204,236,],[105,-115,-116,-120,-117,-118,-119,-94,125,-70,-74,-76,-79,-83,-87,-114,-115,-116,-117,-118,-119,-120,-85,-94,-86,-73,-84,-71,-72,-75,-77,-78,-80,-81,-82,-90,-95,223,-88,-89,105,]),'DOT':([48,51,52,53,54,55,56,57,68,86,87,88,89,90,91,92,122,181,236,],[-114,-115,-116,-120,-117,-118,-119,-94,136,-114,-115,-116,-117,-118,-119,-120,-94,-95,-114,]),'TIMES':([48,51,52,53,54,55,56,57,64,66,67,68,86,87,88,89,90,91,92,121,122,123,133,172,173,174,175,176,180,181,203,204,236,],[109,-115,-116,-120,-117,-118,-119,-94,130,-79,-83,-87,-114,-115,-116,-117,-118,-119,-120,-85,-94,-86,-84,130,130,-80,-81,-82,-90,-95,-88,-89,109,]),'DIVIDE':([48,51,52,53,54,55,56,57,64,66,67,68,86,87,88,89,90,91,92,121,122,123,133,172,173,174,175,176,180,181,203,204,236,],[110,-115,-116,-120,-117,-118,-119,-94,131,-79,-83,-87,-114,-115,-116,-117,-118,-119,-120,-85,-94,-86,-84,131,131,-80,-81,-82,-90,-95,-88,-89,110,]),'REST':([48,51,52,53,54,55,56,57,64,66,67,68,86,87,88,89,90,91,92,121,122,123,133,172,173,174,175,176,180,181,203,204,236,],[111,-115,-116,-120,-117,-118,-119,-94,132,-79,-83,-87,-114,-115,-116,-117,-118,-119,-120,-85,-94,-86,-84,132,132,-80,-81,-82,-90,-95,-88,-89,111,]),'LESS_THAN':([48,51,52,53,54,55,56,57,63,64,66,67,68,85,86,87,88,89,90,91,92,121,122,123,133,172,173,174,175,176,180,181,203,204,236,241,251,],[112,-115,-116,-120,-117,-118,-119,-94,112,-76,-79,-83,-87,112,-114,-115,-116,-117,-118,-119,-120,-85,-94,-86,-84,-77,-78,-80,-81,-82,-90,-95,-88,-89,112,112,112,]),'IS_EQUALS':([48,51,52,53,54,55,56,57,63,64,66,67,68,85,86,87,88,89,90,91,92,121,122,123,133,172,173,174,175,176,180,181,203,204,236,241,251,],[113,-115,-116,-120,-117,-118,-119,-94,113,-76,-79,-83,-87,113,-114,-115,-116,-117,-118,-119,-120,-85,-94,-86,-84,-77,-78,-80,-81,-82,-90,-95,-88,-89,113,113,113,]),'LESS_THAN_OR_EQUALS':([48,51,52,53,54,55,56,57,63,64,66,67,68,85,86,87,88,89,90,91,92,121,122,123,133,172,173,174,175,176,180,181,203,204,236,241,251,],[114,-115,-116,-120,-117,-118,-119,-94,114,-76,-79,-83,-87,114,-114,-115,-116,-117,-118,-119,-120,-85,-94,-86,-84,-77,-78,-80,-81,-82,-90,-95,-88,-89,114,114,114,]),'GREATER_THAN':([48,51,52,53,54,55,56,57,63,64,66,67,68,85,86,87,88,89,90,91,92,121,122,123,133,172,173,174,175,176,180,181,203,204,236,241,251,],[115,-115,-116,-120,-117,-118,-119,-94,115,-76,-79,-83,-87,115,-114,-115,-116,-117,-118,-119,-120,-85,-94,-86,-84,-77,-78,-80,-81,-82,-90,-95,-88,-89,115,115,115,]),'GREATER_THAN_OR_EQUALS':([48,51,52,53,54,55,56,57,63,64,66,67,68,85,86,87,88,89,90,91,92,121,122,123,133,172,173,174,175,176,180,181,203,204,236,241,251,],[116,-115,-116,-120,-117,-118,-119,-94,116,-76,-79,-83,-87,116,-114,-115,-116,-117,-118,-119,-120,-85,-94,-86,-84,-77,-78,-80,-81,-82,-90,-95,-88,-89,116,116,116,]),'IS_DIFFERENT':([48,51,52,53,54,55,56,57,63,64,66,67,68,85,86,87,88,89,90,91,92,121,122,123,133,172,173,174,175,176,180,181,203,204,236,241,251,],[117,-115,-116,-120,-117,-118,-119,-94,117,-76,-79,-83,-87,117,-114,-115,-116,-117,-118,-119,-120,-85,-94,-86,-84,-77,-78,-80,-81,-82,-90,-95,-88,-89,117,117,117,]),'VIRGULA':([86,87,88,89,90,91,92,143,183,229,257,],[-114,-115,-116,-117,-118,-119,-120,185,-99,-100,264,]),'ELSE':([193,212,234,262,269,],[211,231,-101,-112,-111,]),'ELSEIF':([193,234,262,],[213,-101,213,]),'CASE':([200,226,242,268,274,],[227,227,227,-125,-124,]),'DEFAULT':([200,226,242,268,274,],[228,228,228,-125,-124,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracao':([0,2,28,],[2,28,28,]),'declaracao_variavel':([0,2,3,28,29,82,151,194,214,216,233,245,253,254,260,],[3,3,29,3,29,151,29,216,216,29,216,216,216,216,216,]),'declaracao_funcao':([0,2,28,],[4,4,4,]),'declaracao_estrutura':([0,2,28,],[5,5,5,]),'estrutura_de_controle':([0,2,28,194,214,233,245,253,254,260,],[6,6,6,217,217,217,217,217,217,217,]),'print':([0,2,28,194,214,233,245,253,254,260,],[7,7,7,218,218,218,218,218,218,218,]),'tipo':([0,2,3,28,29,45,74,78,80,81,82,151,185,194,214,216,233,245,253,254,260,],[10,10,30,10,30,94,141,141,141,141,30,30,141,30,30,30,30,30,30,30,30,]),'if':([0,2,28,194,214,233,245,253,254,260,],[13,13,13,13,13,13,13,13,13,13,]),'while':([0,2,28,194,214,233,245,253,254,260,],[14,14,14,14,14,14,14,14,14,14,]),'for':([0,2,28,194,214,233,245,253,254,260,],[15,15,15,15,15,15,15,15,15,15,]),'switch':([0,2,28,194,214,233,245,253,254,260,],[16,16,16,16,16,16,16,16,16,16,]),'array':([10,30,],[35,35,]),'array_inicializacao':([10,30,],[37,37,]),'expressao':([31,38,42,69,73,76,77,97,98,99,100,101,102,103,106,134,166,167,220,227,266,272,],[49,79,83,137,140,144,146,159,160,161,162,163,164,165,168,177,201,202,237,244,273,275,]),'atribuicao':([31,38,42,69,73,76,77,97,98,99,100,101,102,103,106,134,166,167,220,227,266,272,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'variavel_ou_valor':([31,38,42,43,44,58,59,62,65,69,73,76,77,97,98,99,100,101,102,103,106,124,125,127,128,129,130,131,132,134,154,157,166,167,197,220,222,223,225,227,232,240,249,252,258,264,266,272,],[57,57,57,85,85,122,122,122,122,57,57,57,57,57,57,57,57,57,57,57,57,122,122,122,122,122,122,122,122,57,195,198,57,57,224,57,85,85,241,57,85,251,257,259,265,257,57,57,]),'expressao_logica':([31,38,42,69,73,76,77,97,98,99,100,101,102,103,106,134,166,167,220,227,266,272,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'expressao_relacional':([31,38,42,62,69,73,76,77,97,98,99,100,101,102,103,106,124,125,134,166,167,220,227,266,272,],[61,61,61,126,61,61,61,61,61,61,61,61,61,61,61,61,169,170,61,61,61,61,61,61,61,]),'expressao_aritmetica':([31,38,42,62,69,73,76,77,97,98,99,100,101,102,103,106,124,125,127,134,166,167,220,227,266,272,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,171,63,63,63,63,63,63,63,]),'expressao_multiplicativa':([31,38,42,62,69,73,76,77,97,98,99,100,101,102,103,106,124,125,127,128,129,134,166,167,220,227,266,272,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,172,173,64,64,64,64,64,64,64,]),'expressao_unaria':([31,38,42,62,65,69,73,76,77,97,98,99,100,101,102,103,106,124,125,127,128,129,130,131,132,134,166,167,220,227,266,272,],[66,66,66,66,133,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,174,175,176,66,66,66,66,66,66,66,]),'expressao_postfix':([31,38,42,58,59,62,65,69,73,76,77,97,98,99,100,101,102,103,106,124,125,127,128,129,130,131,132,134,166,167,220,227,266,272,],[67,67,67,121,123,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'primaria':([31,38,42,58,59,62,65,69,73,76,77,97,98,99,100,101,102,103,106,124,125,127,128,129,130,131,132,134,166,167,220,227,266,272,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'chaves_array':([34,47,],[75,75,]),'statement':([43,44,222,223,232,],[84,93,238,239,247,]),'operador':([48,236,],[97,97,]),'comparador':([48,63,85,236,241,251,],[106,127,154,106,252,258,]),'parametros':([74,78,80,81,185,],[142,147,149,150,207,]),'parametro':([74,78,80,81,185,],[143,143,143,143,143,]),'argumentos':([135,],[178,]),'expressao_lista':([135,],[179,]),'bloco':([153,155,184,188,189,190,211,231,255,276,277,],[193,196,206,208,209,210,230,246,262,278,279,]),'bloco_switch':([158,],[199,]),'elseif':([193,262,],[212,269,]),'declaracao_ou_coisas':([194,214,233,245,253,254,260,],[214,233,233,254,260,233,233,]),'retorno':([194,214,233,245,253,254,260,],[215,215,215,215,215,215,215,]),'operador_logico':([195,],[221,]),'cases':([200,226,242,],[226,242,242,]),'parametros_dado':([249,264,],[256,271,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaracao','programa',1,'p_programa','sintatico.py',112),
  ('declaracao -> declaracao declaracao','declaracao',2,'p_declaracao','sintatico.py',115),
  ('declaracao -> declaracao_variavel','declaracao',1,'p_declaracao','sintatico.py',116),
  ('declaracao -> declaracao_funcao','declaracao',1,'p_declaracao','sintatico.py',117),
  ('declaracao -> declaracao_estrutura','declaracao',1,'p_declaracao','sintatico.py',118),
  ('declaracao -> estrutura_de_controle','declaracao',1,'p_declaracao','sintatico.py',119),
  ('declaracao -> print','declaracao',1,'p_declaracao','sintatico.py',120),
  ('declaracao -> COMMENT','declaracao',1,'p_declaracao','sintatico.py',121),
  ('declaracao -> <empty>','declaracao',0,'p_declaracao','sintatico.py',122),
  ('declaracao_variavel -> ID EQUAL expressao PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',124),
  ('declaracao_variavel -> tipo ID PONTO_VIRGULA','declaracao_variavel',3,'p_declaracao','sintatico.py',125),
  ('declaracao_variavel -> tipo ID EQUAL expressao PONTO_VIRGULA','declaracao_variavel',5,'p_declaracao','sintatico.py',126),
  ('declaracao_variavel -> tipo array EQUAL expressao PONTO_VIRGULA','declaracao_variavel',5,'p_declaracao','sintatico.py',127),
  ('declaracao_variavel -> ID PLUS PLUS PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',128),
  ('declaracao_variavel -> ID MINUS MINUS PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',129),
  ('declaracao_variavel -> declaracao_variavel declaracao_variavel','declaracao_variavel',2,'p_declaracao','sintatico.py',130),
  ('declaracao_funcao -> tipo ID PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',132),
  ('declaracao_funcao -> VOID ID PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',133),
  ('declaracao_funcao -> tipo MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',134),
  ('declaracao_funcao -> VOID MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',135),
  ('declaracao_estrutura -> STRUCT ID COLCHETE_ABERTO declaracao_variavel COLCHETE_FECHADO','declaracao_estrutura',5,'p_declaracao','sintatico.py',137),
  ('declaracao_ou_coisas -> declaracao_ou_coisas declaracao_ou_coisas','declaracao_ou_coisas',2,'p_declaracao','sintatico.py',139),
  ('declaracao_ou_coisas -> retorno','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',140),
  ('declaracao_ou_coisas -> declaracao_variavel','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',141),
  ('declaracao_ou_coisas -> estrutura_de_controle','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',142),
  ('declaracao_ou_coisas -> print','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',143),
  ('declaracao_ou_coisas -> COMMENT','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',144),
  ('declaracao_ou_coisas -> <empty>','declaracao_ou_coisas',0,'p_declaracao','sintatico.py',145),
  ('estrutura_de_controle -> if','estrutura_de_controle',1,'p_declaracao','sintatico.py',147),
  ('estrutura_de_controle -> while','estrutura_de_controle',1,'p_declaracao','sintatico.py',148),
  ('estrutura_de_controle -> for','estrutura_de_controle',1,'p_declaracao','sintatico.py',149),
  ('estrutura_de_controle -> switch','estrutura_de_controle',1,'p_declaracao','sintatico.py',150),
  ('print -> PRINTLN PAREN_ABERTO expressao PAREN_FECHADO PONTO_VIRGULA','print',5,'p_declaracao','sintatico.py',152),
  ('print -> <empty>','print',0,'p_declaracao','sintatico.py',153),
  ('print_statement -> atribuicao operador','print_statement',2,'p_declaracao','sintatico.py',155),
  ('print_statement -> atribuicao operador print_statement','print_statement',3,'p_declaracao','sintatico.py',156),
  ('print_statement -> atribuicao','print_statement',1,'p_declaracao','sintatico.py',157),
  ('operador -> PLUS','operador',1,'p_operador','sintatico.py',160),
  ('operador -> MINUS','operador',1,'p_operador','sintatico.py',161),
  ('operador -> TIMES','operador',1,'p_operador','sintatico.py',162),
  ('operador -> DIVIDE','operador',1,'p_operador','sintatico.py',163),
  ('operador -> REST','operador',1,'p_operador','sintatico.py',164),
  ('tipo -> INT','tipo',1,'p_tipo','sintatico.py',167),
  ('tipo -> STRING','tipo',1,'p_tipo','sintatico.py',168),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','sintatico.py',169),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','sintatico.py',170),
  ('tipo -> CHAR','tipo',1,'p_tipo','sintatico.py',171),
  ('tipo -> FLOAT','tipo',1,'p_tipo','sintatico.py',172),
  ('expressao -> atribuicao','expressao',1,'p_expressao','sintatico.py',175),
  ('atribuicao -> NUMBER_DEC','atribuicao',1,'p_expressao','sintatico.py',177),
  ('atribuicao -> NUMBER_INT','atribuicao',1,'p_expressao','sintatico.py',178),
  ('atribuicao -> TYPE_FLOAT','atribuicao',1,'p_expressao','sintatico.py',179),
  ('atribuicao -> TYPE_STRING','atribuicao',1,'p_expressao','sintatico.py',180),
  ('atribuicao -> TYPE_BOOLEAN','atribuicao',1,'p_expressao','sintatico.py',181),
  ('atribuicao -> TYPE_CHAR','atribuicao',1,'p_expressao','sintatico.py',182),
  ('atribuicao -> ID','atribuicao',1,'p_expressao','sintatico.py',183),
  ('atribuicao -> ID operador expressao','atribuicao',3,'p_expressao','sintatico.py',184),
  ('atribuicao -> ID EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',185),
  ('atribuicao -> ID PLUS_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',186),
  ('atribuicao -> ID MINUS_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',187),
  ('atribuicao -> ID TIMES_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',188),
  ('atribuicao -> ID DIVIDE_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',189),
  ('atribuicao -> ID REST_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',190),
  ('atribuicao -> ID AND EQUAL expressao','atribuicao',4,'p_expressao','sintatico.py',191),
  ('atribuicao -> ID OR EQUAL expressao','atribuicao',4,'p_expressao','sintatico.py',192),
  ('atribuicao -> ID comparador expressao','atribuicao',3,'p_expressao','sintatico.py',193),
  ('atribuicao -> variavel_ou_valor PLUS_PLUS','atribuicao',2,'p_expressao','sintatico.py',194),
  ('atribuicao -> variavel_ou_valor MINUS_MINUS','atribuicao',2,'p_expressao','sintatico.py',195),
  ('atribuicao -> expressao_logica','atribuicao',1,'p_expressao','sintatico.py',196),
  ('expressao_logica -> expressao_relacional','expressao_logica',1,'p_expressao','sintatico.py',198),
  ('expressao_logica -> expressao_logica AND expressao_relacional','expressao_logica',3,'p_expressao','sintatico.py',199),
  ('expressao_logica -> expressao_logica OR expressao_relacional','expressao_logica',3,'p_expressao','sintatico.py',200),
  ('expressao_logica -> NOT expressao_relacional','expressao_logica',2,'p_expressao','sintatico.py',201),
  ('expressao_relacional -> expressao_aritmetica','expressao_relacional',1,'p_expressao','sintatico.py',203),
  ('expressao_relacional -> expressao_aritmetica comparador expressao_aritmetica','expressao_relacional',3,'p_expressao','sintatico.py',204),
  ('expressao_aritmetica -> expressao_multiplicativa','expressao_aritmetica',1,'p_expressao','sintatico.py',206),
  ('expressao_aritmetica -> expressao_aritmetica PLUS expressao_multiplicativa','expressao_aritmetica',3,'p_expressao','sintatico.py',207),
  ('expressao_aritmetica -> expressao_aritmetica MINUS expressao_multiplicativa','expressao_aritmetica',3,'p_expressao','sintatico.py',208),
  ('expressao_multiplicativa -> expressao_unaria','expressao_multiplicativa',1,'p_expressao','sintatico.py',210),
  ('expressao_multiplicativa -> expressao_multiplicativa TIMES expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',211),
  ('expressao_multiplicativa -> expressao_multiplicativa DIVIDE expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',212),
  ('expressao_multiplicativa -> expressao_multiplicativa REST expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',213),
  ('expressao_unaria -> expressao_postfix','expressao_unaria',1,'p_expressao','sintatico.py',215),
  ('expressao_unaria -> MINUS expressao_unaria','expressao_unaria',2,'p_expressao','sintatico.py',216),
  ('expressao_unaria -> PLUS_PLUS expressao_postfix','expressao_unaria',2,'p_expressao','sintatico.py',217),
  ('expressao_unaria -> MINUS_MINUS expressao_postfix','expressao_unaria',2,'p_expressao','sintatico.py',218),
  ('expressao_postfix -> primaria','expressao_postfix',1,'p_expressao','sintatico.py',220),
  ('expressao_postfix -> primaria CHAVE_ABERTA expressao CHAVE_FECHADA','expressao_postfix',4,'p_expressao','sintatico.py',221),
  ('expressao_postfix -> primaria PAREN_ABERTO argumentos PAREN_FECHADO','expressao_postfix',4,'p_expressao','sintatico.py',222),
  ('expressao_postfix -> primaria DOT ID','expressao_postfix',3,'p_expressao','sintatico.py',223),
  ('argumentos -> expressao_lista','argumentos',1,'p_expressao','sintatico.py',225),
  ('argumentos -> <empty>','argumentos',0,'p_expressao','sintatico.py',226),
  ('expressao_lista -> <empty>','expressao_lista',0,'p_expressao','sintatico.py',228),
  ('primaria -> variavel_ou_valor','primaria',1,'p_expressao','sintatico.py',230),
  ('primaria -> PAREN_ABERTO expressao PAREN_FECHADO','primaria',3,'p_expressao','sintatico.py',231),
  ('parametros -> parametro','parametros',1,'p_parametros','sintatico.py',234),
  ('parametros -> parametro VIRGULA parametros','parametros',3,'p_parametros','sintatico.py',235),
  ('parametros -> <empty>','parametros',0,'p_parametros','sintatico.py',236),
  ('parametro -> tipo ID','parametro',2,'p_parametros','sintatico.py',238),
  ('parametro -> tipo ID CHAVE_ABERTA CHAVE_FECHADA','parametro',4,'p_parametros','sintatico.py',239),
  ('bloco -> COLCHETE_ABERTO declaracao_ou_coisas COLCHETE_FECHADO','bloco',3,'p_bloco','sintatico.py',242),
  ('retorno -> RETURN PONTO_VIRGULA','retorno',2,'p_retorno','sintatico.py',245),
  ('retorno -> RETURN ID PONTO_VIRGULA','retorno',3,'p_retorno','sintatico.py',246),
  ('retorno -> RETURN expressao PONTO_VIRGULA','retorno',3,'p_retorno','sintatico.py',247),
  ('retorno -> RETURN ID PAREN_ABERTO parametros_dado PAREN_FECHADO PONTO_VIRGULA','retorno',6,'p_retorno','sintatico.py',248),
  ('parametros_dado -> variavel_ou_valor VIRGULA parametros_dado','parametros_dado',3,'p_retorno','sintatico.py',250),
  ('parametros_dado -> variavel_ou_valor','parametros_dado',1,'p_retorno','sintatico.py',251),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco','if',5,'p_if_switch','sintatico.py',254),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco ELSE bloco','if',7,'p_if_switch','sintatico.py',255),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco elseif ELSE bloco','if',8,'p_if_switch','sintatico.py',256),
  ('elseif -> ELSEIF PAREN_ABERTO statement PAREN_FECHADO bloco elseif','elseif',6,'p_if_switch','sintatico.py',258),
  ('elseif -> <empty>','elseif',0,'p_if_switch','sintatico.py',259),
  ('statement -> variavel_ou_valor comparador variavel_ou_valor operador_logico','statement',4,'p_if_switch','sintatico.py',261),
  ('variavel_ou_valor -> ID','variavel_ou_valor',1,'p_if_switch','sintatico.py',263),
  ('variavel_ou_valor -> NUMBER_DEC','variavel_ou_valor',1,'p_if_switch','sintatico.py',264),
  ('variavel_ou_valor -> NUMBER_INT','variavel_ou_valor',1,'p_if_switch','sintatico.py',265),
  ('variavel_ou_valor -> TYPE_STRING','variavel_ou_valor',1,'p_if_switch','sintatico.py',266),
  ('variavel_ou_valor -> TYPE_BOOLEAN','variavel_ou_valor',1,'p_if_switch','sintatico.py',267),
  ('variavel_ou_valor -> TYPE_CHAR','variavel_ou_valor',1,'p_if_switch','sintatico.py',268),
  ('variavel_ou_valor -> TYPE_FLOAT','variavel_ou_valor',1,'p_if_switch','sintatico.py',269),
  ('switch -> SWITCH PAREN_ABERTO ID PAREN_FECHADO bloco_switch','switch',5,'p_if_switch','sintatico.py',271),
  ('bloco_switch -> COLCHETE_ABERTO cases COLCHETE_FECHADO','bloco_switch',3,'p_if_switch','sintatico.py',273),
  ('cases -> cases cases','cases',2,'p_if_switch','sintatico.py',275),
  ('cases -> CASE expressao DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA','cases',6,'p_if_switch','sintatico.py',276),
  ('cases -> DEFAULT DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA','cases',5,'p_if_switch','sintatico.py',277),
  ('cases -> <empty>','cases',0,'p_if_switch','sintatico.py',278),
  ('while -> WHILE PAREN_ABERTO statement PAREN_FECHADO bloco','while',5,'p_loop','sintatico.py',281),
  ('for -> FOR PAREN_ABERTO tipo ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO bloco','for',14,'p_loop','sintatico.py',283),
  ('for -> FOR PAREN_ABERTO ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO bloco','for',13,'p_loop','sintatico.py',284),
  ('comparador -> LESS_THAN','comparador',1,'p_comparador','sintatico.py',287),
  ('comparador -> IS_EQUALS','comparador',1,'p_comparador','sintatico.py',288),
  ('comparador -> LESS_THAN_OR_EQUALS','comparador',1,'p_comparador','sintatico.py',289),
  ('comparador -> GREATER_THAN','comparador',1,'p_comparador','sintatico.py',290),
  ('comparador -> GREATER_THAN_OR_EQUALS','comparador',1,'p_comparador','sintatico.py',291),
  ('comparador -> IS_DIFFERENT','comparador',1,'p_comparador','sintatico.py',292),
  ('operador_logico -> AND statement','operador_logico',2,'p_operador_logico','sintatico.py',295),
  ('operador_logico -> OR statement','operador_logico',2,'p_operador_logico','sintatico.py',296),
  ('operador_logico -> <empty>','operador_logico',0,'p_operador_logico','sintatico.py',297),
  ('array -> ID chaves_array','array',2,'p_array','sintatico.py',300),
  ('array -> array_inicializacao','array',1,'p_array','sintatico.py',301),
  ('array_inicializacao -> COLCHETE_ABERTO expressao COLCHETE_FECHADO','array_inicializacao',3,'p_array','sintatico.py',303),
  ('chaves_array -> CHAVE_ABERTA expressao CHAVE_FECHADA','chaves_array',3,'p_array','sintatico.py',305),
  ('chaves_array -> CHAVE_ABERTA CHAVE_FECHADA','chaves_array',2,'p_array','sintatico.py',306),
]
