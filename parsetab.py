
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN BREAK CASE CHAR CHAVE_ABERTA CHAVE_FECHADA COLCHETE_ABERTO COLCHETE_FECHADO COMMENT COMPARE_OPERATOR CONTINUE DEFAULT DIVIDE DIVIDE_EQUAL DOIS_PONTOS DOUBLE ELSE ELSEIF EQUAL FLOAT FOR GREATER_THAN GREATER_THAN_OR_EQUALS ID IF INT IS_DIFFERENT IS_EQUALS LESS_THAN LESS_THAN_OR_EQUALS MAIN MINUS MINUS_EQUAL MINUS_MINUS NOT NUMBER_DEC NUMBER_INT OPERATOR OR PAREN_ABERTO PAREN_FECHADO PLUS PLUS_EQUAL PLUS_PLUS PONTO_VIRGULA PRINTLN REST REST_EQUAL RETURN SCANF SPECIAL_SYMBOL STRING STRUCT SWITCH TIMES TIMES_EQUAL TYPE_BOOLEAN TYPE_CHAR TYPE_FLOAT TYPE_STRING VIRGULA VOID WHILEprograma : declaracaodeclaracao : declaracao declaracao\n    | declaracao_variavel\n    | declaracao_funcao\n    | declaracao_estrutura\n    | estrutura_de_controle\n    | print\n    | COMMENT\n    | \n    \n    declaracao_variavel : ID EQUAL expressao PONTO_VIRGULA\n    | tipo ID PONTO_VIRGULA\n    | tipo ID EQUAL expressao PONTO_VIRGULA\n    | tipo array EQUAL expressao PONTO_VIRGULA\n    | ID PLUS PLUS PONTO_VIRGULA\n    | ID MINUS MINUS PONTO_VIRGULA\n    | declaracao_variavel declaracao_variavel\n    \n    declaracao_funcao : tipo ID PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | VOID ID PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | tipo MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | VOID MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco\n    \n    declaracao_estrutura : STRUCT ID COLCHETE_ABERTO declaracao_variavel COLCHETE_FECHADO\n    \n    declaracao_ou_coisas : declaracao_ou_coisas declaracao_ou_coisas\n    | retorno\n    | declaracao_variavel\n    | estrutura_de_controle\n    | print\n    | COMMENT\n    | \n\n    coisas_bloco : coisas_bloco coisas_bloco\n    | declaracao_variavel\n    | BREAK PONTO_VIRGULA\n    | CONTINUE PONTO_VIRGULA\n    | retorno\n    | estrutura_de_controle\n    | print\n    | COMMENT\n    | \n    \n    estrutura_de_controle : if\n    | while\n    | for\n    | switch\n    \n    print : PRINTLN PAREN_ABERTO expressao PAREN_FECHADO PONTO_VIRGULA\n    | \n    \n    print_statement : atribuicao operador\n    | atribuicao operador print_statement\n    | atribuicaooperador : PLUS\n    | MINUS\n    | TIMES\n    | DIVIDE\n    | RESTtipo : INT\n    | STRING\n    | BOOLEAN\n    | DOUBLE\n    | CHAR\n    | FLOATexpressao : atribuicao\n    \n    atribuicao : NUMBER_DEC\n    | NUMBER_INT\n    | TYPE_FLOAT\n    | TYPE_STRING\n    | TYPE_BOOLEAN\n    | TYPE_CHAR\n    | ID\n    | ID operador expressao\n    | ID EQUAL expressao\n    | ID PLUS_EQUAL expressao\n    | ID MINUS_EQUAL expressao\n    | ID TIMES_EQUAL expressao\n    | ID DIVIDE_EQUAL expressao\n    | ID REST_EQUAL expressao\n    | ID AND EQUAL expressao\n    | ID OR EQUAL expressao\n    | ID comparador expressao\n    | variavel_ou_valor PLUS_PLUS\n    | variavel_ou_valor MINUS_MINUS\n    | expressao_logica\n    \n    expressao_logica : expressao_relacional\n    | expressao_logica AND expressao_relacional\n    | expressao_logica OR expressao_relacional\n    | NOT expressao_relacional\n    \n    expressao_relacional : expressao_aritmetica\n    | expressao_aritmetica comparador expressao_aritmetica\n    \n    expressao_aritmetica : expressao_multiplicativa\n    | expressao_aritmetica PLUS expressao_multiplicativa\n    | expressao_aritmetica MINUS expressao_multiplicativa\n    \n    expressao_multiplicativa : expressao_unaria\n    | expressao_multiplicativa TIMES expressao_unaria\n    | expressao_multiplicativa DIVIDE expressao_unaria\n    | expressao_multiplicativa REST expressao_unaria\n    \n    expressao_unaria : expressao_postfix\n    | MINUS expressao_unaria\n    | PLUS_PLUS expressao_postfix\n    | MINUS_MINUS expressao_postfix\n    \n    expressao_postfix : primaria\n    | primaria CHAVE_ABERTA expressao CHAVE_FECHADA\n    | primaria PAREN_ABERTO argumentos PAREN_FECHADO\n    \n    argumentos : expressao_lista\n    | \n\n    expressao_lista : \n    \n    primaria : variavel_ou_valor\n    | PAREN_ABERTO expressao PAREN_FECHADOparametros : parametro\n    | parametro VIRGULA parametros\n    | \n    \n    parametro : tipo ID\n    | tipo ID CHAVE_ABERTA CHAVE_FECHADAbloco : COLCHETE_ABERTO coisas_bloco COLCHETE_FECHADOretorno : RETURN PONTO_VIRGULA\n    | RETURN ID PONTO_VIRGULA\n    | RETURN expressao PONTO_VIRGULA\n    | RETURN ID PAREN_ABERTO parametros_dado PAREN_FECHADO PONTO_VIRGULA\n    \n    parametros_dado : variavel_ou_valor VIRGULA parametros_dado\n    | variavel_ou_valorif : IF PAREN_ABERTO statement PAREN_FECHADO bloco\n    | IF PAREN_ABERTO statement PAREN_FECHADO bloco ELSE bloco\n    | IF PAREN_ABERTO statement PAREN_FECHADO bloco elseif ELSE bloco\n\n    elseif : ELSEIF PAREN_ABERTO statement PAREN_FECHADO bloco elseif\n    | \n    \n    statement : expressao\n    \n    variavel_ou_valor : ID\n    | NUMBER_DEC\n    | NUMBER_INT\n    | TYPE_STRING\n    | TYPE_BOOLEAN\n    | TYPE_CHAR\n    | TYPE_FLOAT\n    \n    switch : SWITCH PAREN_ABERTO expressao PAREN_FECHADO bloco_switch\n    \n    bloco_switch : COLCHETE_ABERTO cases COLCHETE_FECHADO\n    \n    cases : cases cases\n    | CASE expressao DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA\n    | DEFAULT DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA\n    | while : WHILE PAREN_ABERTO statement PAREN_FECHADO bloco\n    \n    for : FOR PAREN_ABERTO expressao PONTO_VIRGULA expressao PONTO_VIRGULA expressao PAREN_FECHADO blococomparador : LESS_THAN\n    | IS_EQUALS\n    | LESS_THAN_OR_EQUALS\n    | GREATER_THAN\n    | GREATER_THAN_OR_EQUALS\n    | IS_DIFFERENToperador_logico : AND statement\n    | OR statement\n    | array : ID chaves_array\n    | array_inicializacao\n    \n    array_inicializacao : COLCHETE_ABERTO expressao COLCHETE_FECHADO\n    \n    chaves_array : CHAVE_ABERTA expressao CHAVE_FECHADA\n    | CHAVE_ABERTA CHAVE_FECHADA'
    
_lr_action_items = {'COMMENT':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,110,136,137,177,182,186,187,188,189,190,192,199,201,202,203,207,208,211,212,213,214,221,224,225,226,227,228,233,235,236,238,240,242,243,244,245,246,247,248,252,253,254,262,],[8,8,-3,-4,-5,-6,-7,-8,-38,-39,-40,-41,8,-16,-11,-10,-14,-15,-12,-13,-21,-42,-116,214,-135,-129,-17,-19,-18,-20,214,-30,-33,-34,-35,-36,-117,214,-109,-31,-32,-110,-130,248,-118,-111,-112,248,248,-23,-24,-25,-26,-27,-136,248,248,-113,]),'ID':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,28,29,30,31,38,42,43,44,45,46,58,59,62,65,69,72,73,76,77,82,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,123,124,126,127,128,129,130,131,133,136,137,139,149,153,162,163,177,182,186,187,188,189,190,192,199,201,202,203,207,208,211,212,213,214,215,216,218,221,223,224,225,226,227,228,233,235,236,238,239,240,242,243,244,245,246,247,248,252,253,254,258,262,],[9,9,9,-4,-5,-6,-7,-8,34,39,41,-38,-39,-40,-41,-52,-53,-54,-55,-56,-57,9,9,47,48,48,48,48,48,48,48,115,115,115,115,48,-11,48,48,48,9,48,48,48,48,48,48,48,48,-47,-48,-49,-50,-51,-137,-138,-139,-140,-141,-142,-10,115,115,115,115,115,115,115,115,48,-14,-15,178,9,48,48,48,-12,-13,-21,-42,-116,9,-135,-129,-17,-19,-18,-20,9,9,-33,-34,-35,-36,229,48,48,-117,48,9,-109,-31,-32,-110,-130,9,-118,-111,115,-112,9,9,-23,9,-25,-26,-27,-136,9,9,115,-113,]),'VOID':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,110,136,137,177,182,186,187,188,190,192,199,201,202,203,221,225,233,236,252,],[11,11,-3,-4,-5,-6,-7,-8,-38,-39,-40,-41,11,-16,-11,-10,-14,-15,-12,-13,-21,-42,-116,-135,-129,-17,-19,-18,-20,-117,-109,-130,-118,-136,]),'STRUCT':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,110,136,137,177,182,186,187,188,190,192,199,201,202,203,221,225,233,236,252,],[12,12,-3,-4,-5,-6,-7,-8,-38,-39,-40,-41,12,-16,-11,-10,-14,-15,-12,-13,-21,-42,-116,-135,-129,-17,-19,-18,-20,-117,-109,-130,-118,-136,]),'PRINTLN':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,110,136,137,177,182,186,187,188,189,190,192,199,201,202,203,207,208,211,212,213,214,221,224,225,226,227,228,233,235,236,238,240,242,243,244,245,246,247,248,252,253,254,262,],[17,17,-3,-4,-5,-6,-7,-8,-38,-39,-40,-41,17,-16,-11,-10,-14,-15,-12,-13,-21,-42,-116,17,-135,-129,-17,-19,-18,-20,17,-30,-33,-34,-35,-36,-117,17,-109,-31,-32,-110,-130,17,-118,-111,-112,17,17,-23,-24,-25,-26,-27,-136,17,17,-113,]),'INT':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,74,78,80,81,82,110,136,137,149,177,180,182,186,187,188,189,190,192,199,201,202,203,207,208,211,212,213,214,221,224,225,226,227,228,233,235,236,238,240,242,243,244,245,246,247,248,252,253,254,262,],[18,18,18,-4,-5,-6,-7,-8,-38,-39,-40,-41,18,18,-11,18,18,18,18,18,-10,-14,-15,18,-12,18,-13,-21,-42,-116,18,-135,-129,-17,-19,-18,-20,18,18,-33,-34,-35,-36,-117,18,-109,-31,-32,-110,-130,18,-118,-111,-112,18,18,-23,18,-25,-26,-27,-136,18,18,-113,]),'STRING':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,74,78,80,81,82,110,136,137,149,177,180,182,186,187,188,189,190,192,199,201,202,203,207,208,211,212,213,214,221,224,225,226,227,228,233,235,236,238,240,242,243,244,245,246,247,248,252,253,254,262,],[19,19,19,-4,-5,-6,-7,-8,-38,-39,-40,-41,19,19,-11,19,19,19,19,19,-10,-14,-15,19,-12,19,-13,-21,-42,-116,19,-135,-129,-17,-19,-18,-20,19,19,-33,-34,-35,-36,-117,19,-109,-31,-32,-110,-130,19,-118,-111,-112,19,19,-23,19,-25,-26,-27,-136,19,19,-113,]),'BOOLEAN':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,74,78,80,81,82,110,136,137,149,177,180,182,186,187,188,189,190,192,199,201,202,203,207,208,211,212,213,214,221,224,225,226,227,228,233,235,236,238,240,242,243,244,245,246,247,248,252,253,254,262,],[20,20,20,-4,-5,-6,-7,-8,-38,-39,-40,-41,20,20,-11,20,20,20,20,20,-10,-14,-15,20,-12,20,-13,-21,-42,-116,20,-135,-129,-17,-19,-18,-20,20,20,-33,-34,-35,-36,-117,20,-109,-31,-32,-110,-130,20,-118,-111,-112,20,20,-23,20,-25,-26,-27,-136,20,20,-113,]),'DOUBLE':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,74,78,80,81,82,110,136,137,149,177,180,182,186,187,188,189,190,192,199,201,202,203,207,208,211,212,213,214,221,224,225,226,227,228,233,235,236,238,240,242,243,244,245,246,247,248,252,253,254,262,],[21,21,21,-4,-5,-6,-7,-8,-38,-39,-40,-41,21,21,-11,21,21,21,21,21,-10,-14,-15,21,-12,21,-13,-21,-42,-116,21,-135,-129,-17,-19,-18,-20,21,21,-33,-34,-35,-36,-117,21,-109,-31,-32,-110,-130,21,-118,-111,-112,21,21,-23,21,-25,-26,-27,-136,21,21,-113,]),'CHAR':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,74,78,80,81,82,110,136,137,149,177,180,182,186,187,188,189,190,192,199,201,202,203,207,208,211,212,213,214,221,224,225,226,227,228,233,235,236,238,240,242,243,244,245,246,247,248,252,253,254,262,],[22,22,22,-4,-5,-6,-7,-8,-38,-39,-40,-41,22,22,-11,22,22,22,22,22,-10,-14,-15,22,-12,22,-13,-21,-42,-116,22,-135,-129,-17,-19,-18,-20,22,22,-33,-34,-35,-36,-117,22,-109,-31,-32,-110,-130,22,-118,-111,-112,22,22,-23,22,-25,-26,-27,-136,22,22,-113,]),'FLOAT':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,74,78,80,81,82,110,136,137,149,177,180,182,186,187,188,189,190,192,199,201,202,203,207,208,211,212,213,214,221,224,225,226,227,228,233,235,236,238,240,242,243,244,245,246,247,248,252,253,254,262,],[23,23,23,-4,-5,-6,-7,-8,-38,-39,-40,-41,23,23,-11,23,23,23,23,23,-10,-14,-15,23,-12,23,-13,-21,-42,-116,23,-135,-129,-17,-19,-18,-20,23,23,-33,-34,-35,-36,-117,23,-109,-31,-32,-110,-130,23,-118,-111,-112,23,23,-23,23,-25,-26,-27,-136,23,23,-113,]),'IF':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,110,136,137,177,182,186,187,188,189,190,192,199,201,202,203,207,208,211,212,213,214,221,224,225,226,227,228,233,235,236,238,240,242,243,244,245,246,247,248,252,253,254,262,],[24,24,-3,-4,-5,-6,-7,-8,-38,-39,-40,-41,24,-16,-11,-10,-14,-15,-12,-13,-21,-42,-116,24,-135,-129,-17,-19,-18,-20,24,-30,-33,-34,-35,-36,-117,24,-109,-31,-32,-110,-130,24,-118,-111,-112,24,24,-23,-24,-25,-26,-27,-136,24,24,-113,]),'WHILE':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,110,136,137,177,182,186,187,188,189,190,192,199,201,202,203,207,208,211,212,213,214,221,224,225,226,227,228,233,235,236,238,240,242,243,244,245,246,247,248,252,253,254,262,],[25,25,-3,-4,-5,-6,-7,-8,-38,-39,-40,-41,25,-16,-11,-10,-14,-15,-12,-13,-21,-42,-116,25,-135,-129,-17,-19,-18,-20,25,-30,-33,-34,-35,-36,-117,25,-109,-31,-32,-110,-130,25,-118,-111,-112,25,25,-23,-24,-25,-26,-27,-136,25,25,-113,]),'FOR':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,110,136,137,177,182,186,187,188,189,190,192,199,201,202,203,207,208,211,212,213,214,221,224,225,226,227,228,233,235,236,238,240,242,243,244,245,246,247,248,252,253,254,262,],[26,26,-3,-4,-5,-6,-7,-8,-38,-39,-40,-41,26,-16,-11,-10,-14,-15,-12,-13,-21,-42,-116,26,-135,-129,-17,-19,-18,-20,26,-30,-33,-34,-35,-36,-117,26,-109,-31,-32,-110,-130,26,-118,-111,-112,26,26,-23,-24,-25,-26,-27,-136,26,26,-113,]),'SWITCH':([0,2,3,4,5,6,7,8,13,14,15,16,28,29,72,110,136,137,177,182,186,187,188,189,190,192,199,201,202,203,207,208,211,212,213,214,221,224,225,226,227,228,233,235,236,238,240,242,243,244,245,246,247,248,252,253,254,262,],[27,27,-3,-4,-5,-6,-7,-8,-38,-39,-40,-41,27,-16,-11,-10,-14,-15,-12,-13,-21,-42,-116,27,-135,-129,-17,-19,-18,-20,27,-30,-33,-34,-35,-36,-117,27,-109,-31,-32,-110,-130,27,-118,-111,-112,27,27,-23,-24,-25,-26,-27,-136,27,27,-113,]),'$end':([0,1,2,3,4,5,6,7,8,13,14,15,16,28,29,72,110,136,137,177,182,186,187,188,190,192,199,201,202,203,221,225,233,236,252,],[-9,0,-1,-3,-4,-5,-6,-7,-8,-38,-39,-40,-41,-2,-16,-11,-10,-14,-15,-12,-13,-21,-42,-116,-135,-129,-17,-19,-18,-20,-117,-109,-130,-118,-136,]),'EQUAL':([9,34,35,37,47,48,75,96,97,143,146,181,229,],[31,73,77,-147,73,90,-146,162,163,-150,-148,-149,90,]),'PLUS':([9,32,48,51,52,53,54,55,56,57,63,64,66,67,68,113,114,115,116,117,118,119,120,121,122,132,167,168,169,170,171,172,176,196,197,229,],[32,70,99,-123,-124,-128,-125,-126,-127,-102,127,-85,-88,-92,-96,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-93,127,-86,-87,-89,-90,-91,-103,-97,-98,99,]),'MINUS':([9,31,33,38,42,43,44,45,46,48,51,52,53,54,55,56,57,62,63,64,65,66,67,68,69,73,76,77,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,153,162,163,167,168,169,170,171,172,176,196,197,215,216,218,223,229,],[33,65,71,65,65,65,65,65,65,100,-123,-124,-128,-125,-126,-127,-102,65,128,-85,65,-88,-92,-96,65,65,65,65,65,65,65,65,65,65,65,65,-47,-48,-49,-50,-51,-137,-138,-139,-140,-141,-142,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,65,65,65,65,65,65,65,65,-93,65,65,65,65,128,-86,-87,-89,-90,-91,-103,-97,-98,65,65,65,65,100,]),'MAIN':([10,11,18,19,20,21,22,23,],[36,40,-52,-53,-54,-55,-56,-57,]),'COLCHETE_ABERTO':([10,18,19,20,21,22,23,30,41,151,152,154,179,183,184,185,204,222,241,249,],[38,-52,-53,-54,-55,-56,-57,38,82,189,189,193,189,189,189,189,189,189,189,189,]),'COLCHETE_FECHADO':([13,14,15,16,29,48,50,51,52,53,54,55,56,57,60,61,63,64,66,67,68,72,79,110,111,112,113,114,115,116,117,118,119,120,121,122,125,132,136,137,149,155,156,157,158,159,160,161,164,165,166,167,168,169,170,171,172,176,177,182,187,188,189,190,192,193,194,195,196,197,207,208,211,212,213,214,217,221,224,225,226,227,228,232,233,236,238,240,252,260,262,264,],[-38,-39,-40,-41,-16,-65,-58,-59,-60,-61,-62,-63,-64,-102,-78,-79,-83,-85,-88,-92,-96,-11,146,-10,-76,-77,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-82,-93,-14,-15,186,-66,-67,-68,-69,-70,-71,-72,-75,-80,-81,-84,-86,-87,-89,-90,-91,-103,-12,-13,-42,-116,-37,-135,-129,-134,-73,-74,-97,-98,225,-30,-33,-34,-35,-36,233,-117,-29,-109,-31,-32,-110,-131,-130,-118,-111,-112,-136,-133,-113,-132,]),'BREAK':([13,14,15,16,29,72,110,136,137,177,182,187,188,189,190,192,207,208,211,212,213,214,221,224,225,226,227,228,233,235,236,238,240,242,243,244,245,246,247,248,252,253,254,262,],[-38,-39,-40,-41,-16,-11,-10,-14,-15,-12,-13,-42,-116,209,-135,-129,209,-30,-33,-34,-35,-36,-117,209,-109,-31,-32,-110,-130,-28,-118,-111,-112,-28,255,-23,-24,-25,-26,-27,-136,259,-22,-113,]),'CONTINUE':([13,14,15,16,29,72,110,136,137,177,182,187,188,189,190,192,207,208,211,212,213,214,221,224,225,226,227,228,233,236,238,240,252,262,],[-38,-39,-40,-41,-16,-11,-10,-14,-15,-12,-13,-42,-116,210,-135,-129,210,-30,-33,-34,-35,-36,-117,210,-109,-31,-32,-110,-130,-118,-111,-112,-136,-113,]),'RETURN':([13,14,15,16,29,72,110,136,137,177,182,187,188,189,190,192,207,208,211,212,213,214,221,224,225,226,227,228,233,235,236,238,240,242,243,244,245,246,247,248,252,253,254,262,],[-38,-39,-40,-41,-16,-11,-10,-14,-15,-12,-13,-42,-116,215,-135,-129,215,-30,-33,-34,-35,-36,-117,215,-109,-31,-32,-110,-130,215,-118,-111,-112,215,215,-23,-24,-25,-26,-27,-136,215,215,-113,]),'PAREN_ABERTO':([17,24,25,26,27,31,34,36,38,39,40,42,43,44,45,46,48,51,52,53,54,55,56,57,58,59,62,65,68,69,73,76,77,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,118,119,120,121,123,124,126,127,128,129,130,131,133,153,162,163,176,206,215,216,218,223,229,],[42,43,44,45,46,69,74,78,69,80,81,69,69,69,69,69,-122,-123,-124,-128,-125,-126,-127,-102,69,69,69,69,134,69,69,69,69,69,69,69,69,69,69,69,69,-47,-48,-49,-50,-51,-137,-138,-139,-140,-141,-142,-102,-122,-123,-124,-125,-126,-127,-128,69,69,69,69,69,69,69,69,69,69,69,69,-103,223,69,69,69,69,239,]),'NUMBER_DEC':([31,38,42,43,44,45,46,58,59,62,65,69,73,76,77,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,123,124,126,127,128,129,130,131,133,153,162,163,215,216,218,223,239,258,],[51,51,51,51,51,51,51,116,116,116,116,51,51,51,51,51,51,51,51,51,51,51,51,-47,-48,-49,-50,-51,-137,-138,-139,-140,-141,-142,116,116,116,116,116,116,116,116,51,51,51,51,51,51,51,51,116,116,]),'NUMBER_INT':([31,38,42,43,44,45,46,58,59,62,65,69,73,76,77,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,123,124,126,127,128,129,130,131,133,153,162,163,215,216,218,223,239,258,],[52,52,52,52,52,52,52,117,117,117,117,52,52,52,52,52,52,52,52,52,52,52,52,-47,-48,-49,-50,-51,-137,-138,-139,-140,-141,-142,117,117,117,117,117,117,117,117,52,52,52,52,52,52,52,52,117,117,]),'TYPE_FLOAT':([31,38,42,43,44,45,46,58,59,62,65,69,73,76,77,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,123,124,126,127,128,129,130,131,133,153,162,163,215,216,218,223,239,258,],[53,53,53,53,53,53,53,121,121,121,121,53,53,53,53,53,53,53,53,53,53,53,53,-47,-48,-49,-50,-51,-137,-138,-139,-140,-141,-142,121,121,121,121,121,121,121,121,53,53,53,53,53,53,53,53,121,121,]),'TYPE_STRING':([31,38,42,43,44,45,46,58,59,62,65,69,73,76,77,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,123,124,126,127,128,129,130,131,133,153,162,163,215,216,218,223,239,258,],[54,54,54,54,54,54,54,118,118,118,118,54,54,54,54,54,54,54,54,54,54,54,54,-47,-48,-49,-50,-51,-137,-138,-139,-140,-141,-142,118,118,118,118,118,118,118,118,54,54,54,54,54,54,54,54,118,118,]),'TYPE_BOOLEAN':([31,38,42,43,44,45,46,58,59,62,65,69,73,76,77,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,123,124,126,127,128,129,130,131,133,153,162,163,215,216,218,223,239,258,],[55,55,55,55,55,55,55,119,119,119,119,55,55,55,55,55,55,55,55,55,55,55,55,-47,-48,-49,-50,-51,-137,-138,-139,-140,-141,-142,119,119,119,119,119,119,119,119,55,55,55,55,55,55,55,55,119,119,]),'TYPE_CHAR':([31,38,42,43,44,45,46,58,59,62,65,69,73,76,77,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,123,124,126,127,128,129,130,131,133,153,162,163,215,216,218,223,239,258,],[56,56,56,56,56,56,56,120,120,120,120,56,56,56,56,56,56,56,56,56,56,56,56,-47,-48,-49,-50,-51,-137,-138,-139,-140,-141,-142,120,120,120,120,120,120,120,120,56,56,56,56,56,56,56,56,120,120,]),'NOT':([31,38,42,43,44,45,46,69,73,76,77,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,133,153,162,163,215,216,218,223,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-47,-48,-49,-50,-51,-137,-138,-139,-140,-141,-142,62,62,62,62,62,62,62,62,]),'PLUS_PLUS':([31,38,42,43,44,45,46,48,51,52,53,54,55,56,57,62,65,69,73,76,77,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,123,124,126,127,128,129,130,131,133,153,162,163,215,216,218,223,229,],[58,58,58,58,58,58,58,-122,-123,-124,-128,-125,-126,-127,111,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-47,-48,-49,-50,-51,-137,-138,-139,-140,-141,-142,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-122,]),'MINUS_MINUS':([31,38,42,43,44,45,46,48,51,52,53,54,55,56,57,62,65,69,73,76,77,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,123,124,126,127,128,129,130,131,133,153,162,163,215,216,218,223,229,],[59,59,59,59,59,59,59,-122,-123,-124,-128,-125,-126,-127,112,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-47,-48,-49,-50,-51,-137,-138,-139,-140,-141,-142,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-122,]),'PONTO_VIRGULA':([34,47,48,49,50,51,52,53,54,55,56,57,60,61,63,64,66,67,68,70,71,87,111,112,113,114,115,116,117,118,119,120,121,122,125,132,138,144,150,155,156,157,158,159,160,161,164,165,166,167,168,169,170,171,172,176,191,194,195,196,197,209,210,215,229,230,255,257,259,],[72,72,-65,110,-58,-59,-60,-61,-62,-63,-64,-102,-78,-79,-83,-85,-88,-92,-96,136,137,153,-76,-77,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-82,-93,177,182,187,-66,-67,-68,-69,-70,-71,-72,-75,-80,-81,-84,-86,-87,-89,-90,-91,-103,216,-73,-74,-97,-98,226,227,228,238,240,260,262,264,]),'CHAVE_ABERTA':([34,47,48,51,52,53,54,55,56,57,68,114,115,116,117,118,119,120,121,176,178,229,],[76,76,-122,-123,-124,-128,-125,-126,-127,-102,133,-102,-122,-123,-124,-125,-126,-127,-128,-103,198,-122,]),'PAREN_FECHADO':([48,50,51,52,53,54,55,56,57,60,61,63,64,66,67,68,74,78,80,81,83,84,85,86,88,111,112,113,114,115,116,117,118,119,120,121,122,125,132,134,135,140,141,145,147,148,155,156,157,158,159,160,161,164,165,166,167,168,169,170,171,172,174,175,176,178,180,194,195,196,197,200,220,231,237,250,251,263,],[-65,-58,-59,-60,-61,-62,-63,-64,-102,-78,-79,-83,-85,-88,-92,-96,-106,-106,-106,-106,150,151,-121,152,154,-76,-77,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-82,-93,-100,176,179,-104,183,184,185,-66,-67,-68,-69,-70,-71,-72,-75,-80,-81,-84,-86,-87,-89,-90,-91,197,-99,-103,-107,-106,-73,-74,-97,-98,-105,-108,241,249,257,-115,-114,]),'CHAVE_FECHADA':([48,50,51,52,53,54,55,56,57,60,61,63,64,66,67,68,76,111,112,113,114,115,116,117,118,119,120,121,122,125,132,142,155,156,157,158,159,160,161,164,165,166,167,168,169,170,171,172,173,176,194,195,196,197,198,],[-65,-58,-59,-60,-61,-62,-63,-64,-102,-78,-79,-83,-85,-88,-92,-96,143,-76,-77,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-82,-93,181,-66,-67,-68,-69,-70,-71,-72,-75,-80,-81,-84,-86,-87,-89,-90,-91,196,-103,-73,-74,-97,-98,220,]),'DOIS_PONTOS':([48,50,51,52,53,54,55,56,57,60,61,63,64,66,67,68,111,112,113,114,115,116,117,118,119,120,121,122,125,132,155,156,157,158,159,160,161,164,165,166,167,168,169,170,171,172,176,194,195,196,197,219,234,],[-65,-58,-59,-60,-61,-62,-63,-64,-102,-78,-79,-83,-85,-88,-92,-96,-76,-77,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-82,-93,-66,-67,-68,-69,-70,-71,-72,-75,-80,-81,-84,-86,-87,-89,-90,-91,-103,-73,-74,-97,-98,235,242,]),'PLUS_EQUAL':([48,229,],[91,91,]),'MINUS_EQUAL':([48,229,],[92,92,]),'TIMES_EQUAL':([48,229,],[93,93,]),'DIVIDE_EQUAL':([48,229,],[94,94,]),'REST_EQUAL':([48,229,],[95,95,]),'AND':([48,51,52,53,54,55,56,57,60,61,63,64,66,67,68,113,114,115,116,117,118,119,120,121,122,125,132,165,166,167,168,169,170,171,172,176,196,197,229,],[96,-123,-124,-128,-125,-126,-127,-102,123,-79,-83,-85,-88,-92,-96,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-82,-93,-80,-81,-84,-86,-87,-89,-90,-91,-103,-97,-98,96,]),'OR':([48,51,52,53,54,55,56,57,60,61,63,64,66,67,68,113,114,115,116,117,118,119,120,121,122,125,132,165,166,167,168,169,170,171,172,176,196,197,229,],[97,-123,-124,-128,-125,-126,-127,-102,124,-79,-83,-85,-88,-92,-96,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-82,-93,-80,-81,-84,-86,-87,-89,-90,-91,-103,-97,-98,97,]),'TIMES':([48,51,52,53,54,55,56,57,64,66,67,68,113,114,115,116,117,118,119,120,121,122,132,168,169,170,171,172,176,196,197,229,],[101,-123,-124,-128,-125,-126,-127,-102,129,-88,-92,-96,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-93,129,129,-89,-90,-91,-103,-97,-98,101,]),'DIVIDE':([48,51,52,53,54,55,56,57,64,66,67,68,113,114,115,116,117,118,119,120,121,122,132,168,169,170,171,172,176,196,197,229,],[102,-123,-124,-128,-125,-126,-127,-102,130,-88,-92,-96,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-93,130,130,-89,-90,-91,-103,-97,-98,102,]),'REST':([48,51,52,53,54,55,56,57,64,66,67,68,113,114,115,116,117,118,119,120,121,122,132,168,169,170,171,172,176,196,197,229,],[103,-123,-124,-128,-125,-126,-127,-102,131,-88,-92,-96,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-93,131,131,-89,-90,-91,-103,-97,-98,103,]),'LESS_THAN':([48,51,52,53,54,55,56,57,63,64,66,67,68,113,114,115,116,117,118,119,120,121,122,132,168,169,170,171,172,176,196,197,229,],[104,-123,-124,-128,-125,-126,-127,-102,104,-85,-88,-92,-96,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-93,-86,-87,-89,-90,-91,-103,-97,-98,104,]),'IS_EQUALS':([48,51,52,53,54,55,56,57,63,64,66,67,68,113,114,115,116,117,118,119,120,121,122,132,168,169,170,171,172,176,196,197,229,],[105,-123,-124,-128,-125,-126,-127,-102,105,-85,-88,-92,-96,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-93,-86,-87,-89,-90,-91,-103,-97,-98,105,]),'LESS_THAN_OR_EQUALS':([48,51,52,53,54,55,56,57,63,64,66,67,68,113,114,115,116,117,118,119,120,121,122,132,168,169,170,171,172,176,196,197,229,],[106,-123,-124,-128,-125,-126,-127,-102,106,-85,-88,-92,-96,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-93,-86,-87,-89,-90,-91,-103,-97,-98,106,]),'GREATER_THAN':([48,51,52,53,54,55,56,57,63,64,66,67,68,113,114,115,116,117,118,119,120,121,122,132,168,169,170,171,172,176,196,197,229,],[107,-123,-124,-128,-125,-126,-127,-102,107,-85,-88,-92,-96,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-93,-86,-87,-89,-90,-91,-103,-97,-98,107,]),'GREATER_THAN_OR_EQUALS':([48,51,52,53,54,55,56,57,63,64,66,67,68,113,114,115,116,117,118,119,120,121,122,132,168,169,170,171,172,176,196,197,229,],[108,-123,-124,-128,-125,-126,-127,-102,108,-85,-88,-92,-96,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-93,-86,-87,-89,-90,-91,-103,-97,-98,108,]),'IS_DIFFERENT':([48,51,52,53,54,55,56,57,63,64,66,67,68,113,114,115,116,117,118,119,120,121,122,132,168,169,170,171,172,176,196,197,229,],[109,-123,-124,-128,-125,-126,-127,-102,109,-85,-88,-92,-96,-94,-102,-122,-123,-124,-125,-126,-127,-128,-95,-93,-86,-87,-89,-90,-91,-103,-97,-98,109,]),'VIRGULA':([115,116,117,118,119,120,121,141,178,220,251,],[-122,-123,-124,-125,-126,-127,-128,180,-107,-108,258,]),'ELSE':([188,205,225,256,261,],[204,222,-109,-120,-119,]),'ELSEIF':([188,225,256,],[206,-109,206,]),'CASE':([193,217,232,260,264,],[218,218,218,-133,-132,]),'DEFAULT':([193,217,232,260,264,],[219,219,219,-133,-132,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracao':([0,2,28,],[2,28,28,]),'declaracao_variavel':([0,2,3,28,29,82,149,189,207,208,224,235,242,243,245,253,254,],[3,3,29,3,29,149,29,208,208,29,208,245,245,245,29,245,245,]),'declaracao_funcao':([0,2,28,],[4,4,4,]),'declaracao_estrutura':([0,2,28,],[5,5,5,]),'estrutura_de_controle':([0,2,28,189,207,224,235,242,243,253,254,],[6,6,6,212,212,212,246,246,246,246,246,]),'print':([0,2,28,189,207,224,235,242,243,253,254,],[7,7,7,213,213,213,247,247,247,247,247,]),'tipo':([0,2,3,28,29,74,78,80,81,82,149,180,189,207,208,224,235,242,243,245,253,254,],[10,10,30,10,30,139,139,139,139,30,30,139,30,30,30,30,30,30,30,30,30,30,]),'if':([0,2,28,189,207,224,235,242,243,253,254,],[13,13,13,13,13,13,13,13,13,13,13,]),'while':([0,2,28,189,207,224,235,242,243,253,254,],[14,14,14,14,14,14,14,14,14,14,14,]),'for':([0,2,28,189,207,224,235,242,243,253,254,],[15,15,15,15,15,15,15,15,15,15,15,]),'switch':([0,2,28,189,207,224,235,242,243,253,254,],[16,16,16,16,16,16,16,16,16,16,16,]),'array':([10,30,],[35,35,]),'array_inicializacao':([10,30,],[37,37,]),'expressao':([31,38,42,43,44,45,46,69,73,76,77,89,90,91,92,93,94,95,98,133,153,162,163,215,216,218,223,],[49,79,83,85,85,87,88,135,138,142,144,155,156,157,158,159,160,161,164,173,191,194,195,230,231,234,85,]),'atribuicao':([31,38,42,43,44,45,46,69,73,76,77,89,90,91,92,93,94,95,98,133,153,162,163,215,216,218,223,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'variavel_ou_valor':([31,38,42,43,44,45,46,58,59,62,65,69,73,76,77,89,90,91,92,93,94,95,98,123,124,126,127,128,129,130,131,133,153,162,163,215,216,218,223,239,258,],[57,57,57,57,57,57,57,114,114,114,114,57,57,57,57,57,57,57,57,57,57,57,57,114,114,114,114,114,114,114,114,57,57,57,57,57,57,57,57,251,251,]),'expressao_logica':([31,38,42,43,44,45,46,69,73,76,77,89,90,91,92,93,94,95,98,133,153,162,163,215,216,218,223,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'expressao_relacional':([31,38,42,43,44,45,46,62,69,73,76,77,89,90,91,92,93,94,95,98,123,124,133,153,162,163,215,216,218,223,],[61,61,61,61,61,61,61,125,61,61,61,61,61,61,61,61,61,61,61,61,165,166,61,61,61,61,61,61,61,61,]),'expressao_aritmetica':([31,38,42,43,44,45,46,62,69,73,76,77,89,90,91,92,93,94,95,98,123,124,126,133,153,162,163,215,216,218,223,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,167,63,63,63,63,63,63,63,63,]),'expressao_multiplicativa':([31,38,42,43,44,45,46,62,69,73,76,77,89,90,91,92,93,94,95,98,123,124,126,127,128,133,153,162,163,215,216,218,223,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,168,169,64,64,64,64,64,64,64,64,]),'expressao_unaria':([31,38,42,43,44,45,46,62,65,69,73,76,77,89,90,91,92,93,94,95,98,123,124,126,127,128,129,130,131,133,153,162,163,215,216,218,223,],[66,66,66,66,66,66,66,66,132,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,170,171,172,66,66,66,66,66,66,66,66,]),'expressao_postfix':([31,38,42,43,44,45,46,58,59,62,65,69,73,76,77,89,90,91,92,93,94,95,98,123,124,126,127,128,129,130,131,133,153,162,163,215,216,218,223,],[67,67,67,67,67,67,67,113,122,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'primaria':([31,38,42,43,44,45,46,58,59,62,65,69,73,76,77,89,90,91,92,93,94,95,98,123,124,126,127,128,129,130,131,133,153,162,163,215,216,218,223,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'chaves_array':([34,47,],[75,75,]),'statement':([43,44,223,],[84,86,237,]),'operador':([48,229,],[89,89,]),'comparador':([48,63,229,],[98,126,98,]),'parametros':([74,78,80,81,180,],[140,145,147,148,200,]),'parametro':([74,78,80,81,180,],[141,141,141,141,141,]),'argumentos':([134,],[174,]),'expressao_lista':([134,],[175,]),'bloco':([151,152,179,183,184,185,204,222,241,249,],[188,190,199,201,202,203,221,236,252,256,]),'bloco_switch':([154,],[192,]),'elseif':([188,256,],[205,261,]),'coisas_bloco':([189,207,224,],[207,224,224,]),'retorno':([189,207,224,235,242,243,253,254,],[211,211,211,244,244,244,244,244,]),'cases':([193,217,232,],[217,232,232,]),'declaracao_ou_coisas':([235,242,243,253,254,],[243,253,254,254,254,]),'parametros_dado':([239,258,],[250,263,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaracao','programa',1,'p_programa','sintatico.py',110),
  ('declaracao -> declaracao declaracao','declaracao',2,'p_declaracao','sintatico.py',113),
  ('declaracao -> declaracao_variavel','declaracao',1,'p_declaracao','sintatico.py',114),
  ('declaracao -> declaracao_funcao','declaracao',1,'p_declaracao','sintatico.py',115),
  ('declaracao -> declaracao_estrutura','declaracao',1,'p_declaracao','sintatico.py',116),
  ('declaracao -> estrutura_de_controle','declaracao',1,'p_declaracao','sintatico.py',117),
  ('declaracao -> print','declaracao',1,'p_declaracao','sintatico.py',118),
  ('declaracao -> COMMENT','declaracao',1,'p_declaracao','sintatico.py',119),
  ('declaracao -> <empty>','declaracao',0,'p_declaracao','sintatico.py',120),
  ('declaracao_variavel -> ID EQUAL expressao PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',122),
  ('declaracao_variavel -> tipo ID PONTO_VIRGULA','declaracao_variavel',3,'p_declaracao','sintatico.py',123),
  ('declaracao_variavel -> tipo ID EQUAL expressao PONTO_VIRGULA','declaracao_variavel',5,'p_declaracao','sintatico.py',124),
  ('declaracao_variavel -> tipo array EQUAL expressao PONTO_VIRGULA','declaracao_variavel',5,'p_declaracao','sintatico.py',125),
  ('declaracao_variavel -> ID PLUS PLUS PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',126),
  ('declaracao_variavel -> ID MINUS MINUS PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',127),
  ('declaracao_variavel -> declaracao_variavel declaracao_variavel','declaracao_variavel',2,'p_declaracao','sintatico.py',128),
  ('declaracao_funcao -> tipo ID PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',130),
  ('declaracao_funcao -> VOID ID PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',131),
  ('declaracao_funcao -> tipo MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',132),
  ('declaracao_funcao -> VOID MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',133),
  ('declaracao_estrutura -> STRUCT ID COLCHETE_ABERTO declaracao_variavel COLCHETE_FECHADO','declaracao_estrutura',5,'p_declaracao','sintatico.py',135),
  ('declaracao_ou_coisas -> declaracao_ou_coisas declaracao_ou_coisas','declaracao_ou_coisas',2,'p_declaracao','sintatico.py',137),
  ('declaracao_ou_coisas -> retorno','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',138),
  ('declaracao_ou_coisas -> declaracao_variavel','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',139),
  ('declaracao_ou_coisas -> estrutura_de_controle','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',140),
  ('declaracao_ou_coisas -> print','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',141),
  ('declaracao_ou_coisas -> COMMENT','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',142),
  ('declaracao_ou_coisas -> <empty>','declaracao_ou_coisas',0,'p_declaracao','sintatico.py',143),
  ('coisas_bloco -> coisas_bloco coisas_bloco','coisas_bloco',2,'p_declaracao','sintatico.py',145),
  ('coisas_bloco -> declaracao_variavel','coisas_bloco',1,'p_declaracao','sintatico.py',146),
  ('coisas_bloco -> BREAK PONTO_VIRGULA','coisas_bloco',2,'p_declaracao','sintatico.py',147),
  ('coisas_bloco -> CONTINUE PONTO_VIRGULA','coisas_bloco',2,'p_declaracao','sintatico.py',148),
  ('coisas_bloco -> retorno','coisas_bloco',1,'p_declaracao','sintatico.py',149),
  ('coisas_bloco -> estrutura_de_controle','coisas_bloco',1,'p_declaracao','sintatico.py',150),
  ('coisas_bloco -> print','coisas_bloco',1,'p_declaracao','sintatico.py',151),
  ('coisas_bloco -> COMMENT','coisas_bloco',1,'p_declaracao','sintatico.py',152),
  ('coisas_bloco -> <empty>','coisas_bloco',0,'p_declaracao','sintatico.py',153),
  ('estrutura_de_controle -> if','estrutura_de_controle',1,'p_declaracao','sintatico.py',155),
  ('estrutura_de_controle -> while','estrutura_de_controle',1,'p_declaracao','sintatico.py',156),
  ('estrutura_de_controle -> for','estrutura_de_controle',1,'p_declaracao','sintatico.py',157),
  ('estrutura_de_controle -> switch','estrutura_de_controle',1,'p_declaracao','sintatico.py',158),
  ('print -> PRINTLN PAREN_ABERTO expressao PAREN_FECHADO PONTO_VIRGULA','print',5,'p_declaracao','sintatico.py',160),
  ('print -> <empty>','print',0,'p_declaracao','sintatico.py',161),
  ('print_statement -> atribuicao operador','print_statement',2,'p_declaracao','sintatico.py',163),
  ('print_statement -> atribuicao operador print_statement','print_statement',3,'p_declaracao','sintatico.py',164),
  ('print_statement -> atribuicao','print_statement',1,'p_declaracao','sintatico.py',165),
  ('operador -> PLUS','operador',1,'p_operador','sintatico.py',170),
  ('operador -> MINUS','operador',1,'p_operador','sintatico.py',171),
  ('operador -> TIMES','operador',1,'p_operador','sintatico.py',172),
  ('operador -> DIVIDE','operador',1,'p_operador','sintatico.py',173),
  ('operador -> REST','operador',1,'p_operador','sintatico.py',174),
  ('tipo -> INT','tipo',1,'p_tipo','sintatico.py',177),
  ('tipo -> STRING','tipo',1,'p_tipo','sintatico.py',178),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','sintatico.py',179),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','sintatico.py',180),
  ('tipo -> CHAR','tipo',1,'p_tipo','sintatico.py',181),
  ('tipo -> FLOAT','tipo',1,'p_tipo','sintatico.py',182),
  ('expressao -> atribuicao','expressao',1,'p_expressao','sintatico.py',185),
  ('atribuicao -> NUMBER_DEC','atribuicao',1,'p_expressao','sintatico.py',187),
  ('atribuicao -> NUMBER_INT','atribuicao',1,'p_expressao','sintatico.py',188),
  ('atribuicao -> TYPE_FLOAT','atribuicao',1,'p_expressao','sintatico.py',189),
  ('atribuicao -> TYPE_STRING','atribuicao',1,'p_expressao','sintatico.py',190),
  ('atribuicao -> TYPE_BOOLEAN','atribuicao',1,'p_expressao','sintatico.py',191),
  ('atribuicao -> TYPE_CHAR','atribuicao',1,'p_expressao','sintatico.py',192),
  ('atribuicao -> ID','atribuicao',1,'p_expressao','sintatico.py',193),
  ('atribuicao -> ID operador expressao','atribuicao',3,'p_expressao','sintatico.py',194),
  ('atribuicao -> ID EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',195),
  ('atribuicao -> ID PLUS_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',196),
  ('atribuicao -> ID MINUS_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',197),
  ('atribuicao -> ID TIMES_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',198),
  ('atribuicao -> ID DIVIDE_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',199),
  ('atribuicao -> ID REST_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',200),
  ('atribuicao -> ID AND EQUAL expressao','atribuicao',4,'p_expressao','sintatico.py',201),
  ('atribuicao -> ID OR EQUAL expressao','atribuicao',4,'p_expressao','sintatico.py',202),
  ('atribuicao -> ID comparador expressao','atribuicao',3,'p_expressao','sintatico.py',203),
  ('atribuicao -> variavel_ou_valor PLUS_PLUS','atribuicao',2,'p_expressao','sintatico.py',204),
  ('atribuicao -> variavel_ou_valor MINUS_MINUS','atribuicao',2,'p_expressao','sintatico.py',205),
  ('atribuicao -> expressao_logica','atribuicao',1,'p_expressao','sintatico.py',206),
  ('expressao_logica -> expressao_relacional','expressao_logica',1,'p_expressao','sintatico.py',208),
  ('expressao_logica -> expressao_logica AND expressao_relacional','expressao_logica',3,'p_expressao','sintatico.py',209),
  ('expressao_logica -> expressao_logica OR expressao_relacional','expressao_logica',3,'p_expressao','sintatico.py',210),
  ('expressao_logica -> NOT expressao_relacional','expressao_logica',2,'p_expressao','sintatico.py',211),
  ('expressao_relacional -> expressao_aritmetica','expressao_relacional',1,'p_expressao','sintatico.py',213),
  ('expressao_relacional -> expressao_aritmetica comparador expressao_aritmetica','expressao_relacional',3,'p_expressao','sintatico.py',214),
  ('expressao_aritmetica -> expressao_multiplicativa','expressao_aritmetica',1,'p_expressao','sintatico.py',216),
  ('expressao_aritmetica -> expressao_aritmetica PLUS expressao_multiplicativa','expressao_aritmetica',3,'p_expressao','sintatico.py',217),
  ('expressao_aritmetica -> expressao_aritmetica MINUS expressao_multiplicativa','expressao_aritmetica',3,'p_expressao','sintatico.py',218),
  ('expressao_multiplicativa -> expressao_unaria','expressao_multiplicativa',1,'p_expressao','sintatico.py',220),
  ('expressao_multiplicativa -> expressao_multiplicativa TIMES expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',221),
  ('expressao_multiplicativa -> expressao_multiplicativa DIVIDE expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',222),
  ('expressao_multiplicativa -> expressao_multiplicativa REST expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',223),
  ('expressao_unaria -> expressao_postfix','expressao_unaria',1,'p_expressao','sintatico.py',225),
  ('expressao_unaria -> MINUS expressao_unaria','expressao_unaria',2,'p_expressao','sintatico.py',226),
  ('expressao_unaria -> PLUS_PLUS expressao_postfix','expressao_unaria',2,'p_expressao','sintatico.py',227),
  ('expressao_unaria -> MINUS_MINUS expressao_postfix','expressao_unaria',2,'p_expressao','sintatico.py',228),
  ('expressao_postfix -> primaria','expressao_postfix',1,'p_expressao','sintatico.py',230),
  ('expressao_postfix -> primaria CHAVE_ABERTA expressao CHAVE_FECHADA','expressao_postfix',4,'p_expressao','sintatico.py',231),
  ('expressao_postfix -> primaria PAREN_ABERTO argumentos PAREN_FECHADO','expressao_postfix',4,'p_expressao','sintatico.py',232),
  ('argumentos -> expressao_lista','argumentos',1,'p_expressao','sintatico.py',234),
  ('argumentos -> <empty>','argumentos',0,'p_expressao','sintatico.py',235),
  ('expressao_lista -> <empty>','expressao_lista',0,'p_expressao','sintatico.py',237),
  ('primaria -> variavel_ou_valor','primaria',1,'p_expressao','sintatico.py',239),
  ('primaria -> PAREN_ABERTO expressao PAREN_FECHADO','primaria',3,'p_expressao','sintatico.py',240),
  ('parametros -> parametro','parametros',1,'p_parametros','sintatico.py',243),
  ('parametros -> parametro VIRGULA parametros','parametros',3,'p_parametros','sintatico.py',244),
  ('parametros -> <empty>','parametros',0,'p_parametros','sintatico.py',245),
  ('parametro -> tipo ID','parametro',2,'p_parametros','sintatico.py',247),
  ('parametro -> tipo ID CHAVE_ABERTA CHAVE_FECHADA','parametro',4,'p_parametros','sintatico.py',248),
  ('bloco -> COLCHETE_ABERTO coisas_bloco COLCHETE_FECHADO','bloco',3,'p_bloco','sintatico.py',251),
  ('retorno -> RETURN PONTO_VIRGULA','retorno',2,'p_retorno','sintatico.py',254),
  ('retorno -> RETURN ID PONTO_VIRGULA','retorno',3,'p_retorno','sintatico.py',255),
  ('retorno -> RETURN expressao PONTO_VIRGULA','retorno',3,'p_retorno','sintatico.py',256),
  ('retorno -> RETURN ID PAREN_ABERTO parametros_dado PAREN_FECHADO PONTO_VIRGULA','retorno',6,'p_retorno','sintatico.py',257),
  ('parametros_dado -> variavel_ou_valor VIRGULA parametros_dado','parametros_dado',3,'p_retorno','sintatico.py',259),
  ('parametros_dado -> variavel_ou_valor','parametros_dado',1,'p_retorno','sintatico.py',260),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco','if',5,'p_if_switch','sintatico.py',263),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco ELSE bloco','if',7,'p_if_switch','sintatico.py',264),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco elseif ELSE bloco','if',8,'p_if_switch','sintatico.py',265),
  ('elseif -> ELSEIF PAREN_ABERTO statement PAREN_FECHADO bloco elseif','elseif',6,'p_if_switch','sintatico.py',267),
  ('elseif -> <empty>','elseif',0,'p_if_switch','sintatico.py',268),
  ('statement -> expressao','statement',1,'p_if_switch','sintatico.py',270),
  ('variavel_ou_valor -> ID','variavel_ou_valor',1,'p_if_switch','sintatico.py',272),
  ('variavel_ou_valor -> NUMBER_DEC','variavel_ou_valor',1,'p_if_switch','sintatico.py',273),
  ('variavel_ou_valor -> NUMBER_INT','variavel_ou_valor',1,'p_if_switch','sintatico.py',274),
  ('variavel_ou_valor -> TYPE_STRING','variavel_ou_valor',1,'p_if_switch','sintatico.py',275),
  ('variavel_ou_valor -> TYPE_BOOLEAN','variavel_ou_valor',1,'p_if_switch','sintatico.py',276),
  ('variavel_ou_valor -> TYPE_CHAR','variavel_ou_valor',1,'p_if_switch','sintatico.py',277),
  ('variavel_ou_valor -> TYPE_FLOAT','variavel_ou_valor',1,'p_if_switch','sintatico.py',278),
  ('switch -> SWITCH PAREN_ABERTO expressao PAREN_FECHADO bloco_switch','switch',5,'p_if_switch','sintatico.py',280),
  ('bloco_switch -> COLCHETE_ABERTO cases COLCHETE_FECHADO','bloco_switch',3,'p_if_switch','sintatico.py',282),
  ('cases -> cases cases','cases',2,'p_if_switch','sintatico.py',284),
  ('cases -> CASE expressao DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA','cases',6,'p_if_switch','sintatico.py',285),
  ('cases -> DEFAULT DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA','cases',5,'p_if_switch','sintatico.py',286),
  ('cases -> <empty>','cases',0,'p_if_switch','sintatico.py',287),
  ('while -> WHILE PAREN_ABERTO statement PAREN_FECHADO bloco','while',5,'p_loop','sintatico.py',290),
  ('for -> FOR PAREN_ABERTO expressao PONTO_VIRGULA expressao PONTO_VIRGULA expressao PAREN_FECHADO bloco','for',9,'p_loop','sintatico.py',292),
  ('comparador -> LESS_THAN','comparador',1,'p_comparador','sintatico.py',295),
  ('comparador -> IS_EQUALS','comparador',1,'p_comparador','sintatico.py',296),
  ('comparador -> LESS_THAN_OR_EQUALS','comparador',1,'p_comparador','sintatico.py',297),
  ('comparador -> GREATER_THAN','comparador',1,'p_comparador','sintatico.py',298),
  ('comparador -> GREATER_THAN_OR_EQUALS','comparador',1,'p_comparador','sintatico.py',299),
  ('comparador -> IS_DIFFERENT','comparador',1,'p_comparador','sintatico.py',300),
  ('operador_logico -> AND statement','operador_logico',2,'p_operador_logico','sintatico.py',303),
  ('operador_logico -> OR statement','operador_logico',2,'p_operador_logico','sintatico.py',304),
  ('operador_logico -> <empty>','operador_logico',0,'p_operador_logico','sintatico.py',305),
  ('array -> ID chaves_array','array',2,'p_array','sintatico.py',308),
  ('array -> array_inicializacao','array',1,'p_array','sintatico.py',309),
  ('array_inicializacao -> COLCHETE_ABERTO expressao COLCHETE_FECHADO','array_inicializacao',3,'p_array','sintatico.py',311),
  ('chaves_array -> CHAVE_ABERTA expressao CHAVE_FECHADA','chaves_array',3,'p_array','sintatico.py',313),
  ('chaves_array -> CHAVE_ABERTA CHAVE_FECHADA','chaves_array',2,'p_array','sintatico.py',314),
]
