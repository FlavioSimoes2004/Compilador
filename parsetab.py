
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN BREAK CASE CHAR CHAVE_ABERTA CHAVE_FECHADA COLCHETE_ABERTO COLCHETE_FECHADO COMMENT COMPARE_OPERATOR DEFAULT DIVIDE DIVIDE_EQUAL DOIS_PONTOS DOT DOUBLE ELSE ELSEIF EQUAL FLOAT FOR GREATER_THAN GREATER_THAN_OR_EQUALS ID IF INT IS_DIFFERENT IS_EQUALS LESS_THAN LESS_THAN_OR_EQUALS MAIN MINUS MINUS_EQUAL MINUS_MINUS NOT NUMBER_DEC NUMBER_INT OPERATOR OR PAREN_ABERTO PAREN_FECHADO PLUS PLUS_EQUAL PLUS_PLUS PONTO_VIRGULA PRINTLN REST REST_EQUAL RETURN SCANF SPECIAL_SYMBOL STRING STRUCT SWITCH TIMES TIMES_EQUAL TYPE_BOOLEAN TYPE_CHAR TYPE_FLOAT TYPE_STRING VIRGULA VOID WHILEprograma : declaracaodeclaracao : declaracao declaracao\n    | declaracao_variavel\n    | declaracao_funcao\n    | declaracao_estrutura\n    | estrutura_de_controle\n    | COMMENT\n    | \n    \n    declaracao_variavel : ID EQUAL expressao PONTO_VIRGULA\n    | tipo ID PONTO_VIRGULA\n    | tipo ID EQUAL expressao PONTO_VIRGULA\n    | tipo array EQUAL expressao PONTO_VIRGULA\n    | ID PLUS PLUS PONTO_VIRGULA\n    | ID MINUS MINUS PONTO_VIRGULA\n    | declaracao_variavel declaracao_variavel\n    \n    declaracao_funcao : tipo ID PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | VOID ID PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | tipo MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | VOID MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco\n    \n    declaracao_estrutura : STRUCT ID COLCHETE_ABERTO declaracao_variavel COLCHETE_FECHADO\n    \n    declaracao_ou_coisas : declaracao_ou_coisas declaracao_ou_coisas\n    | retorno\n    | declaracao_variavel\n    | estrutura_de_controle\n    | print\n    | COMMENT\n    | \n    \n    estrutura_de_controle : if\n    | while\n    | for\n    | switch\n    \n    print : PRINTLN PAREN_ABERTO print_statement PAREN_FECHADO PONTO_VIRGULA\n    | \n    \n    print_statement : atribuicao operador\n    | atribuicao operador print_statement\n    | atribuicaooperador : PLUS\n    | MINUS\n    | TIMES\n    | DIVIDE\n    | RESTtipo : INT\n    | STRING\n    | BOOLEAN\n    | DOUBLE\n    | CHAR\n    | FLOATexpressao : atribuicao\n    \n    atribuicao : NUMBER_DEC\n    | NUMBER_INT\n    | TYPE_FLOAT\n    | TYPE_STRING\n    | TYPE_BOOLEAN\n    | TYPE_CHAR\n    | ID\n    | ID operador expressao\n    | ID EQUAL expressao\n    | ID PLUS_EQUAL expressao\n    | ID MINUS_EQUAL expressao\n    | ID TIMES_EQUAL expressao\n    | ID DIVIDE_EQUAL expressao\n    | ID REST_EQUAL expressao\n    | ID AND EQUAL expressao\n    | ID OR EQUAL expressao\n    | ID comparador expressao\n    | variavel_ou_valor PLUS_PLUS\n    | variavel_ou_valor MINUS_MINUS\n    | expressao_logica\n    \n    expressao_logica : expressao_relacional\n    | expressao_logica AND expressao_relacional\n    | expressao_logica OR expressao_relacional\n    | NOT expressao_relacional\n    \n    expressao_relacional : expressao_aritmetica\n    | expressao_aritmetica comparador expressao_aritmetica\n    \n    expressao_aritmetica : expressao_multiplicativa\n    | expressao_aritmetica PLUS expressao_multiplicativa\n    | expressao_aritmetica MINUS expressao_multiplicativa\n    \n    expressao_multiplicativa : expressao_unaria\n    | expressao_multiplicativa TIMES expressao_unaria\n    | expressao_multiplicativa DIVIDE expressao_unaria\n    | expressao_multiplicativa REST expressao_unaria\n    \n    expressao_unaria : expressao_postfix\n    | MINUS expressao_unaria\n    | PLUS_PLUS expressao_postfix\n    | MINUS_MINUS expressao_postfix\n    \n    expressao_postfix : primaria\n    | primaria CHAVE_ABERTA expressao CHAVE_FECHADA\n    | primaria PAREN_ABERTO argumentos PAREN_FECHADO\n    | primaria DOT ID\n    \n    argumentos : expressao_lista\n    | \n\n    expressao_lista : \n    \n    primaria : variavel_ou_valor\n    | PAREN_ABERTO expressao PAREN_FECHADOparametros : parametro\n    | parametro VIRGULA parametros\n    | \n    \n    parametro : tipo ID\n    | tipo ID CHAVE_ABERTA CHAVE_FECHADAbloco : COLCHETE_ABERTO declaracao_ou_coisas COLCHETE_FECHADOretorno : RETURN PONTO_VIRGULA\n    | RETURN ID PONTO_VIRGULA\n    | RETURN expressao PONTO_VIRGULA\n    | RETURN ID PAREN_ABERTO parametros_dado PAREN_FECHADO PONTO_VIRGULA\n    \n    parametros_dado : variavel_ou_valor VIRGULA parametros_dado\n    | variavel_ou_valorif : IF PAREN_ABERTO statement PAREN_FECHADO bloco\n    | IF PAREN_ABERTO statement PAREN_FECHADO bloco ELSE bloco\n    | IF PAREN_ABERTO statement PAREN_FECHADO bloco elseif ELSE bloco\n\n    elseif : ELSEIF PAREN_ABERTO statement PAREN_FECHADO bloco elseif\n    | \n    \n    statement : variavel_ou_valor comparador variavel_ou_valor operador_logico\n    \n    variavel_ou_valor : ID\n    | NUMBER_DEC\n    | NUMBER_INT\n    | TYPE_STRING\n    | TYPE_BOOLEAN\n    | TYPE_CHAR\n    | TYPE_FLOAT\n    \n    switch : SWITCH PAREN_ABERTO ID PAREN_FECHADO bloco_switch\n    \n    bloco_switch : COLCHETE_ABERTO cases COLCHETE_FECHADO\n    \n    cases : cases cases\n    | CASE expressao DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA\n    | DEFAULT DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA\n    | while : WHILE PAREN_ABERTO statement PAREN_FECHADO bloco\n    \n    for : FOR PAREN_ABERTO tipo ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO bloco\n    | FOR PAREN_ABERTO ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO blococomparador : LESS_THAN\n    | IS_EQUALS\n    | LESS_THAN_OR_EQUALS\n    | GREATER_THAN\n    | GREATER_THAN_OR_EQUALS\n    | IS_DIFFERENToperador_logico : AND statement\n    | OR statement\n    | array : ID chaves_array\n    | array_inicializacao\n    \n    array_inicializacao : COLCHETE_ABERTO expressao COLCHETE_FECHADO\n    \n    chaves_array : CHAVE_ABERTA expressao CHAVE_FECHADA\n    | CHAVE_ABERTA CHAVE_FECHADA'
    
_lr_action_items = {'COMMENT':([0,2,3,4,5,6,7,12,13,14,15,26,27,69,114,134,135,177,182,186,187,188,190,193,200,202,203,204,208,209,210,211,212,213,225,228,229,230,239,241,242,244,246,251,252,260,265,272,280,281,],[7,7,-3,-4,-5,-6,-7,-28,-29,-30,-31,7,-15,-10,-9,-13,-14,-11,-12,-20,-107,213,-126,-120,-16,-18,-17,-19,213,-22,-23,-24,-25,-26,-108,213,-100,-101,-121,213,-109,-102,-103,213,213,213,-32,-104,-128,-127,]),'ID':([0,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,36,40,41,42,43,55,56,59,62,66,69,70,73,74,79,90,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,120,121,123,124,125,126,127,128,130,132,134,135,137,147,149,152,161,162,177,182,186,187,188,190,191,193,200,202,203,204,208,209,210,211,212,213,214,217,218,220,222,225,227,228,229,230,233,236,239,241,242,244,245,246,250,251,252,257,258,260,264,265,268,272,274,280,281,],[8,8,8,-4,-5,-6,-7,32,37,39,-28,-29,-30,-31,-42,-43,-44,-45,-46,-47,8,8,44,45,45,82,82,91,92,82,82,82,82,45,-10,45,45,45,8,151,45,45,45,45,45,45,45,45,-37,-38,-39,-40,-41,-129,-130,-131,-132,-133,-134,-9,82,82,82,82,82,82,82,82,45,175,-13,-14,178,8,82,82,45,45,-11,-12,-20,-107,8,-126,82,-120,-16,-18,-17,-19,8,-22,8,-24,-25,-26,231,82,82,82,45,-108,82,8,-100,-101,45,82,-121,8,-109,-102,82,-103,82,8,8,45,82,8,82,-32,45,-104,45,-128,-127,]),'VOID':([0,2,3,4,5,6,7,12,13,14,15,26,27,69,114,134,135,177,182,186,187,190,193,200,202,203,204,225,229,239,242,280,281,],[10,10,-3,-4,-5,-6,-7,-28,-29,-30,-31,10,-15,-10,-9,-13,-14,-11,-12,-20,-107,-126,-120,-16,-18,-17,-19,-108,-100,-121,-109,-128,-127,]),'STRUCT':([0,2,3,4,5,6,7,12,13,14,15,26,27,69,114,134,135,177,182,186,187,190,193,200,202,203,204,225,229,239,242,280,281,],[11,11,-3,-4,-5,-6,-7,-28,-29,-30,-31,11,-15,-10,-9,-13,-14,-11,-12,-20,-107,-126,-120,-16,-18,-17,-19,-108,-100,-121,-109,-128,-127,]),'INT':([0,2,3,4,5,6,7,12,13,14,15,26,27,42,69,71,75,77,78,79,114,134,135,147,177,180,182,186,187,188,190,193,200,202,203,204,208,209,210,211,212,213,225,228,229,230,239,241,242,244,246,251,252,260,265,272,280,281,],[16,16,16,-4,-5,-6,-7,-28,-29,-30,-31,16,16,16,-10,16,16,16,16,16,-9,-13,-14,16,-11,16,-12,-20,-107,16,-126,-120,-16,-18,-17,-19,16,-22,16,-24,-25,-26,-108,16,-100,-101,-121,16,-109,-102,-103,16,16,16,-32,-104,-128,-127,]),'STRING':([0,2,3,4,5,6,7,12,13,14,15,26,27,42,69,71,75,77,78,79,114,134,135,147,177,180,182,186,187,188,190,193,200,202,203,204,208,209,210,211,212,213,225,228,229,230,239,241,242,244,246,251,252,260,265,272,280,281,],[17,17,17,-4,-5,-6,-7,-28,-29,-30,-31,17,17,17,-10,17,17,17,17,17,-9,-13,-14,17,-11,17,-12,-20,-107,17,-126,-120,-16,-18,-17,-19,17,-22,17,-24,-25,-26,-108,17,-100,-101,-121,17,-109,-102,-103,17,17,17,-32,-104,-128,-127,]),'BOOLEAN':([0,2,3,4,5,6,7,12,13,14,15,26,27,42,69,71,75,77,78,79,114,134,135,147,177,180,182,186,187,188,190,193,200,202,203,204,208,209,210,211,212,213,225,228,229,230,239,241,242,244,246,251,252,260,265,272,280,281,],[18,18,18,-4,-5,-6,-7,-28,-29,-30,-31,18,18,18,-10,18,18,18,18,18,-9,-13,-14,18,-11,18,-12,-20,-107,18,-126,-120,-16,-18,-17,-19,18,-22,18,-24,-25,-26,-108,18,-100,-101,-121,18,-109,-102,-103,18,18,18,-32,-104,-128,-127,]),'DOUBLE':([0,2,3,4,5,6,7,12,13,14,15,26,27,42,69,71,75,77,78,79,114,134,135,147,177,180,182,186,187,188,190,193,200,202,203,204,208,209,210,211,212,213,225,228,229,230,239,241,242,244,246,251,252,260,265,272,280,281,],[19,19,19,-4,-5,-6,-7,-28,-29,-30,-31,19,19,19,-10,19,19,19,19,19,-9,-13,-14,19,-11,19,-12,-20,-107,19,-126,-120,-16,-18,-17,-19,19,-22,19,-24,-25,-26,-108,19,-100,-101,-121,19,-109,-102,-103,19,19,19,-32,-104,-128,-127,]),'CHAR':([0,2,3,4,5,6,7,12,13,14,15,26,27,42,69,71,75,77,78,79,114,134,135,147,177,180,182,186,187,188,190,193,200,202,203,204,208,209,210,211,212,213,225,228,229,230,239,241,242,244,246,251,252,260,265,272,280,281,],[20,20,20,-4,-5,-6,-7,-28,-29,-30,-31,20,20,20,-10,20,20,20,20,20,-9,-13,-14,20,-11,20,-12,-20,-107,20,-126,-120,-16,-18,-17,-19,20,-22,20,-24,-25,-26,-108,20,-100,-101,-121,20,-109,-102,-103,20,20,20,-32,-104,-128,-127,]),'FLOAT':([0,2,3,4,5,6,7,12,13,14,15,26,27,42,69,71,75,77,78,79,114,134,135,147,177,180,182,186,187,188,190,193,200,202,203,204,208,209,210,211,212,213,225,228,229,230,239,241,242,244,246,251,252,260,265,272,280,281,],[21,21,21,-4,-5,-6,-7,-28,-29,-30,-31,21,21,21,-10,21,21,21,21,21,-9,-13,-14,21,-11,21,-12,-20,-107,21,-126,-120,-16,-18,-17,-19,21,-22,21,-24,-25,-26,-108,21,-100,-101,-121,21,-109,-102,-103,21,21,21,-32,-104,-128,-127,]),'IF':([0,2,3,4,5,6,7,12,13,14,15,26,27,69,114,134,135,177,182,186,187,188,190,193,200,202,203,204,208,209,210,211,212,213,225,228,229,230,239,241,242,244,246,251,252,260,265,272,280,281,],[22,22,-3,-4,-5,-6,-7,-28,-29,-30,-31,22,-15,-10,-9,-13,-14,-11,-12,-20,-107,22,-126,-120,-16,-18,-17,-19,22,-22,-23,-24,-25,-26,-108,22,-100,-101,-121,22,-109,-102,-103,22,22,22,-32,-104,-128,-127,]),'WHILE':([0,2,3,4,5,6,7,12,13,14,15,26,27,69,114,134,135,177,182,186,187,188,190,193,200,202,203,204,208,209,210,211,212,213,225,228,229,230,239,241,242,244,246,251,252,260,265,272,280,281,],[23,23,-3,-4,-5,-6,-7,-28,-29,-30,-31,23,-15,-10,-9,-13,-14,-11,-12,-20,-107,23,-126,-120,-16,-18,-17,-19,23,-22,-23,-24,-25,-26,-108,23,-100,-101,-121,23,-109,-102,-103,23,23,23,-32,-104,-128,-127,]),'FOR':([0,2,3,4,5,6,7,12,13,14,15,26,27,69,114,134,135,177,182,186,187,188,190,193,200,202,203,204,208,209,210,211,212,213,225,228,229,230,239,241,242,244,246,251,252,260,265,272,280,281,],[24,24,-3,-4,-5,-6,-7,-28,-29,-30,-31,24,-15,-10,-9,-13,-14,-11,-12,-20,-107,24,-126,-120,-16,-18,-17,-19,24,-22,-23,-24,-25,-26,-108,24,-100,-101,-121,24,-109,-102,-103,24,24,24,-32,-104,-128,-127,]),'SWITCH':([0,2,3,4,5,6,7,12,13,14,15,26,27,69,114,134,135,177,182,186,187,188,190,193,200,202,203,204,208,209,210,211,212,213,225,228,229,230,239,241,242,244,246,251,252,260,265,272,280,281,],[25,25,-3,-4,-5,-6,-7,-28,-29,-30,-31,25,-15,-10,-9,-13,-14,-11,-12,-20,-107,25,-126,-120,-16,-18,-17,-19,25,-22,-23,-24,-25,-26,-108,25,-100,-101,-121,25,-109,-102,-103,25,25,25,-32,-104,-128,-127,]),'$end':([0,1,2,3,4,5,6,7,12,13,14,15,26,27,69,114,134,135,177,182,186,187,190,193,200,202,203,204,225,229,239,242,280,281,],[-8,0,-1,-3,-4,-5,-6,-7,-28,-29,-30,-31,-2,-15,-10,-9,-13,-14,-11,-12,-20,-107,-126,-120,-16,-18,-17,-19,-108,-100,-121,-109,-128,-127,]),'EQUAL':([8,32,33,35,44,45,72,91,100,101,141,144,151,181,231,],[29,70,74,-139,70,94,-138,152,161,162,-142,-140,191,-141,94,]),'PLUS':([8,30,45,47,48,49,50,51,52,53,54,57,58,60,61,63,64,65,82,83,84,85,86,87,88,115,116,117,118,119,122,129,154,155,156,157,158,159,160,163,164,165,166,167,168,169,170,171,175,176,195,196,197,198,231,248,],[30,67,103,-48,-49,-50,-51,-52,-53,-54,-93,-68,-69,124,-75,-78,-82,-86,-113,-114,-115,-116,-117,-118,-119,-66,-67,-84,-93,-85,-72,-83,-56,-57,-58,-59,-60,-61,-62,-65,-70,-71,124,-76,-77,-79,-80,-81,-89,-94,-63,-64,-87,-88,103,103,]),'MINUS':([8,29,31,36,45,47,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,70,73,74,82,83,84,85,86,87,88,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,175,176,195,196,197,198,214,222,231,233,248,257,268,274,],[31,62,68,62,104,-48,-49,-50,-51,-52,-53,-54,-93,-68,-69,62,125,-75,62,-78,-82,-86,62,62,62,62,-113,-114,-115,-116,-117,-118,-119,62,62,62,62,62,62,62,62,-37,-38,-39,-40,-41,-129,-130,-131,-132,-133,-134,-66,-67,-84,-93,-85,62,62,-72,62,62,62,62,62,62,-83,62,-56,-57,-58,-59,-60,-61,-62,62,62,-65,-70,-71,125,-76,-77,-79,-80,-81,-89,-94,-63,-64,-87,-88,62,62,104,62,104,62,62,62,]),'MAIN':([9,10,16,17,18,19,20,21,],[34,38,-42,-43,-44,-45,-46,-47,]),'COLCHETE_ABERTO':([9,16,17,18,19,20,21,28,39,148,150,153,179,183,184,185,205,226,253,278,279,],[36,-42,-43,-44,-45,-46,-47,36,79,188,188,194,188,188,188,188,188,188,188,188,188,]),'COLCHETE_FECHADO':([12,13,14,15,27,45,47,48,49,50,51,52,53,54,57,58,60,61,63,64,65,69,76,82,83,84,85,86,87,88,114,115,116,117,118,119,122,129,134,135,147,154,155,156,157,158,159,160,163,164,165,166,167,168,169,170,171,175,176,177,182,187,188,190,193,194,195,196,197,198,208,209,210,211,212,213,221,225,228,229,230,238,239,242,244,246,265,270,272,276,280,281,],[-28,-29,-30,-31,-15,-55,-48,-49,-50,-51,-52,-53,-54,-93,-68,-69,-73,-75,-78,-82,-86,-10,144,-113,-114,-115,-116,-117,-118,-119,-9,-66,-67,-84,-93,-85,-72,-83,-13,-14,186,-56,-57,-58,-59,-60,-61,-62,-65,-70,-71,-74,-76,-77,-79,-80,-81,-89,-94,-11,-12,-107,-27,-126,-120,-125,-63,-64,-87,-88,229,-22,-23,-24,-25,-26,239,-108,-21,-100,-101,-122,-121,-109,-102,-103,-32,-124,-104,-123,-128,-127,]),'RETURN':([12,13,14,15,27,69,114,134,135,177,182,187,188,190,193,208,209,210,211,212,213,225,228,229,230,239,241,242,244,246,251,252,260,265,272,280,281,],[-28,-29,-30,-31,-15,-10,-9,-13,-14,-11,-12,-107,214,-126,-120,214,-22,-23,-24,-25,-26,-108,214,-100,-101,-121,214,-109,-102,-103,214,214,214,-32,-104,-128,-127,]),'PRINTLN':([12,13,14,15,27,69,114,134,135,177,182,187,188,190,193,208,209,210,211,212,213,225,228,229,230,239,241,242,244,246,251,252,260,265,272,280,281,],[-28,-29,-30,-31,-15,-10,-9,-13,-14,-11,-12,-107,215,-126,-120,215,-22,-23,-24,-25,-26,-108,215,-100,-101,-121,215,-109,-102,-103,215,215,215,-32,-104,-128,-127,]),'BREAK':([12,13,14,15,27,69,114,134,135,177,182,187,190,193,209,210,211,212,213,225,228,229,230,239,241,242,244,246,251,252,260,265,272,280,281,],[-28,-29,-30,-31,-15,-10,-9,-13,-14,-11,-12,-107,-126,-120,-22,-23,-24,-25,-26,-108,-21,-100,-101,-121,-27,-109,-102,-103,-27,261,269,-32,-104,-128,-127,]),'PAREN_ABERTO':([22,23,24,25,29,32,34,36,37,38,45,48,49,50,51,52,53,54,55,56,59,62,65,66,70,73,74,82,83,84,85,86,87,88,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,118,120,121,123,124,125,126,127,128,130,161,162,176,207,214,215,222,231,233,257,268,274,],[40,41,42,43,66,71,75,66,77,78,-113,-114,-115,-119,-116,-117,-118,-93,66,66,66,66,131,66,66,66,66,-113,-114,-115,-116,-117,-118,-119,66,66,66,66,66,66,66,66,-37,-38,-39,-40,-41,-129,-130,-131,-132,-133,-134,-93,66,66,66,66,66,66,66,66,66,66,66,-94,227,66,233,66,245,66,66,66,66,]),'NUMBER_DEC':([29,36,40,41,55,56,59,62,66,70,73,74,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,120,121,123,124,125,126,127,128,130,149,152,161,162,191,214,217,218,220,222,227,233,236,245,250,257,258,264,268,274,],[48,48,83,83,83,83,83,83,48,48,48,48,48,48,48,48,48,48,48,48,-37,-38,-39,-40,-41,-129,-130,-131,-132,-133,-134,83,83,83,83,83,83,83,83,48,83,83,48,48,83,48,83,83,83,48,83,48,83,83,83,48,83,83,48,48,]),'NUMBER_INT':([29,36,40,41,55,56,59,62,66,70,73,74,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,120,121,123,124,125,126,127,128,130,149,152,161,162,191,214,217,218,220,222,227,233,236,245,250,257,258,264,268,274,],[49,49,84,84,84,84,84,84,49,49,49,49,49,49,49,49,49,49,49,49,-37,-38,-39,-40,-41,-129,-130,-131,-132,-133,-134,84,84,84,84,84,84,84,84,49,84,84,49,49,84,49,84,84,84,49,84,49,84,84,84,49,84,84,49,49,]),'TYPE_FLOAT':([29,36,40,41,55,56,59,62,66,70,73,74,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,120,121,123,124,125,126,127,128,130,149,152,161,162,191,214,217,218,220,222,227,233,236,245,250,257,258,264,268,274,],[50,50,88,88,88,88,88,88,50,50,50,50,50,50,50,50,50,50,50,50,-37,-38,-39,-40,-41,-129,-130,-131,-132,-133,-134,88,88,88,88,88,88,88,88,50,88,88,50,50,88,50,88,88,88,50,88,50,88,88,88,50,88,88,50,50,]),'TYPE_STRING':([29,36,40,41,55,56,59,62,66,70,73,74,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,120,121,123,124,125,126,127,128,130,149,152,161,162,191,214,217,218,220,222,227,233,236,245,250,257,258,264,268,274,],[51,51,85,85,85,85,85,85,51,51,51,51,51,51,51,51,51,51,51,51,-37,-38,-39,-40,-41,-129,-130,-131,-132,-133,-134,85,85,85,85,85,85,85,85,51,85,85,51,51,85,51,85,85,85,51,85,51,85,85,85,51,85,85,51,51,]),'TYPE_BOOLEAN':([29,36,40,41,55,56,59,62,66,70,73,74,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,120,121,123,124,125,126,127,128,130,149,152,161,162,191,214,217,218,220,222,227,233,236,245,250,257,258,264,268,274,],[52,52,86,86,86,86,86,86,52,52,52,52,52,52,52,52,52,52,52,52,-37,-38,-39,-40,-41,-129,-130,-131,-132,-133,-134,86,86,86,86,86,86,86,86,52,86,86,52,52,86,52,86,86,86,52,86,52,86,86,86,52,86,86,52,52,]),'TYPE_CHAR':([29,36,40,41,55,56,59,62,66,70,73,74,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,120,121,123,124,125,126,127,128,130,149,152,161,162,191,214,217,218,220,222,227,233,236,245,250,257,258,264,268,274,],[53,53,87,87,87,87,87,87,53,53,53,53,53,53,53,53,53,53,53,53,-37,-38,-39,-40,-41,-129,-130,-131,-132,-133,-134,87,87,87,87,87,87,87,87,53,87,87,53,53,87,53,87,87,87,53,87,53,87,87,87,53,87,87,53,53,]),'NOT':([29,36,66,70,73,74,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,130,161,162,214,222,233,257,268,274,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,-37,-38,-39,-40,-41,-129,-130,-131,-132,-133,-134,59,59,59,59,59,59,59,59,59,]),'PLUS_PLUS':([29,36,45,48,49,50,51,52,53,54,59,62,66,70,73,74,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,120,121,123,124,125,126,127,128,130,161,162,214,222,231,233,257,268,274,],[55,55,-113,-114,-115,-119,-116,-117,-118,115,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-37,-38,-39,-40,-41,-129,-130,-131,-132,-133,-134,55,55,55,55,55,55,55,55,55,55,55,55,55,-113,55,55,55,55,]),'MINUS_MINUS':([29,36,45,48,49,50,51,52,53,54,59,62,66,70,73,74,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,120,121,123,124,125,126,127,128,130,161,162,214,222,231,233,257,268,274,],[56,56,-113,-114,-115,-119,-116,-117,-118,116,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-37,-38,-39,-40,-41,-129,-130,-131,-132,-133,-134,56,56,56,56,56,56,56,56,56,56,56,56,56,-113,56,56,56,56,]),'PONTO_VIRGULA':([32,44,45,46,47,48,49,50,51,52,53,54,57,58,60,61,63,64,65,67,68,82,83,84,85,86,87,88,115,116,117,118,119,122,129,136,142,154,155,156,157,158,159,160,163,164,165,166,167,168,169,170,171,175,176,192,195,196,197,198,214,219,231,232,256,259,261,263,267,269,],[69,69,-55,114,-48,-49,-50,-51,-52,-53,-54,-93,-68,-69,-73,-75,-78,-82,-86,134,135,-113,-114,-115,-116,-117,-118,-119,-66,-67,-84,-93,-85,-72,-83,177,182,-56,-57,-58,-59,-60,-61,-62,-65,-70,-71,-74,-76,-77,-79,-80,-81,-89,-94,220,-63,-64,-87,-88,230,236,244,246,265,268,270,272,274,276,]),'CHAVE_ABERTA':([32,44,45,48,49,50,51,52,53,54,65,82,83,84,85,86,87,88,118,176,178,231,],[73,73,-113,-114,-115,-119,-116,-117,-118,-93,130,-113,-114,-115,-116,-117,-118,-119,-93,-94,199,-113,]),'PAREN_FECHADO':([45,47,48,49,50,51,52,53,54,57,58,60,61,63,64,65,71,75,77,78,80,82,83,84,85,86,87,88,89,92,103,104,105,106,107,115,116,117,118,119,122,129,131,133,138,139,143,145,146,154,155,156,157,158,159,160,163,164,165,166,167,168,169,170,171,173,174,175,176,178,180,189,195,196,197,198,201,216,224,234,235,243,247,248,254,255,257,266,273,275,277,],[-55,-48,-49,-50,-51,-52,-53,-54,-93,-68,-69,-73,-75,-78,-82,-86,-97,-97,-97,-97,148,-113,-114,-115,-116,-117,-118,-119,150,153,-37,-38,-39,-40,-41,-66,-67,-84,-93,-85,-72,-83,-91,176,179,-95,183,184,185,-56,-57,-58,-59,-60,-61,-62,-65,-70,-71,-74,-76,-77,-79,-80,-81,198,-90,-89,-94,-98,-97,-137,-63,-64,-87,-88,-96,-112,-99,-135,-136,253,256,-36,263,-106,-34,-35,-105,278,279,]),'CHAVE_FECHADA':([45,47,48,49,50,51,52,53,54,57,58,60,61,63,64,65,73,82,83,84,85,86,87,88,115,116,117,118,119,122,129,140,154,155,156,157,158,159,160,163,164,165,166,167,168,169,170,171,172,175,176,195,196,197,198,199,],[-55,-48,-49,-50,-51,-52,-53,-54,-93,-68,-69,-73,-75,-78,-82,-86,141,-113,-114,-115,-116,-117,-118,-119,-66,-67,-84,-93,-85,-72,-83,181,-56,-57,-58,-59,-60,-61,-62,-65,-70,-71,-74,-76,-77,-79,-80,-81,197,-89,-94,-63,-64,-87,-88,224,]),'DOIS_PONTOS':([45,47,48,49,50,51,52,53,54,57,58,60,61,63,64,65,82,83,84,85,86,87,88,115,116,117,118,119,122,129,154,155,156,157,158,159,160,163,164,165,166,167,168,169,170,171,175,176,195,196,197,198,223,240,],[-55,-48,-49,-50,-51,-52,-53,-54,-93,-68,-69,-73,-75,-78,-82,-86,-113,-114,-115,-116,-117,-118,-119,-66,-67,-84,-93,-85,-72,-83,-56,-57,-58,-59,-60,-61,-62,-65,-70,-71,-74,-76,-77,-79,-80,-81,-89,-94,-63,-64,-87,-88,241,251,]),'TIMES':([45,47,48,49,50,51,52,53,54,57,58,60,61,63,64,65,82,83,84,85,86,87,88,115,116,117,118,119,122,129,154,155,156,157,158,159,160,163,164,165,166,167,168,169,170,171,175,176,195,196,197,198,231,248,],[105,-48,-49,-50,-51,-52,-53,-54,-93,-68,-69,-73,126,-78,-82,-86,-113,-114,-115,-116,-117,-118,-119,-66,-67,-84,-93,-85,-72,-83,-56,-57,-58,-59,-60,-61,-62,-65,-70,-71,-74,126,126,-79,-80,-81,-89,-94,-63,-64,-87,-88,105,105,]),'DIVIDE':([45,47,48,49,50,51,52,53,54,57,58,60,61,63,64,65,82,83,84,85,86,87,88,115,116,117,118,119,122,129,154,155,156,157,158,159,160,163,164,165,166,167,168,169,170,171,175,176,195,196,197,198,231,248,],[106,-48,-49,-50,-51,-52,-53,-54,-93,-68,-69,-73,127,-78,-82,-86,-113,-114,-115,-116,-117,-118,-119,-66,-67,-84,-93,-85,-72,-83,-56,-57,-58,-59,-60,-61,-62,-65,-70,-71,-74,127,127,-79,-80,-81,-89,-94,-63,-64,-87,-88,106,106,]),'REST':([45,47,48,49,50,51,52,53,54,57,58,60,61,63,64,65,82,83,84,85,86,87,88,115,116,117,118,119,122,129,154,155,156,157,158,159,160,163,164,165,166,167,168,169,170,171,175,176,195,196,197,198,231,248,],[107,-48,-49,-50,-51,-52,-53,-54,-93,-68,-69,-73,128,-78,-82,-86,-113,-114,-115,-116,-117,-118,-119,-66,-67,-84,-93,-85,-72,-83,-56,-57,-58,-59,-60,-61,-62,-65,-70,-71,-74,128,128,-79,-80,-81,-89,-94,-63,-64,-87,-88,107,107,]),'PLUS_EQUAL':([45,231,],[95,95,]),'MINUS_EQUAL':([45,231,],[96,96,]),'TIMES_EQUAL':([45,231,],[97,97,]),'DIVIDE_EQUAL':([45,231,],[98,98,]),'REST_EQUAL':([45,231,],[99,99,]),'AND':([45,48,49,50,51,52,53,54,57,58,60,61,63,64,65,82,83,84,85,86,87,88,117,118,119,122,129,164,165,166,167,168,169,170,171,175,176,189,197,198,231,],[100,-114,-115,-119,-116,-117,-118,-93,120,-69,-73,-75,-78,-82,-86,-113,-114,-115,-116,-117,-118,-119,-84,-93,-85,-72,-83,-70,-71,-74,-76,-77,-79,-80,-81,-89,-94,217,-87,-88,100,]),'OR':([45,48,49,50,51,52,53,54,57,58,60,61,63,64,65,82,83,84,85,86,87,88,117,118,119,122,129,164,165,166,167,168,169,170,171,175,176,189,197,198,231,],[101,-114,-115,-119,-116,-117,-118,-93,121,-69,-73,-75,-78,-82,-86,-113,-114,-115,-116,-117,-118,-119,-84,-93,-85,-72,-83,-70,-71,-74,-76,-77,-79,-80,-81,-89,-94,218,-87,-88,101,]),'DOT':([45,48,49,50,51,52,53,54,65,82,83,84,85,86,87,88,118,176,231,],[-113,-114,-115,-119,-116,-117,-118,-93,132,-113,-114,-115,-116,-117,-118,-119,-93,-94,-113,]),'LESS_THAN':([45,48,49,50,51,52,53,54,60,61,63,64,65,81,82,83,84,85,86,87,88,117,118,119,129,167,168,169,170,171,175,176,197,198,231,237,249,],[108,-114,-115,-119,-116,-117,-118,-93,108,-75,-78,-82,-86,108,-113,-114,-115,-116,-117,-118,-119,-84,-93,-85,-83,-76,-77,-79,-80,-81,-89,-94,-87,-88,108,108,108,]),'IS_EQUALS':([45,48,49,50,51,52,53,54,60,61,63,64,65,81,82,83,84,85,86,87,88,117,118,119,129,167,168,169,170,171,175,176,197,198,231,237,249,],[109,-114,-115,-119,-116,-117,-118,-93,109,-75,-78,-82,-86,109,-113,-114,-115,-116,-117,-118,-119,-84,-93,-85,-83,-76,-77,-79,-80,-81,-89,-94,-87,-88,109,109,109,]),'LESS_THAN_OR_EQUALS':([45,48,49,50,51,52,53,54,60,61,63,64,65,81,82,83,84,85,86,87,88,117,118,119,129,167,168,169,170,171,175,176,197,198,231,237,249,],[110,-114,-115,-119,-116,-117,-118,-93,110,-75,-78,-82,-86,110,-113,-114,-115,-116,-117,-118,-119,-84,-93,-85,-83,-76,-77,-79,-80,-81,-89,-94,-87,-88,110,110,110,]),'GREATER_THAN':([45,48,49,50,51,52,53,54,60,61,63,64,65,81,82,83,84,85,86,87,88,117,118,119,129,167,168,169,170,171,175,176,197,198,231,237,249,],[111,-114,-115,-119,-116,-117,-118,-93,111,-75,-78,-82,-86,111,-113,-114,-115,-116,-117,-118,-119,-84,-93,-85,-83,-76,-77,-79,-80,-81,-89,-94,-87,-88,111,111,111,]),'GREATER_THAN_OR_EQUALS':([45,48,49,50,51,52,53,54,60,61,63,64,65,81,82,83,84,85,86,87,88,117,118,119,129,167,168,169,170,171,175,176,197,198,231,237,249,],[112,-114,-115,-119,-116,-117,-118,-93,112,-75,-78,-82,-86,112,-113,-114,-115,-116,-117,-118,-119,-84,-93,-85,-83,-76,-77,-79,-80,-81,-89,-94,-87,-88,112,112,112,]),'IS_DIFFERENT':([45,48,49,50,51,52,53,54,60,61,63,64,65,81,82,83,84,85,86,87,88,117,118,119,129,167,168,169,170,171,175,176,197,198,231,237,249,],[113,-114,-115,-119,-116,-117,-118,-93,113,-75,-78,-82,-86,113,-113,-114,-115,-116,-117,-118,-119,-84,-93,-85,-83,-76,-77,-79,-80,-81,-89,-94,-87,-88,113,113,113,]),'VIRGULA':([82,83,84,85,86,87,88,139,178,224,255,],[-113,-114,-115,-116,-117,-118,-119,180,-98,-99,264,]),'ELSE':([187,206,229,262,271,],[205,226,-100,-111,-110,]),'ELSEIF':([187,229,262,],[207,-100,207,]),'CASE':([194,221,238,270,276,],[222,222,222,-124,-123,]),'DEFAULT':([194,221,238,270,276,],[223,223,223,-124,-123,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracao':([0,2,26,],[2,26,26,]),'declaracao_variavel':([0,2,3,26,27,79,147,188,208,210,228,241,251,252,260,],[3,3,27,3,27,147,27,210,210,27,210,210,210,210,210,]),'declaracao_funcao':([0,2,26,],[4,4,4,]),'declaracao_estrutura':([0,2,26,],[5,5,5,]),'estrutura_de_controle':([0,2,26,188,208,228,241,251,252,260,],[6,6,6,211,211,211,211,211,211,211,]),'tipo':([0,2,3,26,27,42,71,75,77,78,79,147,180,188,208,210,228,241,251,252,260,],[9,9,28,9,28,90,137,137,137,137,28,28,137,28,28,28,28,28,28,28,28,]),'if':([0,2,26,188,208,228,241,251,252,260,],[12,12,12,12,12,12,12,12,12,12,]),'while':([0,2,26,188,208,228,241,251,252,260,],[13,13,13,13,13,13,13,13,13,13,]),'for':([0,2,26,188,208,228,241,251,252,260,],[14,14,14,14,14,14,14,14,14,14,]),'switch':([0,2,26,188,208,228,241,251,252,260,],[15,15,15,15,15,15,15,15,15,15,]),'array':([9,28,],[33,33,]),'array_inicializacao':([9,28,],[35,35,]),'expressao':([29,36,66,70,73,74,93,94,95,96,97,98,99,102,130,161,162,214,222,268,274,],[46,76,133,136,140,142,154,155,156,157,158,159,160,163,172,195,196,232,240,275,277,]),'atribuicao':([29,36,66,70,73,74,93,94,95,96,97,98,99,102,130,161,162,214,222,233,257,268,274,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,248,248,47,47,]),'variavel_ou_valor':([29,36,40,41,55,56,59,62,66,70,73,74,93,94,95,96,97,98,99,102,120,121,123,124,125,126,127,128,130,149,152,161,162,191,214,217,218,220,222,227,233,236,245,250,257,258,264,268,274,],[54,54,81,81,118,118,118,118,54,54,54,54,54,54,54,54,54,54,54,54,118,118,118,118,118,118,118,118,54,189,192,54,54,219,54,81,81,237,54,81,54,249,255,259,54,267,255,54,54,]),'expressao_logica':([29,36,66,70,73,74,93,94,95,96,97,98,99,102,130,161,162,214,222,233,257,268,274,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'expressao_relacional':([29,36,59,66,70,73,74,93,94,95,96,97,98,99,102,120,121,130,161,162,214,222,233,257,268,274,],[58,58,122,58,58,58,58,58,58,58,58,58,58,58,58,164,165,58,58,58,58,58,58,58,58,58,]),'expressao_aritmetica':([29,36,59,66,70,73,74,93,94,95,96,97,98,99,102,120,121,123,130,161,162,214,222,233,257,268,274,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,166,60,60,60,60,60,60,60,60,60,]),'expressao_multiplicativa':([29,36,59,66,70,73,74,93,94,95,96,97,98,99,102,120,121,123,124,125,130,161,162,214,222,233,257,268,274,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,167,168,61,61,61,61,61,61,61,61,61,]),'expressao_unaria':([29,36,59,62,66,70,73,74,93,94,95,96,97,98,99,102,120,121,123,124,125,126,127,128,130,161,162,214,222,233,257,268,274,],[63,63,63,129,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,169,170,171,63,63,63,63,63,63,63,63,63,]),'expressao_postfix':([29,36,55,56,59,62,66,70,73,74,93,94,95,96,97,98,99,102,120,121,123,124,125,126,127,128,130,161,162,214,222,233,257,268,274,],[64,64,117,119,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'primaria':([29,36,55,56,59,62,66,70,73,74,93,94,95,96,97,98,99,102,120,121,123,124,125,126,127,128,130,161,162,214,222,233,257,268,274,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'chaves_array':([32,44,],[72,72,]),'statement':([40,41,217,218,227,],[80,89,234,235,243,]),'operador':([45,231,248,],[93,93,257,]),'comparador':([45,60,81,231,237,249,],[102,123,149,102,250,258,]),'parametros':([71,75,77,78,180,],[138,143,145,146,201,]),'parametro':([71,75,77,78,180,],[139,139,139,139,139,]),'argumentos':([131,],[173,]),'expressao_lista':([131,],[174,]),'bloco':([148,150,179,183,184,185,205,226,253,278,279,],[187,190,200,202,203,204,225,242,262,280,281,]),'bloco_switch':([153,],[193,]),'elseif':([187,262,],[206,271,]),'declaracao_ou_coisas':([188,208,228,241,251,252,260,],[208,228,228,252,260,228,228,]),'retorno':([188,208,228,241,251,252,260,],[209,209,209,209,209,209,209,]),'print':([188,208,228,241,251,252,260,],[212,212,212,212,212,212,212,]),'operador_logico':([189,],[216,]),'cases':([194,221,238,],[221,238,238,]),'print_statement':([233,257,],[247,266,]),'parametros_dado':([245,264,],[254,273,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaracao','programa',1,'p_programa','sintatico.py',112),
  ('declaracao -> declaracao declaracao','declaracao',2,'p_declaracao','sintatico.py',115),
  ('declaracao -> declaracao_variavel','declaracao',1,'p_declaracao','sintatico.py',116),
  ('declaracao -> declaracao_funcao','declaracao',1,'p_declaracao','sintatico.py',117),
  ('declaracao -> declaracao_estrutura','declaracao',1,'p_declaracao','sintatico.py',118),
  ('declaracao -> estrutura_de_controle','declaracao',1,'p_declaracao','sintatico.py',119),
  ('declaracao -> COMMENT','declaracao',1,'p_declaracao','sintatico.py',120),
  ('declaracao -> <empty>','declaracao',0,'p_declaracao','sintatico.py',121),
  ('declaracao_variavel -> ID EQUAL expressao PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',123),
  ('declaracao_variavel -> tipo ID PONTO_VIRGULA','declaracao_variavel',3,'p_declaracao','sintatico.py',124),
  ('declaracao_variavel -> tipo ID EQUAL expressao PONTO_VIRGULA','declaracao_variavel',5,'p_declaracao','sintatico.py',125),
  ('declaracao_variavel -> tipo array EQUAL expressao PONTO_VIRGULA','declaracao_variavel',5,'p_declaracao','sintatico.py',126),
  ('declaracao_variavel -> ID PLUS PLUS PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',127),
  ('declaracao_variavel -> ID MINUS MINUS PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',128),
  ('declaracao_variavel -> declaracao_variavel declaracao_variavel','declaracao_variavel',2,'p_declaracao','sintatico.py',129),
  ('declaracao_funcao -> tipo ID PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',131),
  ('declaracao_funcao -> VOID ID PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',132),
  ('declaracao_funcao -> tipo MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',133),
  ('declaracao_funcao -> VOID MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',134),
  ('declaracao_estrutura -> STRUCT ID COLCHETE_ABERTO declaracao_variavel COLCHETE_FECHADO','declaracao_estrutura',5,'p_declaracao','sintatico.py',136),
  ('declaracao_ou_coisas -> declaracao_ou_coisas declaracao_ou_coisas','declaracao_ou_coisas',2,'p_declaracao','sintatico.py',138),
  ('declaracao_ou_coisas -> retorno','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',139),
  ('declaracao_ou_coisas -> declaracao_variavel','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',140),
  ('declaracao_ou_coisas -> estrutura_de_controle','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',141),
  ('declaracao_ou_coisas -> print','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',142),
  ('declaracao_ou_coisas -> COMMENT','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',143),
  ('declaracao_ou_coisas -> <empty>','declaracao_ou_coisas',0,'p_declaracao','sintatico.py',144),
  ('estrutura_de_controle -> if','estrutura_de_controle',1,'p_declaracao','sintatico.py',146),
  ('estrutura_de_controle -> while','estrutura_de_controle',1,'p_declaracao','sintatico.py',147),
  ('estrutura_de_controle -> for','estrutura_de_controle',1,'p_declaracao','sintatico.py',148),
  ('estrutura_de_controle -> switch','estrutura_de_controle',1,'p_declaracao','sintatico.py',149),
  ('print -> PRINTLN PAREN_ABERTO print_statement PAREN_FECHADO PONTO_VIRGULA','print',5,'p_declaracao','sintatico.py',151),
  ('print -> <empty>','print',0,'p_declaracao','sintatico.py',152),
  ('print_statement -> atribuicao operador','print_statement',2,'p_declaracao','sintatico.py',154),
  ('print_statement -> atribuicao operador print_statement','print_statement',3,'p_declaracao','sintatico.py',155),
  ('print_statement -> atribuicao','print_statement',1,'p_declaracao','sintatico.py',156),
  ('operador -> PLUS','operador',1,'p_operador','sintatico.py',159),
  ('operador -> MINUS','operador',1,'p_operador','sintatico.py',160),
  ('operador -> TIMES','operador',1,'p_operador','sintatico.py',161),
  ('operador -> DIVIDE','operador',1,'p_operador','sintatico.py',162),
  ('operador -> REST','operador',1,'p_operador','sintatico.py',163),
  ('tipo -> INT','tipo',1,'p_tipo','sintatico.py',166),
  ('tipo -> STRING','tipo',1,'p_tipo','sintatico.py',167),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','sintatico.py',168),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','sintatico.py',169),
  ('tipo -> CHAR','tipo',1,'p_tipo','sintatico.py',170),
  ('tipo -> FLOAT','tipo',1,'p_tipo','sintatico.py',171),
  ('expressao -> atribuicao','expressao',1,'p_expressao','sintatico.py',174),
  ('atribuicao -> NUMBER_DEC','atribuicao',1,'p_expressao','sintatico.py',176),
  ('atribuicao -> NUMBER_INT','atribuicao',1,'p_expressao','sintatico.py',177),
  ('atribuicao -> TYPE_FLOAT','atribuicao',1,'p_expressao','sintatico.py',178),
  ('atribuicao -> TYPE_STRING','atribuicao',1,'p_expressao','sintatico.py',179),
  ('atribuicao -> TYPE_BOOLEAN','atribuicao',1,'p_expressao','sintatico.py',180),
  ('atribuicao -> TYPE_CHAR','atribuicao',1,'p_expressao','sintatico.py',181),
  ('atribuicao -> ID','atribuicao',1,'p_expressao','sintatico.py',182),
  ('atribuicao -> ID operador expressao','atribuicao',3,'p_expressao','sintatico.py',183),
  ('atribuicao -> ID EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',184),
  ('atribuicao -> ID PLUS_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',185),
  ('atribuicao -> ID MINUS_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',186),
  ('atribuicao -> ID TIMES_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',187),
  ('atribuicao -> ID DIVIDE_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',188),
  ('atribuicao -> ID REST_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',189),
  ('atribuicao -> ID AND EQUAL expressao','atribuicao',4,'p_expressao','sintatico.py',190),
  ('atribuicao -> ID OR EQUAL expressao','atribuicao',4,'p_expressao','sintatico.py',191),
  ('atribuicao -> ID comparador expressao','atribuicao',3,'p_expressao','sintatico.py',192),
  ('atribuicao -> variavel_ou_valor PLUS_PLUS','atribuicao',2,'p_expressao','sintatico.py',193),
  ('atribuicao -> variavel_ou_valor MINUS_MINUS','atribuicao',2,'p_expressao','sintatico.py',194),
  ('atribuicao -> expressao_logica','atribuicao',1,'p_expressao','sintatico.py',195),
  ('expressao_logica -> expressao_relacional','expressao_logica',1,'p_expressao','sintatico.py',197),
  ('expressao_logica -> expressao_logica AND expressao_relacional','expressao_logica',3,'p_expressao','sintatico.py',198),
  ('expressao_logica -> expressao_logica OR expressao_relacional','expressao_logica',3,'p_expressao','sintatico.py',199),
  ('expressao_logica -> NOT expressao_relacional','expressao_logica',2,'p_expressao','sintatico.py',200),
  ('expressao_relacional -> expressao_aritmetica','expressao_relacional',1,'p_expressao','sintatico.py',202),
  ('expressao_relacional -> expressao_aritmetica comparador expressao_aritmetica','expressao_relacional',3,'p_expressao','sintatico.py',203),
  ('expressao_aritmetica -> expressao_multiplicativa','expressao_aritmetica',1,'p_expressao','sintatico.py',205),
  ('expressao_aritmetica -> expressao_aritmetica PLUS expressao_multiplicativa','expressao_aritmetica',3,'p_expressao','sintatico.py',206),
  ('expressao_aritmetica -> expressao_aritmetica MINUS expressao_multiplicativa','expressao_aritmetica',3,'p_expressao','sintatico.py',207),
  ('expressao_multiplicativa -> expressao_unaria','expressao_multiplicativa',1,'p_expressao','sintatico.py',209),
  ('expressao_multiplicativa -> expressao_multiplicativa TIMES expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',210),
  ('expressao_multiplicativa -> expressao_multiplicativa DIVIDE expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',211),
  ('expressao_multiplicativa -> expressao_multiplicativa REST expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',212),
  ('expressao_unaria -> expressao_postfix','expressao_unaria',1,'p_expressao','sintatico.py',214),
  ('expressao_unaria -> MINUS expressao_unaria','expressao_unaria',2,'p_expressao','sintatico.py',215),
  ('expressao_unaria -> PLUS_PLUS expressao_postfix','expressao_unaria',2,'p_expressao','sintatico.py',216),
  ('expressao_unaria -> MINUS_MINUS expressao_postfix','expressao_unaria',2,'p_expressao','sintatico.py',217),
  ('expressao_postfix -> primaria','expressao_postfix',1,'p_expressao','sintatico.py',219),
  ('expressao_postfix -> primaria CHAVE_ABERTA expressao CHAVE_FECHADA','expressao_postfix',4,'p_expressao','sintatico.py',220),
  ('expressao_postfix -> primaria PAREN_ABERTO argumentos PAREN_FECHADO','expressao_postfix',4,'p_expressao','sintatico.py',221),
  ('expressao_postfix -> primaria DOT ID','expressao_postfix',3,'p_expressao','sintatico.py',222),
  ('argumentos -> expressao_lista','argumentos',1,'p_expressao','sintatico.py',224),
  ('argumentos -> <empty>','argumentos',0,'p_expressao','sintatico.py',225),
  ('expressao_lista -> <empty>','expressao_lista',0,'p_expressao','sintatico.py',227),
  ('primaria -> variavel_ou_valor','primaria',1,'p_expressao','sintatico.py',229),
  ('primaria -> PAREN_ABERTO expressao PAREN_FECHADO','primaria',3,'p_expressao','sintatico.py',230),
  ('parametros -> parametro','parametros',1,'p_parametros','sintatico.py',233),
  ('parametros -> parametro VIRGULA parametros','parametros',3,'p_parametros','sintatico.py',234),
  ('parametros -> <empty>','parametros',0,'p_parametros','sintatico.py',235),
  ('parametro -> tipo ID','parametro',2,'p_parametros','sintatico.py',237),
  ('parametro -> tipo ID CHAVE_ABERTA CHAVE_FECHADA','parametro',4,'p_parametros','sintatico.py',238),
  ('bloco -> COLCHETE_ABERTO declaracao_ou_coisas COLCHETE_FECHADO','bloco',3,'p_bloco','sintatico.py',241),
  ('retorno -> RETURN PONTO_VIRGULA','retorno',2,'p_retorno','sintatico.py',244),
  ('retorno -> RETURN ID PONTO_VIRGULA','retorno',3,'p_retorno','sintatico.py',245),
  ('retorno -> RETURN expressao PONTO_VIRGULA','retorno',3,'p_retorno','sintatico.py',246),
  ('retorno -> RETURN ID PAREN_ABERTO parametros_dado PAREN_FECHADO PONTO_VIRGULA','retorno',6,'p_retorno','sintatico.py',247),
  ('parametros_dado -> variavel_ou_valor VIRGULA parametros_dado','parametros_dado',3,'p_retorno','sintatico.py',249),
  ('parametros_dado -> variavel_ou_valor','parametros_dado',1,'p_retorno','sintatico.py',250),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco','if',5,'p_if_switch','sintatico.py',253),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco ELSE bloco','if',7,'p_if_switch','sintatico.py',254),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco elseif ELSE bloco','if',8,'p_if_switch','sintatico.py',255),
  ('elseif -> ELSEIF PAREN_ABERTO statement PAREN_FECHADO bloco elseif','elseif',6,'p_if_switch','sintatico.py',257),
  ('elseif -> <empty>','elseif',0,'p_if_switch','sintatico.py',258),
  ('statement -> variavel_ou_valor comparador variavel_ou_valor operador_logico','statement',4,'p_if_switch','sintatico.py',260),
  ('variavel_ou_valor -> ID','variavel_ou_valor',1,'p_if_switch','sintatico.py',262),
  ('variavel_ou_valor -> NUMBER_DEC','variavel_ou_valor',1,'p_if_switch','sintatico.py',263),
  ('variavel_ou_valor -> NUMBER_INT','variavel_ou_valor',1,'p_if_switch','sintatico.py',264),
  ('variavel_ou_valor -> TYPE_STRING','variavel_ou_valor',1,'p_if_switch','sintatico.py',265),
  ('variavel_ou_valor -> TYPE_BOOLEAN','variavel_ou_valor',1,'p_if_switch','sintatico.py',266),
  ('variavel_ou_valor -> TYPE_CHAR','variavel_ou_valor',1,'p_if_switch','sintatico.py',267),
  ('variavel_ou_valor -> TYPE_FLOAT','variavel_ou_valor',1,'p_if_switch','sintatico.py',268),
  ('switch -> SWITCH PAREN_ABERTO ID PAREN_FECHADO bloco_switch','switch',5,'p_if_switch','sintatico.py',270),
  ('bloco_switch -> COLCHETE_ABERTO cases COLCHETE_FECHADO','bloco_switch',3,'p_if_switch','sintatico.py',272),
  ('cases -> cases cases','cases',2,'p_if_switch','sintatico.py',274),
  ('cases -> CASE expressao DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA','cases',6,'p_if_switch','sintatico.py',275),
  ('cases -> DEFAULT DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA','cases',5,'p_if_switch','sintatico.py',276),
  ('cases -> <empty>','cases',0,'p_if_switch','sintatico.py',277),
  ('while -> WHILE PAREN_ABERTO statement PAREN_FECHADO bloco','while',5,'p_loop','sintatico.py',280),
  ('for -> FOR PAREN_ABERTO tipo ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO bloco','for',14,'p_loop','sintatico.py',282),
  ('for -> FOR PAREN_ABERTO ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO bloco','for',13,'p_loop','sintatico.py',283),
  ('comparador -> LESS_THAN','comparador',1,'p_comparador','sintatico.py',286),
  ('comparador -> IS_EQUALS','comparador',1,'p_comparador','sintatico.py',287),
  ('comparador -> LESS_THAN_OR_EQUALS','comparador',1,'p_comparador','sintatico.py',288),
  ('comparador -> GREATER_THAN','comparador',1,'p_comparador','sintatico.py',289),
  ('comparador -> GREATER_THAN_OR_EQUALS','comparador',1,'p_comparador','sintatico.py',290),
  ('comparador -> IS_DIFFERENT','comparador',1,'p_comparador','sintatico.py',291),
  ('operador_logico -> AND statement','operador_logico',2,'p_operador_logico','sintatico.py',294),
  ('operador_logico -> OR statement','operador_logico',2,'p_operador_logico','sintatico.py',295),
  ('operador_logico -> <empty>','operador_logico',0,'p_operador_logico','sintatico.py',296),
  ('array -> ID chaves_array','array',2,'p_array','sintatico.py',299),
  ('array -> array_inicializacao','array',1,'p_array','sintatico.py',300),
  ('array_inicializacao -> COLCHETE_ABERTO expressao COLCHETE_FECHADO','array_inicializacao',3,'p_array','sintatico.py',302),
  ('chaves_array -> CHAVE_ABERTA expressao CHAVE_FECHADA','chaves_array',3,'p_array','sintatico.py',304),
  ('chaves_array -> CHAVE_ABERTA CHAVE_FECHADA','chaves_array',2,'p_array','sintatico.py',305),
]
