
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN BREAK CASE CHAR CHAVE_ABERTA CHAVE_FECHADA COLCHETE_ABERTO COLCHETE_FECHADO COMMENT COMPARE_OPERATOR DEFAULT DIVIDE DIVIDE_EQUAL DOIS_PONTOS DOT DOUBLE ELSE ELSEIF EQUAL FLOAT FOR GREATER_THAN GREATER_THAN_OR_EQUALS ID IF INT IS_DIFFERENT IS_EQUALS LESS_THAN LESS_THAN_OR_EQUALS MAIN MINUS MINUS_EQUAL MINUS_MINUS NOT NUMBER_DEC NUMBER_INT OPERATOR OR PAREN_ABERTO PAREN_FECHADO PLUS PLUS_EQUAL PLUS_PLUS PONTO_VIRGULA PRINTLN REST REST_EQUAL RETURN SCANF SPECIAL_SYMBOL STRING STRUCT SWITCH TIMES TIMES_EQUAL TYPE_BOOLEAN TYPE_CHAR TYPE_FLOAT TYPE_STRING VIRGULA VOID WHILEprograma : declaracaodeclaracao : declaracao_variavel\n    | declaracao_funcao\n    | declaracao_estrutura\n    | declaracao declaracao\n    | COMMENT\n    | declaracao_ou_coisas\n    | \n    \n    declaracao_variavel : tipo ID PONTO_VIRGULA\n    | tipo ID EQUAL expressao PONTO_VIRGULA\n    | ID PLUS PLUS PONTO_VIRGULA\n    | ID MINUS MINUS PONTO_VIRGULA\n    | declaracao_variavel declaracao_variavel\n    \n    declaracao_funcao : tipo ID PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | VOID ID PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | tipo MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | VOID MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco\n    \n    declaracao_estrutura : STRUCT ID COLCHETE_ABERTO declaracao_variavel COLCHETE_FECHADOtipo : INT\n    | STRING\n    | BOOLEAN\n    | DOUBLE\n    | CHAR\n    | FLOATexpressao : atribuicao\n    \n    atribuicao : NUMBER_DEC\n    | NUMBER_INT\n    | TYPE_FLOAT\n    | TYPE_STRING\n    | TYPE_BOOLEAN\n    | TYPE_CHAR\n    | ID\n    | ID EQUAL expressao\n    | ID PLUS_EQUAL expressao\n    | ID MINUS_EQUAL expressao\n    | ID TIMES_EQUAL expressao\n    | ID DIVIDE_EQUAL expressao\n    | ID REST_EQUAL expressao\n    | ID AND EQUAL expressao\n    | ID OR EQUAL expressao\n    | ID comparador expressao\n    | variavel_ou_valor PLUS_PLUS\n    | variavel_ou_valor MINUS_MINUS\n    | expressao_logica\n    \n    expressao_logica : expressao_relacional\n    | expressao_logica AND expressao_relacional\n    | expressao_logica OR expressao_relacional\n    | NOT expressao_relacional\n    \n    expressao_relacional : expressao_aritmetica\n    | expressao_aritmetica comparador expressao_aritmetica\n    \n    expressao_aritmetica : expressao_multiplicativa\n    | expressao_aritmetica PLUS expressao_multiplicativa\n    | expressao_aritmetica MINUS expressao_multiplicativa\n    \n    expressao_multiplicativa : expressao_unaria\n    | expressao_multiplicativa TIMES expressao_unaria\n    | expressao_multiplicativa DIVIDE expressao_unaria\n    | expressao_multiplicativa REST expressao_unaria\n    \n    expressao_unaria : expressao_postfix\n    | MINUS expressao_unaria\n    | PLUS_PLUS expressao_postfix\n    | MINUS_MINUS expressao_postfix\n    \n    expressao_postfix : primaria\n    | primaria CHAVE_ABERTA expressao CHAVE_FECHADA\n    | primaria PAREN_ABERTO argumentos PAREN_FECHADO\n    | primaria DOT ID\n    \n    argumentos : \n    \n    primaria : variavel_ou_valor\n    | PAREN_ABERTO expressao PAREN_FECHADOparametros : parametro\n    | parametro VIRGULA parametros\n    | \n    \n    parametro : tipo ID\n    | tipo ID CHAVE_ABERTA CHAVE_FECHADAbloco : COLCHETE_ABERTO declaracao_ou_coisas COLCHETE_FECHADOdeclaracao_ou_coisas : declaracao_ou_coisas declaracao_ou_coisas\n    | retorno\n    | declaracao_variavel\n    | if\n    | while\n    | for\n    | switch\n    | retorno : RETURN PONTO_VIRGULA\n    | RETURN ID PONTO_VIRGULA\n    | RETURN expressao PONTO_VIRGULA\n    | RETURN ID PAREN_ABERTO parametros_dado PAREN_FECHADO PONTO_VIRGULA\n    \n    parametros_dado : variavel_ou_valor VIRGULA parametros_dado\n    | variavel_ou_valorif : IF PAREN_ABERTO statement PAREN_FECHADO bloco ELSE bloco\n    | IF PAREN_ABERTO statement PAREN_FECHADO bloco elseif ELSE bloco\n\n    elseif : ELSEIF PAREN_ABERTO statement PAREN_FECHADO bloco elseif\n    | \n    \n    statement : variavel_ou_valor comparador variavel_ou_valor operador_logico\n    \n    variavel_ou_valor : ID\n    | NUMBER_DEC\n    | NUMBER_INT\n    | TYPE_STRING\n    | TYPE_BOOLEAN\n    | TYPE_CHAR\n    | TYPE_FLOAT\n    \n    switch : SWITCH PAREN_ABERTO ID PAREN_FECHADO bloco_switch\n    \n    bloco_switch : COLCHETE_ABERTO cases COLCHETE_FECHADO\n    \n    cases : cases cases\n    | CASE expressao DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA\n    | DEFAULT DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA\n    | while : WHILE PAREN_ABERTO statement PAREN_FECHADO bloco\n    \n    for : FOR PAREN_ABERTO tipo ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO bloco\n    | FOR PAREN_ABERTO ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO blococomparador : LESS_THAN\n    | IS_EQUALS\n    | LESS_THAN_OR_EQUALS\n    | GREATER_THAN\n    | GREATER_THAN_OR_EQUALS\n    | IS_DIFFERENToperador_logico : AND statement\n    | OR statement\n    | array : ID chaves_array\n    | array_inicializacao\n    \n    array_inicializacao : COLCHETE_ABERTO expressao COLCHETE_FECHADO\n    \n    chaves_array : CHAVE_ABERTA expressao CHAVE_FECHADA chaves_array\n    | '
    
_lr_action_items = {'COMMENT':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,167,174,184,187,190,192,193,194,195,210,213,219,222,245,246,],[6,6,-2,-3,-4,-6,-7,-76,-78,-79,-80,-81,6,-13,-75,-77,-83,-9,-84,-85,-11,-12,-10,-18,-107,-101,-14,-16,-15,-17,-86,-89,-74,-102,-90,-109,-108,]),'ID':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,28,29,30,31,32,40,43,52,53,56,59,63,64,65,66,68,69,76,77,78,79,80,81,82,83,84,87,88,89,90,91,92,93,94,109,110,112,113,114,115,116,117,119,121,125,129,133,134,137,146,147,162,165,167,174,176,182,184,185,187,190,192,193,194,195,200,202,203,205,207,210,212,213,216,219,221,222,225,226,227,229,231,235,239,245,246,],[9,9,9,-3,-4,-6,9,33,37,39,-76,-78,-79,-80,-81,-19,-20,-21,-22,-23,-24,41,9,9,67,9,9,-83,96,100,100,100,100,100,100,126,127,-9,96,9,-84,100,96,96,96,96,96,96,96,-110,-111,-112,-113,-114,-115,-85,100,100,100,100,100,100,100,100,96,160,164,168,-11,-12,9,96,96,100,100,-10,-18,100,9,-107,100,-101,-14,-16,-15,-17,-86,9,100,100,100,96,-89,100,-74,100,-102,9,-90,100,9,9,100,9,96,96,-109,-108,]),'VOID':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,167,174,184,187,190,192,193,194,195,210,213,219,222,245,246,],[10,10,-2,-3,-4,-6,-7,-76,-78,-79,-80,-81,10,-13,-75,-77,-83,-9,-84,-85,-11,-12,-10,-18,-107,-101,-14,-16,-15,-17,-86,-89,-74,-102,-90,-109,-108,]),'STRUCT':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,167,174,184,187,190,192,193,194,195,210,213,219,222,245,246,],[11,11,-2,-3,-4,-6,-7,-76,-78,-79,-80,-81,11,-13,-75,-77,-83,-9,-84,-85,-11,-12,-10,-18,-107,-101,-14,-16,-15,-17,-86,-89,-74,-102,-90,-109,-108,]),'INT':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,65,68,70,71,74,75,76,77,94,133,134,137,167,170,174,182,184,187,190,192,193,194,195,200,210,213,219,221,222,226,227,231,245,246,],[17,17,17,-3,-4,-6,17,-76,-78,-79,-80,-81,17,17,17,17,-83,17,-9,17,17,17,17,17,-84,-85,-11,-12,17,-10,17,-18,17,-107,-101,-14,-16,-15,-17,-86,17,-89,-74,-102,17,-90,17,17,17,-109,-108,]),'STRING':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,65,68,70,71,74,75,76,77,94,133,134,137,167,170,174,182,184,187,190,192,193,194,195,200,210,213,219,221,222,226,227,231,245,246,],[18,18,18,-3,-4,-6,18,-76,-78,-79,-80,-81,18,18,18,18,-83,18,-9,18,18,18,18,18,-84,-85,-11,-12,18,-10,18,-18,18,-107,-101,-14,-16,-15,-17,-86,18,-89,-74,-102,18,-90,18,18,18,-109,-108,]),'BOOLEAN':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,65,68,70,71,74,75,76,77,94,133,134,137,167,170,174,182,184,187,190,192,193,194,195,200,210,213,219,221,222,226,227,231,245,246,],[19,19,19,-3,-4,-6,19,-76,-78,-79,-80,-81,19,19,19,19,-83,19,-9,19,19,19,19,19,-84,-85,-11,-12,19,-10,19,-18,19,-107,-101,-14,-16,-15,-17,-86,19,-89,-74,-102,19,-90,19,19,19,-109,-108,]),'DOUBLE':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,65,68,70,71,74,75,76,77,94,133,134,137,167,170,174,182,184,187,190,192,193,194,195,200,210,213,219,221,222,226,227,231,245,246,],[20,20,20,-3,-4,-6,20,-76,-78,-79,-80,-81,20,20,20,20,-83,20,-9,20,20,20,20,20,-84,-85,-11,-12,20,-10,20,-18,20,-107,-101,-14,-16,-15,-17,-86,20,-89,-74,-102,20,-90,20,20,20,-109,-108,]),'CHAR':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,65,68,70,71,74,75,76,77,94,133,134,137,167,170,174,182,184,187,190,192,193,194,195,200,210,213,219,221,222,226,227,231,245,246,],[21,21,21,-3,-4,-6,21,-76,-78,-79,-80,-81,21,21,21,21,-83,21,-9,21,21,21,21,21,-84,-85,-11,-12,21,-10,21,-18,21,-107,-101,-14,-16,-15,-17,-86,21,-89,-74,-102,21,-90,21,21,21,-109,-108,]),'FLOAT':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,65,68,70,71,74,75,76,77,94,133,134,137,167,170,174,182,184,187,190,192,193,194,195,200,210,213,219,221,222,226,227,231,245,246,],[22,22,22,-3,-4,-6,22,-76,-78,-79,-80,-81,22,22,22,22,-83,22,-9,22,22,22,22,22,-84,-85,-11,-12,22,-10,22,-18,22,-107,-101,-14,-16,-15,-17,-86,22,-89,-74,-102,22,-90,22,22,22,-109,-108,]),'RETURN':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,167,174,182,184,187,190,192,193,194,195,200,210,213,219,221,222,226,227,231,245,246,],[23,23,-2,-3,-4,-6,23,-76,-78,-79,-80,-81,23,-13,23,-77,-83,-9,-84,-85,-11,-12,-10,-18,23,-107,-101,-14,-16,-15,-17,-86,23,-89,-74,-102,23,-90,23,23,23,-109,-108,]),'IF':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,167,174,182,184,187,190,192,193,194,195,200,210,213,219,221,222,226,227,231,245,246,],[24,24,-2,-3,-4,-6,24,-76,-78,-79,-80,-81,24,-13,24,-77,-83,-9,-84,-85,-11,-12,-10,-18,24,-107,-101,-14,-16,-15,-17,-86,24,-89,-74,-102,24,-90,24,24,24,-109,-108,]),'WHILE':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,167,174,182,184,187,190,192,193,194,195,200,210,213,219,221,222,226,227,231,245,246,],[25,25,-2,-3,-4,-6,25,-76,-78,-79,-80,-81,25,-13,25,-77,-83,-9,-84,-85,-11,-12,-10,-18,25,-107,-101,-14,-16,-15,-17,-86,25,-89,-74,-102,25,-90,25,25,25,-109,-108,]),'FOR':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,167,174,182,184,187,190,192,193,194,195,200,210,213,219,221,222,226,227,231,245,246,],[26,26,-2,-3,-4,-6,26,-76,-78,-79,-80,-81,26,-13,26,-77,-83,-9,-84,-85,-11,-12,-10,-18,26,-107,-101,-14,-16,-15,-17,-86,26,-89,-74,-102,26,-90,26,26,26,-109,-108,]),'SWITCH':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,167,174,182,184,187,190,192,193,194,195,200,210,213,219,221,222,226,227,231,245,246,],[27,27,-2,-3,-4,-6,27,-76,-78,-79,-80,-81,27,-13,27,-77,-83,-9,-84,-85,-11,-12,-10,-18,27,-107,-101,-14,-16,-15,-17,-86,27,-89,-74,-102,27,-90,27,27,27,-109,-108,]),'$end':([0,1,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,167,174,184,187,190,192,193,194,195,210,213,219,222,245,246,],[-8,0,-1,-2,-3,-4,-6,-7,-76,-78,-79,-80,-81,-5,-13,-75,-77,-83,-9,-84,-85,-11,-12,-10,-18,-107,-101,-14,-16,-15,-17,-86,-89,-74,-102,-90,-109,-108,]),'MAIN':([8,10,17,18,19,20,21,22,],[34,38,-19,-20,-21,-22,-23,-24,]),'PLUS':([9,35,41,45,46,47,48,49,50,51,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,149,152,153,154,155,156,157,160,179,180,],[35,72,-94,-95,-96,-100,-97,-98,-99,-67,113,-51,-54,-58,-62,-94,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-59,-68,113,-52,-53,-55,-56,-57,-65,-63,-64,]),'MINUS':([9,23,36,41,43,45,46,47,48,49,50,51,56,57,58,59,60,61,62,69,79,80,81,82,83,84,87,88,89,90,91,92,93,96,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,146,147,149,152,153,154,155,156,157,160,179,180,207,235,239,],[36,59,73,-94,59,-95,-96,-100,-97,-98,-99,-67,59,114,-51,59,-54,-58,-62,59,59,59,59,59,59,59,59,-110,-111,-112,-113,-114,-115,-94,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,59,59,59,59,59,59,59,59,-59,59,59,59,-68,114,-52,-53,-55,-56,-57,-65,-63,-64,59,59,59,]),'COLCHETE_FECHADO':([12,13,14,15,16,29,31,32,40,68,77,94,133,134,137,167,182,184,187,188,195,200,206,210,213,218,219,222,237,241,245,246,],[-76,-78,-79,-80,-81,-13,-75,-77,-83,-9,-84,-85,-11,-12,174,-10,-82,-107,-101,-106,-86,213,219,-89,-74,-103,-102,-90,-105,-104,-109,-108,]),'BREAK':([12,13,14,15,16,29,31,32,40,68,77,94,133,134,167,184,187,195,210,213,219,221,222,226,227,231,245,246,],[-76,-78,-79,-80,-81,-13,-75,-77,-83,-9,-84,-85,-11,-12,-10,-107,-101,-86,-89,-74,-102,-82,-90,-82,232,236,-109,-108,]),'PONTO_VIRGULA':([23,33,41,42,44,45,46,47,48,49,50,51,54,55,57,58,60,61,62,67,72,73,96,97,98,99,100,101,102,103,104,105,106,107,108,111,118,128,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,160,175,177,178,179,180,186,204,230,232,234,236,],[40,68,77,94,-25,-26,-27,-28,-29,-30,-31,-67,-44,-45,-49,-51,-54,-58,-62,68,133,134,-32,-42,-43,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-48,-59,167,-33,-34,-35,-36,-37,-38,-41,-68,-46,-47,-50,-52,-53,-55,-56,-57,-65,195,-39,-40,-63,-64,205,216,235,237,239,241,]),'NUMBER_DEC':([23,43,52,53,56,59,63,64,69,78,79,80,81,82,83,84,87,88,89,90,91,92,93,109,110,112,113,114,115,116,117,119,146,147,162,165,176,185,202,203,205,207,212,216,225,229,235,239,],[45,45,102,102,102,102,102,102,45,102,45,45,45,45,45,45,45,-110,-111,-112,-113,-114,-115,102,102,102,102,102,102,102,102,45,45,45,102,102,102,102,102,102,102,45,102,102,102,102,45,45,]),'NUMBER_INT':([23,43,52,53,56,59,63,64,69,78,79,80,81,82,83,84,87,88,89,90,91,92,93,109,110,112,113,114,115,116,117,119,146,147,162,165,176,185,202,203,205,207,212,216,225,229,235,239,],[46,46,103,103,103,103,103,103,46,103,46,46,46,46,46,46,46,-110,-111,-112,-113,-114,-115,103,103,103,103,103,103,103,103,46,46,46,103,103,103,103,103,103,103,46,103,103,103,103,46,46,]),'TYPE_FLOAT':([23,43,52,53,56,59,63,64,69,78,79,80,81,82,83,84,87,88,89,90,91,92,93,109,110,112,113,114,115,116,117,119,146,147,162,165,176,185,202,203,205,207,212,216,225,229,235,239,],[47,47,107,107,107,107,107,107,47,107,47,47,47,47,47,47,47,-110,-111,-112,-113,-114,-115,107,107,107,107,107,107,107,107,47,47,47,107,107,107,107,107,107,107,47,107,107,107,107,47,47,]),'TYPE_STRING':([23,43,52,53,56,59,63,64,69,78,79,80,81,82,83,84,87,88,89,90,91,92,93,109,110,112,113,114,115,116,117,119,146,147,162,165,176,185,202,203,205,207,212,216,225,229,235,239,],[48,48,104,104,104,104,104,104,48,104,48,48,48,48,48,48,48,-110,-111,-112,-113,-114,-115,104,104,104,104,104,104,104,104,48,48,48,104,104,104,104,104,104,104,48,104,104,104,104,48,48,]),'TYPE_BOOLEAN':([23,43,52,53,56,59,63,64,69,78,79,80,81,82,83,84,87,88,89,90,91,92,93,109,110,112,113,114,115,116,117,119,146,147,162,165,176,185,202,203,205,207,212,216,225,229,235,239,],[49,49,105,105,105,105,105,105,49,105,49,49,49,49,49,49,49,-110,-111,-112,-113,-114,-115,105,105,105,105,105,105,105,105,49,49,49,105,105,105,105,105,105,105,49,105,105,105,105,49,49,]),'TYPE_CHAR':([23,43,52,53,56,59,63,64,69,78,79,80,81,82,83,84,87,88,89,90,91,92,93,109,110,112,113,114,115,116,117,119,146,147,162,165,176,185,202,203,205,207,212,216,225,229,235,239,],[50,50,106,106,106,106,106,106,50,106,50,50,50,50,50,50,50,-110,-111,-112,-113,-114,-115,106,106,106,106,106,106,106,106,50,50,50,106,106,106,106,106,106,106,50,106,106,106,106,50,50,]),'NOT':([23,43,69,79,80,81,82,83,84,87,88,89,90,91,92,93,119,146,147,207,235,239,],[56,56,56,56,56,56,56,56,56,56,-110,-111,-112,-113,-114,-115,56,56,56,56,56,56,]),'PLUS_PLUS':([23,41,43,45,46,47,48,49,50,51,56,59,69,79,80,81,82,83,84,87,88,89,90,91,92,93,96,109,110,112,113,114,115,116,117,119,146,147,207,235,239,],[52,-94,52,-95,-96,-100,-97,-98,-99,97,52,52,52,52,52,52,52,52,52,52,-110,-111,-112,-113,-114,-115,-94,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'MINUS_MINUS':([23,41,43,45,46,47,48,49,50,51,56,59,69,79,80,81,82,83,84,87,88,89,90,91,92,93,96,109,110,112,113,114,115,116,117,119,146,147,207,235,239,],[53,-94,53,-95,-96,-100,-97,-98,-99,98,53,53,53,53,53,53,53,53,53,53,-110,-111,-112,-113,-114,-115,-94,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'PAREN_ABERTO':([23,24,25,26,27,33,34,37,38,41,43,45,46,47,48,49,50,51,52,53,56,59,62,69,79,80,81,82,83,84,87,88,89,90,91,92,93,96,100,101,102,103,104,105,106,107,109,110,112,113,114,115,116,117,119,146,147,149,199,207,235,239,],[43,63,64,65,66,70,71,74,75,78,43,-95,-96,-100,-97,-98,-99,-67,43,43,43,43,120,43,43,43,43,43,43,43,43,-110,-111,-112,-113,-114,-115,-94,-94,-67,-95,-96,-97,-98,-99,-100,43,43,43,43,43,43,43,43,43,43,43,-68,212,43,43,43,]),'EQUAL':([33,41,67,85,86,96,126,164,],[69,79,69,146,147,79,165,185,]),'COLCHETE_ABERTO':([39,161,163,166,169,171,172,173,197,211,228,243,244,],[76,182,182,188,182,182,182,182,182,182,182,182,182,]),'PLUS_EQUAL':([41,96,],[80,80,]),'MINUS_EQUAL':([41,96,],[81,81,]),'TIMES_EQUAL':([41,96,],[82,82,]),'DIVIDE_EQUAL':([41,96,],[83,83,]),'REST_EQUAL':([41,96,],[84,84,]),'AND':([41,45,46,47,48,49,50,51,54,55,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,111,118,149,150,151,152,153,154,155,156,157,160,179,180,183,],[85,-95,-96,-100,-97,-98,-99,-67,109,-45,-49,-51,-54,-58,-62,85,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-48,-59,-68,-46,-47,-50,-52,-53,-55,-56,-57,-65,-63,-64,202,]),'OR':([41,45,46,47,48,49,50,51,54,55,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,111,118,149,150,151,152,153,154,155,156,157,160,179,180,183,],[86,-95,-96,-100,-97,-98,-99,-67,110,-45,-49,-51,-54,-58,-62,86,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-48,-59,-68,-46,-47,-50,-52,-53,-55,-56,-57,-65,-63,-64,203,]),'CHAVE_ABERTA':([41,45,46,47,48,49,50,51,62,96,100,101,102,103,104,105,106,107,149,168,],[-94,-95,-96,-100,-97,-98,-99,-67,119,-94,-94,-67,-95,-96,-97,-98,-99,-100,-68,189,]),'DOT':([41,45,46,47,48,49,50,51,62,96,100,101,102,103,104,105,106,107,149,],[-94,-95,-96,-100,-97,-98,-99,-67,121,-94,-94,-67,-95,-96,-97,-98,-99,-100,-68,]),'TIMES':([41,45,46,47,48,49,50,51,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,149,153,154,155,156,157,160,179,180,],[-94,-95,-96,-100,-97,-98,-99,-67,115,-54,-58,-62,-94,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-59,-68,115,115,-55,-56,-57,-65,-63,-64,]),'DIVIDE':([41,45,46,47,48,49,50,51,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,149,153,154,155,156,157,160,179,180,],[-94,-95,-96,-100,-97,-98,-99,-67,116,-54,-58,-62,-94,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-59,-68,116,116,-55,-56,-57,-65,-63,-64,]),'REST':([41,45,46,47,48,49,50,51,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,149,153,154,155,156,157,160,179,180,],[-94,-95,-96,-100,-97,-98,-99,-67,117,-54,-58,-62,-94,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-59,-68,117,117,-55,-56,-57,-65,-63,-64,]),'LESS_THAN':([41,45,46,47,48,49,50,51,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,123,149,153,154,155,156,157,160,179,180,217,224,],[88,-95,-96,-100,-97,-98,-99,-67,88,-51,-54,-58,-62,88,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-59,88,-68,-52,-53,-55,-56,-57,-65,-63,-64,88,88,]),'IS_EQUALS':([41,45,46,47,48,49,50,51,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,123,149,153,154,155,156,157,160,179,180,217,224,],[89,-95,-96,-100,-97,-98,-99,-67,89,-51,-54,-58,-62,89,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-59,89,-68,-52,-53,-55,-56,-57,-65,-63,-64,89,89,]),'LESS_THAN_OR_EQUALS':([41,45,46,47,48,49,50,51,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,123,149,153,154,155,156,157,160,179,180,217,224,],[90,-95,-96,-100,-97,-98,-99,-67,90,-51,-54,-58,-62,90,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-59,90,-68,-52,-53,-55,-56,-57,-65,-63,-64,90,90,]),'GREATER_THAN':([41,45,46,47,48,49,50,51,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,123,149,153,154,155,156,157,160,179,180,217,224,],[91,-95,-96,-100,-97,-98,-99,-67,91,-51,-54,-58,-62,91,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-59,91,-68,-52,-53,-55,-56,-57,-65,-63,-64,91,91,]),'GREATER_THAN_OR_EQUALS':([41,45,46,47,48,49,50,51,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,123,149,153,154,155,156,157,160,179,180,217,224,],[92,-95,-96,-100,-97,-98,-99,-67,92,-51,-54,-58,-62,92,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-59,92,-68,-52,-53,-55,-56,-57,-65,-63,-64,92,92,]),'IS_DIFFERENT':([41,45,46,47,48,49,50,51,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,123,149,153,154,155,156,157,160,179,180,217,224,],[93,-95,-96,-100,-97,-98,-99,-67,93,-51,-54,-58,-62,93,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-59,93,-68,-52,-53,-55,-56,-57,-65,-63,-64,93,93,]),'PAREN_FECHADO':([44,45,46,47,48,49,50,51,54,55,57,58,60,61,62,70,71,74,75,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,118,120,122,124,127,130,131,132,135,136,138,139,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,159,160,168,170,177,178,179,180,183,191,196,201,209,214,215,223,240,242,],[-25,-26,-27,-28,-29,-30,-31,-67,-44,-45,-49,-51,-54,-58,-62,-71,-71,-71,-71,149,-32,-42,-43,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-48,-59,-66,161,163,166,169,-69,171,172,173,175,-88,-33,-34,-35,-36,-37,-38,-41,-68,-46,-47,-50,-52,-53,-55,-56,-57,180,-65,-72,-71,-39,-40,-63,-64,-118,-70,-87,-93,-73,-116,-117,228,243,244,]),'CHAVE_FECHADA':([44,45,46,47,48,49,50,51,54,55,57,58,60,61,62,96,97,98,99,100,101,102,103,104,105,106,107,108,111,118,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,158,160,177,178,179,180,189,],[-25,-26,-27,-28,-29,-30,-31,-67,-44,-45,-49,-51,-54,-58,-62,-32,-42,-43,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-48,-59,-33,-34,-35,-36,-37,-38,-41,-68,-46,-47,-50,-52,-53,-55,-56,-57,179,-65,-39,-40,-63,-64,209,]),'DOIS_PONTOS':([44,45,46,47,48,49,50,51,54,55,57,58,60,61,62,96,97,98,99,100,101,102,103,104,105,106,107,108,111,118,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,160,177,178,179,180,208,220,],[-25,-26,-27,-28,-29,-30,-31,-67,-44,-45,-49,-51,-54,-58,-62,-32,-42,-43,-60,-94,-67,-95,-96,-97,-98,-99,-100,-61,-48,-59,-33,-34,-35,-36,-37,-38,-41,-68,-46,-47,-50,-52,-53,-55,-56,-57,-65,-39,-40,-63,-64,221,226,]),'VIRGULA':([100,102,103,104,105,106,107,131,139,168,209,],[-94,-95,-96,-97,-98,-99,-100,170,176,-72,-73,]),'ELSE':([181,198,213,233,238,],[197,211,-74,-92,-91,]),'ELSEIF':([181,213,233,],[199,-74,199,]),'CASE':([188,206,218,237,241,],[207,207,207,-105,-104,]),'DEFAULT':([188,206,218,237,241,],[208,208,208,-105,-104,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracao':([0,2,28,],[2,28,28,]),'declaracao_variavel':([0,2,3,7,28,29,31,32,76,137,182,200,221,226,227,231,],[3,3,29,32,3,29,32,29,137,29,32,32,32,32,32,32,]),'declaracao_funcao':([0,2,28,],[4,4,4,]),'declaracao_estrutura':([0,2,28,],[5,5,5,]),'declaracao_ou_coisas':([0,2,7,28,31,182,200,221,226,227,231,],[7,7,31,7,31,200,31,227,231,31,31,]),'tipo':([0,2,3,7,28,29,31,32,65,70,71,74,75,76,137,170,182,200,221,226,227,231,],[8,8,30,30,8,30,30,30,125,129,129,129,129,30,30,129,30,30,30,30,30,30,]),'retorno':([0,2,7,28,31,182,200,221,226,227,231,],[12,12,12,12,12,12,12,12,12,12,12,]),'if':([0,2,7,28,31,182,200,221,226,227,231,],[13,13,13,13,13,13,13,13,13,13,13,]),'while':([0,2,7,28,31,182,200,221,226,227,231,],[14,14,14,14,14,14,14,14,14,14,14,]),'for':([0,2,7,28,31,182,200,221,226,227,231,],[15,15,15,15,15,15,15,15,15,15,15,]),'switch':([0,2,7,28,31,182,200,221,226,227,231,],[16,16,16,16,16,16,16,16,16,16,16,]),'expressao':([23,43,69,79,80,81,82,83,84,87,119,146,147,207,235,239,],[42,95,128,140,141,142,143,144,145,148,158,177,178,220,240,242,]),'atribuicao':([23,43,69,79,80,81,82,83,84,87,119,146,147,207,235,239,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'variavel_ou_valor':([23,43,52,53,56,59,63,64,69,78,79,80,81,82,83,84,87,109,110,112,113,114,115,116,117,119,146,147,162,165,176,185,202,203,205,207,212,216,225,229,235,239,],[51,51,101,101,101,101,123,123,51,139,51,51,51,51,51,51,51,101,101,101,101,101,101,101,101,51,51,51,183,186,139,204,123,123,217,51,123,224,230,234,51,51,]),'expressao_logica':([23,43,69,79,80,81,82,83,84,87,119,146,147,207,235,239,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'expressao_relacional':([23,43,56,69,79,80,81,82,83,84,87,109,110,119,146,147,207,235,239,],[55,55,111,55,55,55,55,55,55,55,55,150,151,55,55,55,55,55,55,]),'expressao_aritmetica':([23,43,56,69,79,80,81,82,83,84,87,109,110,112,119,146,147,207,235,239,],[57,57,57,57,57,57,57,57,57,57,57,57,57,152,57,57,57,57,57,57,]),'expressao_multiplicativa':([23,43,56,69,79,80,81,82,83,84,87,109,110,112,113,114,119,146,147,207,235,239,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,153,154,58,58,58,58,58,58,]),'expressao_unaria':([23,43,56,59,69,79,80,81,82,83,84,87,109,110,112,113,114,115,116,117,119,146,147,207,235,239,],[60,60,60,118,60,60,60,60,60,60,60,60,60,60,60,60,60,155,156,157,60,60,60,60,60,60,]),'expressao_postfix':([23,43,52,53,56,59,69,79,80,81,82,83,84,87,109,110,112,113,114,115,116,117,119,146,147,207,235,239,],[61,61,99,108,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'primaria':([23,43,52,53,56,59,69,79,80,81,82,83,84,87,109,110,112,113,114,115,116,117,119,146,147,207,235,239,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'comparador':([41,57,96,123,217,224,],[87,112,87,162,225,229,]),'statement':([63,64,202,203,212,],[122,124,214,215,223,]),'parametros':([70,71,74,75,170,],[130,132,135,136,191,]),'parametro':([70,71,74,75,170,],[131,131,131,131,131,]),'parametros_dado':([78,176,],[138,196,]),'argumentos':([120,],[159,]),'bloco':([161,163,169,171,172,173,197,211,228,243,244,],[181,184,190,192,193,194,210,222,233,245,246,]),'bloco_switch':([166,],[187,]),'elseif':([181,233,],[198,238,]),'operador_logico':([183,],[201,]),'cases':([188,206,218,],[206,218,218,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaracao','programa',1,'p_programa','sintatico.py',111),
  ('declaracao -> declaracao_variavel','declaracao',1,'p_declaracao','sintatico.py',114),
  ('declaracao -> declaracao_funcao','declaracao',1,'p_declaracao','sintatico.py',115),
  ('declaracao -> declaracao_estrutura','declaracao',1,'p_declaracao','sintatico.py',116),
  ('declaracao -> declaracao declaracao','declaracao',2,'p_declaracao','sintatico.py',117),
  ('declaracao -> COMMENT','declaracao',1,'p_declaracao','sintatico.py',118),
  ('declaracao -> declaracao_ou_coisas','declaracao',1,'p_declaracao','sintatico.py',119),
  ('declaracao -> <empty>','declaracao',0,'p_declaracao','sintatico.py',120),
  ('declaracao_variavel -> tipo ID PONTO_VIRGULA','declaracao_variavel',3,'p_declaracao','sintatico.py',122),
  ('declaracao_variavel -> tipo ID EQUAL expressao PONTO_VIRGULA','declaracao_variavel',5,'p_declaracao','sintatico.py',123),
  ('declaracao_variavel -> ID PLUS PLUS PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',124),
  ('declaracao_variavel -> ID MINUS MINUS PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',125),
  ('declaracao_variavel -> declaracao_variavel declaracao_variavel','declaracao_variavel',2,'p_declaracao','sintatico.py',126),
  ('declaracao_funcao -> tipo ID PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',128),
  ('declaracao_funcao -> VOID ID PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',129),
  ('declaracao_funcao -> tipo MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',130),
  ('declaracao_funcao -> VOID MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',131),
  ('declaracao_estrutura -> STRUCT ID COLCHETE_ABERTO declaracao_variavel COLCHETE_FECHADO','declaracao_estrutura',5,'p_declaracao','sintatico.py',133),
  ('tipo -> INT','tipo',1,'p_tipo','sintatico.py',136),
  ('tipo -> STRING','tipo',1,'p_tipo','sintatico.py',137),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','sintatico.py',138),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','sintatico.py',139),
  ('tipo -> CHAR','tipo',1,'p_tipo','sintatico.py',140),
  ('tipo -> FLOAT','tipo',1,'p_tipo','sintatico.py',141),
  ('expressao -> atribuicao','expressao',1,'p_expressao','sintatico.py',144),
  ('atribuicao -> NUMBER_DEC','atribuicao',1,'p_expressao','sintatico.py',146),
  ('atribuicao -> NUMBER_INT','atribuicao',1,'p_expressao','sintatico.py',147),
  ('atribuicao -> TYPE_FLOAT','atribuicao',1,'p_expressao','sintatico.py',148),
  ('atribuicao -> TYPE_STRING','atribuicao',1,'p_expressao','sintatico.py',149),
  ('atribuicao -> TYPE_BOOLEAN','atribuicao',1,'p_expressao','sintatico.py',150),
  ('atribuicao -> TYPE_CHAR','atribuicao',1,'p_expressao','sintatico.py',151),
  ('atribuicao -> ID','atribuicao',1,'p_expressao','sintatico.py',152),
  ('atribuicao -> ID EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',153),
  ('atribuicao -> ID PLUS_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',154),
  ('atribuicao -> ID MINUS_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',155),
  ('atribuicao -> ID TIMES_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',156),
  ('atribuicao -> ID DIVIDE_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',157),
  ('atribuicao -> ID REST_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',158),
  ('atribuicao -> ID AND EQUAL expressao','atribuicao',4,'p_expressao','sintatico.py',159),
  ('atribuicao -> ID OR EQUAL expressao','atribuicao',4,'p_expressao','sintatico.py',160),
  ('atribuicao -> ID comparador expressao','atribuicao',3,'p_expressao','sintatico.py',161),
  ('atribuicao -> variavel_ou_valor PLUS_PLUS','atribuicao',2,'p_expressao','sintatico.py',162),
  ('atribuicao -> variavel_ou_valor MINUS_MINUS','atribuicao',2,'p_expressao','sintatico.py',163),
  ('atribuicao -> expressao_logica','atribuicao',1,'p_expressao','sintatico.py',164),
  ('expressao_logica -> expressao_relacional','expressao_logica',1,'p_expressao','sintatico.py',166),
  ('expressao_logica -> expressao_logica AND expressao_relacional','expressao_logica',3,'p_expressao','sintatico.py',167),
  ('expressao_logica -> expressao_logica OR expressao_relacional','expressao_logica',3,'p_expressao','sintatico.py',168),
  ('expressao_logica -> NOT expressao_relacional','expressao_logica',2,'p_expressao','sintatico.py',169),
  ('expressao_relacional -> expressao_aritmetica','expressao_relacional',1,'p_expressao','sintatico.py',171),
  ('expressao_relacional -> expressao_aritmetica comparador expressao_aritmetica','expressao_relacional',3,'p_expressao','sintatico.py',172),
  ('expressao_aritmetica -> expressao_multiplicativa','expressao_aritmetica',1,'p_expressao','sintatico.py',174),
  ('expressao_aritmetica -> expressao_aritmetica PLUS expressao_multiplicativa','expressao_aritmetica',3,'p_expressao','sintatico.py',175),
  ('expressao_aritmetica -> expressao_aritmetica MINUS expressao_multiplicativa','expressao_aritmetica',3,'p_expressao','sintatico.py',176),
  ('expressao_multiplicativa -> expressao_unaria','expressao_multiplicativa',1,'p_expressao','sintatico.py',178),
  ('expressao_multiplicativa -> expressao_multiplicativa TIMES expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',179),
  ('expressao_multiplicativa -> expressao_multiplicativa DIVIDE expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',180),
  ('expressao_multiplicativa -> expressao_multiplicativa REST expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',181),
  ('expressao_unaria -> expressao_postfix','expressao_unaria',1,'p_expressao','sintatico.py',183),
  ('expressao_unaria -> MINUS expressao_unaria','expressao_unaria',2,'p_expressao','sintatico.py',184),
  ('expressao_unaria -> PLUS_PLUS expressao_postfix','expressao_unaria',2,'p_expressao','sintatico.py',185),
  ('expressao_unaria -> MINUS_MINUS expressao_postfix','expressao_unaria',2,'p_expressao','sintatico.py',186),
  ('expressao_postfix -> primaria','expressao_postfix',1,'p_expressao','sintatico.py',188),
  ('expressao_postfix -> primaria CHAVE_ABERTA expressao CHAVE_FECHADA','expressao_postfix',4,'p_expressao','sintatico.py',189),
  ('expressao_postfix -> primaria PAREN_ABERTO argumentos PAREN_FECHADO','expressao_postfix',4,'p_expressao','sintatico.py',190),
  ('expressao_postfix -> primaria DOT ID','expressao_postfix',3,'p_expressao','sintatico.py',191),
  ('argumentos -> <empty>','argumentos',0,'p_expressao','sintatico.py',193),
  ('primaria -> variavel_ou_valor','primaria',1,'p_expressao','sintatico.py',195),
  ('primaria -> PAREN_ABERTO expressao PAREN_FECHADO','primaria',3,'p_expressao','sintatico.py',196),
  ('parametros -> parametro','parametros',1,'p_parametros','sintatico.py',199),
  ('parametros -> parametro VIRGULA parametros','parametros',3,'p_parametros','sintatico.py',200),
  ('parametros -> <empty>','parametros',0,'p_parametros','sintatico.py',201),
  ('parametro -> tipo ID','parametro',2,'p_parametros','sintatico.py',203),
  ('parametro -> tipo ID CHAVE_ABERTA CHAVE_FECHADA','parametro',4,'p_parametros','sintatico.py',204),
  ('bloco -> COLCHETE_ABERTO declaracao_ou_coisas COLCHETE_FECHADO','bloco',3,'p_bloco','sintatico.py',207),
  ('declaracao_ou_coisas -> declaracao_ou_coisas declaracao_ou_coisas','declaracao_ou_coisas',2,'p_declaracao_ou_coisas','sintatico.py',210),
  ('declaracao_ou_coisas -> retorno','declaracao_ou_coisas',1,'p_declaracao_ou_coisas','sintatico.py',211),
  ('declaracao_ou_coisas -> declaracao_variavel','declaracao_ou_coisas',1,'p_declaracao_ou_coisas','sintatico.py',212),
  ('declaracao_ou_coisas -> if','declaracao_ou_coisas',1,'p_declaracao_ou_coisas','sintatico.py',213),
  ('declaracao_ou_coisas -> while','declaracao_ou_coisas',1,'p_declaracao_ou_coisas','sintatico.py',214),
  ('declaracao_ou_coisas -> for','declaracao_ou_coisas',1,'p_declaracao_ou_coisas','sintatico.py',215),
  ('declaracao_ou_coisas -> switch','declaracao_ou_coisas',1,'p_declaracao_ou_coisas','sintatico.py',216),
  ('declaracao_ou_coisas -> <empty>','declaracao_ou_coisas',0,'p_declaracao_ou_coisas','sintatico.py',217),
  ('retorno -> RETURN PONTO_VIRGULA','retorno',2,'p_retorno','sintatico.py',220),
  ('retorno -> RETURN ID PONTO_VIRGULA','retorno',3,'p_retorno','sintatico.py',221),
  ('retorno -> RETURN expressao PONTO_VIRGULA','retorno',3,'p_retorno','sintatico.py',222),
  ('retorno -> RETURN ID PAREN_ABERTO parametros_dado PAREN_FECHADO PONTO_VIRGULA','retorno',6,'p_retorno','sintatico.py',223),
  ('parametros_dado -> variavel_ou_valor VIRGULA parametros_dado','parametros_dado',3,'p_retorno','sintatico.py',225),
  ('parametros_dado -> variavel_ou_valor','parametros_dado',1,'p_retorno','sintatico.py',226),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco ELSE bloco','if',7,'p_if_switch','sintatico.py',229),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco elseif ELSE bloco','if',8,'p_if_switch','sintatico.py',230),
  ('elseif -> ELSEIF PAREN_ABERTO statement PAREN_FECHADO bloco elseif','elseif',6,'p_if_switch','sintatico.py',232),
  ('elseif -> <empty>','elseif',0,'p_if_switch','sintatico.py',233),
  ('statement -> variavel_ou_valor comparador variavel_ou_valor operador_logico','statement',4,'p_if_switch','sintatico.py',235),
  ('variavel_ou_valor -> ID','variavel_ou_valor',1,'p_if_switch','sintatico.py',237),
  ('variavel_ou_valor -> NUMBER_DEC','variavel_ou_valor',1,'p_if_switch','sintatico.py',238),
  ('variavel_ou_valor -> NUMBER_INT','variavel_ou_valor',1,'p_if_switch','sintatico.py',239),
  ('variavel_ou_valor -> TYPE_STRING','variavel_ou_valor',1,'p_if_switch','sintatico.py',240),
  ('variavel_ou_valor -> TYPE_BOOLEAN','variavel_ou_valor',1,'p_if_switch','sintatico.py',241),
  ('variavel_ou_valor -> TYPE_CHAR','variavel_ou_valor',1,'p_if_switch','sintatico.py',242),
  ('variavel_ou_valor -> TYPE_FLOAT','variavel_ou_valor',1,'p_if_switch','sintatico.py',243),
  ('switch -> SWITCH PAREN_ABERTO ID PAREN_FECHADO bloco_switch','switch',5,'p_if_switch','sintatico.py',245),
  ('bloco_switch -> COLCHETE_ABERTO cases COLCHETE_FECHADO','bloco_switch',3,'p_if_switch','sintatico.py',247),
  ('cases -> cases cases','cases',2,'p_if_switch','sintatico.py',249),
  ('cases -> CASE expressao DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA','cases',6,'p_if_switch','sintatico.py',250),
  ('cases -> DEFAULT DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA','cases',5,'p_if_switch','sintatico.py',251),
  ('cases -> <empty>','cases',0,'p_if_switch','sintatico.py',252),
  ('while -> WHILE PAREN_ABERTO statement PAREN_FECHADO bloco','while',5,'p_loop','sintatico.py',255),
  ('for -> FOR PAREN_ABERTO tipo ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO bloco','for',14,'p_loop','sintatico.py',257),
  ('for -> FOR PAREN_ABERTO ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO bloco','for',13,'p_loop','sintatico.py',258),
  ('comparador -> LESS_THAN','comparador',1,'p_comparador','sintatico.py',261),
  ('comparador -> IS_EQUALS','comparador',1,'p_comparador','sintatico.py',262),
  ('comparador -> LESS_THAN_OR_EQUALS','comparador',1,'p_comparador','sintatico.py',263),
  ('comparador -> GREATER_THAN','comparador',1,'p_comparador','sintatico.py',264),
  ('comparador -> GREATER_THAN_OR_EQUALS','comparador',1,'p_comparador','sintatico.py',265),
  ('comparador -> IS_DIFFERENT','comparador',1,'p_comparador','sintatico.py',266),
  ('operador_logico -> AND statement','operador_logico',2,'p_operador_logico','sintatico.py',269),
  ('operador_logico -> OR statement','operador_logico',2,'p_operador_logico','sintatico.py',270),
  ('operador_logico -> <empty>','operador_logico',0,'p_operador_logico','sintatico.py',271),
  ('array -> ID chaves_array','array',2,'p_array','sintatico.py',274),
  ('array -> array_inicializacao','array',1,'p_array','sintatico.py',275),
  ('array_inicializacao -> COLCHETE_ABERTO expressao COLCHETE_FECHADO','array_inicializacao',3,'p_array','sintatico.py',277),
  ('chaves_array -> CHAVE_ABERTA expressao CHAVE_FECHADA chaves_array','chaves_array',4,'p_array','sintatico.py',279),
  ('chaves_array -> <empty>','chaves_array',0,'p_array','sintatico.py',280),
]
