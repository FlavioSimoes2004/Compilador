
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN BREAK CASE CHAR CHAVE_ABERTA CHAVE_FECHADA COLCHETE_ABERTO COLCHETE_FECHADO COMMENT COMPARE_OPERATOR DEFAULT DIVIDE DIVIDE_EQUAL DOIS_PONTOS DOT DOUBLE ELSE ELSEIF EQUAL FLOAT FOR GREATER_THAN GREATER_THAN_OR_EQUALS ID IF INT IS_DIFFERENT IS_EQUALS LESS_THAN LESS_THAN_OR_EQUALS MAIN MINUS MINUS_EQUAL MINUS_MINUS NOT NUMBER_DEC NUMBER_INT OPERATOR OR PAREN_ABERTO PAREN_FECHADO PLUS PLUS_EQUAL PLUS_PLUS PONTO_VIRGULA PRINTLN REST REST_EQUAL RETURN SCANF SPECIAL_SYMBOL STRING STRUCT SWITCH TIMES TIMES_EQUAL TYPE_BOOLEAN TYPE_CHAR TYPE_FLOAT TYPE_STRING VIRGULA VOID WHILEprograma : declaracaodeclaracao : declaracao_variavel\n    | declaracao_funcao\n    | declaracao_estrutura\n    | declaracao declaracao\n    | COMMENT\n    | declaracao_ou_coisas\n    | \n    \n    declaracao_variavel : tipo ID PONTO_VIRGULA\n    | tipo ID EQUAL expressao PONTO_VIRGULA\n    | ID PLUS PLUS PONTO_VIRGULA\n    | ID MINUS MINUS PONTO_VIRGULA\n    | declaracao_variavel declaracao_variavel\n    \n    declaracao_funcao : tipo ID PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | VOID ID PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | tipo MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | VOID MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco\n    \n    declaracao_estrutura : STRUCT ID COLCHETE_ABERTO declaracao_variavel COLCHETE_FECHADOtipo : INT\n    | STRING\n    | BOOLEAN\n    | DOUBLE\n    | CHAR\n    | FLOATexpressao : atribuicao\n    \n    atribuicao : NUMBER_DEC\n    | NUMBER_INT\n    | TYPE_FLOAT\n    | TYPE_STRING\n    | TYPE_BOOLEAN\n    | TYPE_CHAR\n    | ID\n    | ID EQUAL expressao\n    | ID PLUS_EQUAL expressao\n    | ID MINUS_EQUAL expressao\n    | ID TIMES_EQUAL expressao\n    | ID DIVIDE_EQUAL expressao\n    | ID REST_EQUAL expressao\n    | ID AND EQUAL expressao\n    | ID OR EQUAL expressao\n    | ID comparador expressao\n    | variavel_ou_valor PLUS_PLUS\n    | variavel_ou_valor MINUS_MINUS\n    | expressao_logica\n    \n    expressao_logica : expressao_relacional\n    | expressao_logica AND expressao_relacional\n    | expressao_logica OR expressao_relacional\n    | NOT expressao_relacional\n    \n    expressao_relacional : expressao_aritmetica\n    | expressao_aritmetica comparador expressao_aritmetica\n    \n    expressao_aritmetica : expressao_multiplicativa\n    | expressao_aritmetica PLUS expressao_multiplicativa\n    | expressao_aritmetica MINUS expressao_multiplicativa\n    \n    expressao_multiplicativa : expressao_unaria\n    | expressao_multiplicativa TIMES expressao_unaria\n    | expressao_multiplicativa DIVIDE expressao_unaria\n    | expressao_multiplicativa REST expressao_unaria\n    \n    expressao_unaria : expressao_postfix\n    | MINUS expressao_unaria\n    | PLUS_PLUS expressao_postfix\n    | MINUS_MINUS expressao_postfix\n    \n    expressao_postfix : primaria\n    | primaria CHAVE_ABERTA expressao CHAVE_FECHADA\n    | primaria PAREN_ABERTO argumentos PAREN_FECHADO\n    | primaria DOT ID\n    \n    argumentos : expressao_lista\n    | \n\n    expressao_lista : \n    \n    primaria : variavel_ou_valor\n    | PAREN_ABERTO expressao PAREN_FECHADOparametros : parametro\n    | parametro VIRGULA parametros\n    | \n    \n    parametro : tipo ID\n    | tipo ID CHAVE_ABERTA CHAVE_FECHADAbloco : COLCHETE_ABERTO declaracao_ou_coisas COLCHETE_FECHADOdeclaracao_ou_coisas : declaracao_ou_coisas declaracao_ou_coisas\n    | retorno\n    | declaracao_variavel\n    | if\n    | while\n    | for\n    | switch\n    | retorno : RETURN PONTO_VIRGULA\n    | RETURN ID PONTO_VIRGULA\n    | RETURN expressao PONTO_VIRGULA\n    | RETURN ID PAREN_ABERTO parametros_dado PAREN_FECHADO PONTO_VIRGULA\n    \n    parametros_dado : variavel_ou_valor VIRGULA parametros_dado\n    | variavel_ou_valorif : IF PAREN_ABERTO statement PAREN_FECHADO bloco ELSE bloco\n    | IF PAREN_ABERTO statement PAREN_FECHADO bloco elseif ELSE bloco\n\n    elseif : ELSEIF PAREN_ABERTO statement PAREN_FECHADO bloco elseif\n    | \n    \n    statement : variavel_ou_valor comparador variavel_ou_valor operador_logico\n    \n    variavel_ou_valor : ID\n    | NUMBER_DEC\n    | NUMBER_INT\n    | TYPE_STRING\n    | TYPE_BOOLEAN\n    | TYPE_CHAR\n    | TYPE_FLOAT\n    \n    switch : SWITCH PAREN_ABERTO ID PAREN_FECHADO bloco_switch\n    \n    bloco_switch : COLCHETE_ABERTO cases COLCHETE_FECHADO\n    \n    cases : cases cases\n    | CASE expressao DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA\n    | DEFAULT DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA\n    | while : WHILE PAREN_ABERTO statement PAREN_FECHADO bloco\n    \n    for : FOR PAREN_ABERTO tipo ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO bloco\n    | FOR PAREN_ABERTO ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO blococomparador : LESS_THAN\n    | IS_EQUALS\n    | LESS_THAN_OR_EQUALS\n    | GREATER_THAN\n    | GREATER_THAN_OR_EQUALS\n    | IS_DIFFERENToperador_logico : AND statement\n    | OR statement\n    | array : ID chaves_array\n    | array_inicializacao\n    \n    array_inicializacao : COLCHETE_ABERTO expressao COLCHETE_FECHADO\n    \n    chaves_array : CHAVE_ABERTA expressao CHAVE_FECHADA chaves_array\n    | '
    
_lr_action_items = {'COMMENT':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,168,175,185,188,191,193,194,195,196,211,214,220,223,246,247,],[6,6,-2,-3,-4,-6,-7,-78,-80,-81,-82,-83,6,-13,-77,-79,-85,-9,-86,-87,-11,-12,-10,-18,-109,-103,-14,-16,-15,-17,-88,-91,-76,-104,-92,-111,-110,]),'ID':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,28,29,30,31,32,40,43,52,53,56,59,63,64,65,66,68,69,76,77,78,79,80,81,82,83,84,87,88,89,90,91,92,93,94,109,110,112,113,114,115,116,117,119,121,125,129,133,134,137,146,147,163,166,168,175,177,183,185,186,188,191,193,194,195,196,201,203,204,206,208,211,213,214,217,220,222,223,226,227,228,230,232,236,240,246,247,],[9,9,9,-3,-4,-6,9,33,37,39,-78,-80,-81,-82,-83,-19,-20,-21,-22,-23,-24,41,9,9,67,9,9,-85,96,100,100,100,100,100,100,126,127,-9,96,9,-86,100,96,96,96,96,96,96,96,-112,-113,-114,-115,-116,-117,-87,100,100,100,100,100,100,100,100,96,161,165,169,-11,-12,9,96,96,100,100,-10,-18,100,9,-109,100,-103,-14,-16,-15,-17,-88,9,100,100,100,96,-91,100,-76,100,-104,9,-92,100,9,9,100,9,96,96,-111,-110,]),'VOID':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,168,175,185,188,191,193,194,195,196,211,214,220,223,246,247,],[10,10,-2,-3,-4,-6,-7,-78,-80,-81,-82,-83,10,-13,-77,-79,-85,-9,-86,-87,-11,-12,-10,-18,-109,-103,-14,-16,-15,-17,-88,-91,-76,-104,-92,-111,-110,]),'STRUCT':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,168,175,185,188,191,193,194,195,196,211,214,220,223,246,247,],[11,11,-2,-3,-4,-6,-7,-78,-80,-81,-82,-83,11,-13,-77,-79,-85,-9,-86,-87,-11,-12,-10,-18,-109,-103,-14,-16,-15,-17,-88,-91,-76,-104,-92,-111,-110,]),'INT':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,65,68,70,71,74,75,76,77,94,133,134,137,168,171,175,183,185,188,191,193,194,195,196,201,211,214,220,222,223,227,228,232,246,247,],[17,17,17,-3,-4,-6,17,-78,-80,-81,-82,-83,17,17,17,17,-85,17,-9,17,17,17,17,17,-86,-87,-11,-12,17,-10,17,-18,17,-109,-103,-14,-16,-15,-17,-88,17,-91,-76,-104,17,-92,17,17,17,-111,-110,]),'STRING':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,65,68,70,71,74,75,76,77,94,133,134,137,168,171,175,183,185,188,191,193,194,195,196,201,211,214,220,222,223,227,228,232,246,247,],[18,18,18,-3,-4,-6,18,-78,-80,-81,-82,-83,18,18,18,18,-85,18,-9,18,18,18,18,18,-86,-87,-11,-12,18,-10,18,-18,18,-109,-103,-14,-16,-15,-17,-88,18,-91,-76,-104,18,-92,18,18,18,-111,-110,]),'BOOLEAN':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,65,68,70,71,74,75,76,77,94,133,134,137,168,171,175,183,185,188,191,193,194,195,196,201,211,214,220,222,223,227,228,232,246,247,],[19,19,19,-3,-4,-6,19,-78,-80,-81,-82,-83,19,19,19,19,-85,19,-9,19,19,19,19,19,-86,-87,-11,-12,19,-10,19,-18,19,-109,-103,-14,-16,-15,-17,-88,19,-91,-76,-104,19,-92,19,19,19,-111,-110,]),'DOUBLE':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,65,68,70,71,74,75,76,77,94,133,134,137,168,171,175,183,185,188,191,193,194,195,196,201,211,214,220,222,223,227,228,232,246,247,],[20,20,20,-3,-4,-6,20,-78,-80,-81,-82,-83,20,20,20,20,-85,20,-9,20,20,20,20,20,-86,-87,-11,-12,20,-10,20,-18,20,-109,-103,-14,-16,-15,-17,-88,20,-91,-76,-104,20,-92,20,20,20,-111,-110,]),'CHAR':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,65,68,70,71,74,75,76,77,94,133,134,137,168,171,175,183,185,188,191,193,194,195,196,201,211,214,220,222,223,227,228,232,246,247,],[21,21,21,-3,-4,-6,21,-78,-80,-81,-82,-83,21,21,21,21,-85,21,-9,21,21,21,21,21,-86,-87,-11,-12,21,-10,21,-18,21,-109,-103,-14,-16,-15,-17,-88,21,-91,-76,-104,21,-92,21,21,21,-111,-110,]),'FLOAT':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,65,68,70,71,74,75,76,77,94,133,134,137,168,171,175,183,185,188,191,193,194,195,196,201,211,214,220,222,223,227,228,232,246,247,],[22,22,22,-3,-4,-6,22,-78,-80,-81,-82,-83,22,22,22,22,-85,22,-9,22,22,22,22,22,-86,-87,-11,-12,22,-10,22,-18,22,-109,-103,-14,-16,-15,-17,-88,22,-91,-76,-104,22,-92,22,22,22,-111,-110,]),'RETURN':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,168,175,183,185,188,191,193,194,195,196,201,211,214,220,222,223,227,228,232,246,247,],[23,23,-2,-3,-4,-6,23,-78,-80,-81,-82,-83,23,-13,23,-79,-85,-9,-86,-87,-11,-12,-10,-18,23,-109,-103,-14,-16,-15,-17,-88,23,-91,-76,-104,23,-92,23,23,23,-111,-110,]),'IF':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,168,175,183,185,188,191,193,194,195,196,201,211,214,220,222,223,227,228,232,246,247,],[24,24,-2,-3,-4,-6,24,-78,-80,-81,-82,-83,24,-13,24,-79,-85,-9,-86,-87,-11,-12,-10,-18,24,-109,-103,-14,-16,-15,-17,-88,24,-91,-76,-104,24,-92,24,24,24,-111,-110,]),'WHILE':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,168,175,183,185,188,191,193,194,195,196,201,211,214,220,222,223,227,228,232,246,247,],[25,25,-2,-3,-4,-6,25,-78,-80,-81,-82,-83,25,-13,25,-79,-85,-9,-86,-87,-11,-12,-10,-18,25,-109,-103,-14,-16,-15,-17,-88,25,-91,-76,-104,25,-92,25,25,25,-111,-110,]),'FOR':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,168,175,183,185,188,191,193,194,195,196,201,211,214,220,222,223,227,228,232,246,247,],[26,26,-2,-3,-4,-6,26,-78,-80,-81,-82,-83,26,-13,26,-79,-85,-9,-86,-87,-11,-12,-10,-18,26,-109,-103,-14,-16,-15,-17,-88,26,-91,-76,-104,26,-92,26,26,26,-111,-110,]),'SWITCH':([0,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,168,175,183,185,188,191,193,194,195,196,201,211,214,220,222,223,227,228,232,246,247,],[27,27,-2,-3,-4,-6,27,-78,-80,-81,-82,-83,27,-13,27,-79,-85,-9,-86,-87,-11,-12,-10,-18,27,-109,-103,-14,-16,-15,-17,-88,27,-91,-76,-104,27,-92,27,27,27,-111,-110,]),'$end':([0,1,2,3,4,5,6,7,12,13,14,15,16,28,29,31,32,40,68,77,94,133,134,168,175,185,188,191,193,194,195,196,211,214,220,223,246,247,],[-8,0,-1,-2,-3,-4,-6,-7,-78,-80,-81,-82,-83,-5,-13,-77,-79,-85,-9,-86,-87,-11,-12,-10,-18,-109,-103,-14,-16,-15,-17,-88,-91,-76,-104,-92,-111,-110,]),'MAIN':([8,10,17,18,19,20,21,22,],[34,38,-19,-20,-21,-22,-23,-24,]),'PLUS':([9,35,41,45,46,47,48,49,50,51,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,149,152,153,154,155,156,157,161,180,181,],[35,72,-96,-97,-98,-102,-99,-100,-101,-69,113,-51,-54,-58,-62,-96,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-59,-70,113,-52,-53,-55,-56,-57,-65,-63,-64,]),'MINUS':([9,23,36,41,43,45,46,47,48,49,50,51,56,57,58,59,60,61,62,69,79,80,81,82,83,84,87,88,89,90,91,92,93,96,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,146,147,149,152,153,154,155,156,157,161,180,181,208,236,240,],[36,59,73,-96,59,-97,-98,-102,-99,-100,-101,-69,59,114,-51,59,-54,-58,-62,59,59,59,59,59,59,59,59,-112,-113,-114,-115,-116,-117,-96,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,59,59,59,59,59,59,59,59,-59,59,59,59,-70,114,-52,-53,-55,-56,-57,-65,-63,-64,59,59,59,]),'COLCHETE_FECHADO':([12,13,14,15,16,29,31,32,40,68,77,94,133,134,137,168,183,185,188,189,196,201,207,211,214,219,220,223,238,242,246,247,],[-78,-80,-81,-82,-83,-13,-77,-79,-85,-9,-86,-87,-11,-12,175,-10,-84,-109,-103,-108,-88,214,220,-91,-76,-105,-104,-92,-107,-106,-111,-110,]),'BREAK':([12,13,14,15,16,29,31,32,40,68,77,94,133,134,168,185,188,196,211,214,220,222,223,227,228,232,246,247,],[-78,-80,-81,-82,-83,-13,-77,-79,-85,-9,-86,-87,-11,-12,-10,-109,-103,-88,-91,-76,-104,-84,-92,-84,233,237,-111,-110,]),'PONTO_VIRGULA':([23,33,41,42,44,45,46,47,48,49,50,51,54,55,57,58,60,61,62,67,72,73,96,97,98,99,100,101,102,103,104,105,106,107,108,111,118,128,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,161,176,178,179,180,181,187,205,231,233,235,237,],[40,68,77,94,-25,-26,-27,-28,-29,-30,-31,-69,-44,-45,-49,-51,-54,-58,-62,68,133,134,-32,-42,-43,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-48,-59,168,-33,-34,-35,-36,-37,-38,-41,-70,-46,-47,-50,-52,-53,-55,-56,-57,-65,196,-39,-40,-63,-64,206,217,236,238,240,242,]),'NUMBER_DEC':([23,43,52,53,56,59,63,64,69,78,79,80,81,82,83,84,87,88,89,90,91,92,93,109,110,112,113,114,115,116,117,119,146,147,163,166,177,186,203,204,206,208,213,217,226,230,236,240,],[45,45,102,102,102,102,102,102,45,102,45,45,45,45,45,45,45,-112,-113,-114,-115,-116,-117,102,102,102,102,102,102,102,102,45,45,45,102,102,102,102,102,102,102,45,102,102,102,102,45,45,]),'NUMBER_INT':([23,43,52,53,56,59,63,64,69,78,79,80,81,82,83,84,87,88,89,90,91,92,93,109,110,112,113,114,115,116,117,119,146,147,163,166,177,186,203,204,206,208,213,217,226,230,236,240,],[46,46,103,103,103,103,103,103,46,103,46,46,46,46,46,46,46,-112,-113,-114,-115,-116,-117,103,103,103,103,103,103,103,103,46,46,46,103,103,103,103,103,103,103,46,103,103,103,103,46,46,]),'TYPE_FLOAT':([23,43,52,53,56,59,63,64,69,78,79,80,81,82,83,84,87,88,89,90,91,92,93,109,110,112,113,114,115,116,117,119,146,147,163,166,177,186,203,204,206,208,213,217,226,230,236,240,],[47,47,107,107,107,107,107,107,47,107,47,47,47,47,47,47,47,-112,-113,-114,-115,-116,-117,107,107,107,107,107,107,107,107,47,47,47,107,107,107,107,107,107,107,47,107,107,107,107,47,47,]),'TYPE_STRING':([23,43,52,53,56,59,63,64,69,78,79,80,81,82,83,84,87,88,89,90,91,92,93,109,110,112,113,114,115,116,117,119,146,147,163,166,177,186,203,204,206,208,213,217,226,230,236,240,],[48,48,104,104,104,104,104,104,48,104,48,48,48,48,48,48,48,-112,-113,-114,-115,-116,-117,104,104,104,104,104,104,104,104,48,48,48,104,104,104,104,104,104,104,48,104,104,104,104,48,48,]),'TYPE_BOOLEAN':([23,43,52,53,56,59,63,64,69,78,79,80,81,82,83,84,87,88,89,90,91,92,93,109,110,112,113,114,115,116,117,119,146,147,163,166,177,186,203,204,206,208,213,217,226,230,236,240,],[49,49,105,105,105,105,105,105,49,105,49,49,49,49,49,49,49,-112,-113,-114,-115,-116,-117,105,105,105,105,105,105,105,105,49,49,49,105,105,105,105,105,105,105,49,105,105,105,105,49,49,]),'TYPE_CHAR':([23,43,52,53,56,59,63,64,69,78,79,80,81,82,83,84,87,88,89,90,91,92,93,109,110,112,113,114,115,116,117,119,146,147,163,166,177,186,203,204,206,208,213,217,226,230,236,240,],[50,50,106,106,106,106,106,106,50,106,50,50,50,50,50,50,50,-112,-113,-114,-115,-116,-117,106,106,106,106,106,106,106,106,50,50,50,106,106,106,106,106,106,106,50,106,106,106,106,50,50,]),'NOT':([23,43,69,79,80,81,82,83,84,87,88,89,90,91,92,93,119,146,147,208,236,240,],[56,56,56,56,56,56,56,56,56,56,-112,-113,-114,-115,-116,-117,56,56,56,56,56,56,]),'PLUS_PLUS':([23,41,43,45,46,47,48,49,50,51,56,59,69,79,80,81,82,83,84,87,88,89,90,91,92,93,96,109,110,112,113,114,115,116,117,119,146,147,208,236,240,],[52,-96,52,-97,-98,-102,-99,-100,-101,97,52,52,52,52,52,52,52,52,52,52,-112,-113,-114,-115,-116,-117,-96,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'MINUS_MINUS':([23,41,43,45,46,47,48,49,50,51,56,59,69,79,80,81,82,83,84,87,88,89,90,91,92,93,96,109,110,112,113,114,115,116,117,119,146,147,208,236,240,],[53,-96,53,-97,-98,-102,-99,-100,-101,98,53,53,53,53,53,53,53,53,53,53,-112,-113,-114,-115,-116,-117,-96,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'PAREN_ABERTO':([23,24,25,26,27,33,34,37,38,41,43,45,46,47,48,49,50,51,52,53,56,59,62,69,79,80,81,82,83,84,87,88,89,90,91,92,93,96,100,101,102,103,104,105,106,107,109,110,112,113,114,115,116,117,119,146,147,149,200,208,236,240,],[43,63,64,65,66,70,71,74,75,78,43,-97,-98,-102,-99,-100,-101,-69,43,43,43,43,120,43,43,43,43,43,43,43,43,-112,-113,-114,-115,-116,-117,-96,-96,-69,-97,-98,-99,-100,-101,-102,43,43,43,43,43,43,43,43,43,43,43,-70,213,43,43,43,]),'EQUAL':([33,41,67,85,86,96,126,165,],[69,79,69,146,147,79,166,186,]),'COLCHETE_ABERTO':([39,162,164,167,170,172,173,174,198,212,229,244,245,],[76,183,183,189,183,183,183,183,183,183,183,183,183,]),'PLUS_EQUAL':([41,96,],[80,80,]),'MINUS_EQUAL':([41,96,],[81,81,]),'TIMES_EQUAL':([41,96,],[82,82,]),'DIVIDE_EQUAL':([41,96,],[83,83,]),'REST_EQUAL':([41,96,],[84,84,]),'AND':([41,45,46,47,48,49,50,51,54,55,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,111,118,149,150,151,152,153,154,155,156,157,161,180,181,184,],[85,-97,-98,-102,-99,-100,-101,-69,109,-45,-49,-51,-54,-58,-62,85,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-48,-59,-70,-46,-47,-50,-52,-53,-55,-56,-57,-65,-63,-64,203,]),'OR':([41,45,46,47,48,49,50,51,54,55,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,111,118,149,150,151,152,153,154,155,156,157,161,180,181,184,],[86,-97,-98,-102,-99,-100,-101,-69,110,-45,-49,-51,-54,-58,-62,86,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-48,-59,-70,-46,-47,-50,-52,-53,-55,-56,-57,-65,-63,-64,204,]),'CHAVE_ABERTA':([41,45,46,47,48,49,50,51,62,96,100,101,102,103,104,105,106,107,149,169,],[-96,-97,-98,-102,-99,-100,-101,-69,119,-96,-96,-69,-97,-98,-99,-100,-101,-102,-70,190,]),'DOT':([41,45,46,47,48,49,50,51,62,96,100,101,102,103,104,105,106,107,149,],[-96,-97,-98,-102,-99,-100,-101,-69,121,-96,-96,-69,-97,-98,-99,-100,-101,-102,-70,]),'TIMES':([41,45,46,47,48,49,50,51,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,149,153,154,155,156,157,161,180,181,],[-96,-97,-98,-102,-99,-100,-101,-69,115,-54,-58,-62,-96,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-59,-70,115,115,-55,-56,-57,-65,-63,-64,]),'DIVIDE':([41,45,46,47,48,49,50,51,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,149,153,154,155,156,157,161,180,181,],[-96,-97,-98,-102,-99,-100,-101,-69,116,-54,-58,-62,-96,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-59,-70,116,116,-55,-56,-57,-65,-63,-64,]),'REST':([41,45,46,47,48,49,50,51,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,149,153,154,155,156,157,161,180,181,],[-96,-97,-98,-102,-99,-100,-101,-69,117,-54,-58,-62,-96,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-59,-70,117,117,-55,-56,-57,-65,-63,-64,]),'LESS_THAN':([41,45,46,47,48,49,50,51,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,123,149,153,154,155,156,157,161,180,181,218,225,],[88,-97,-98,-102,-99,-100,-101,-69,88,-51,-54,-58,-62,88,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-59,88,-70,-52,-53,-55,-56,-57,-65,-63,-64,88,88,]),'IS_EQUALS':([41,45,46,47,48,49,50,51,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,123,149,153,154,155,156,157,161,180,181,218,225,],[89,-97,-98,-102,-99,-100,-101,-69,89,-51,-54,-58,-62,89,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-59,89,-70,-52,-53,-55,-56,-57,-65,-63,-64,89,89,]),'LESS_THAN_OR_EQUALS':([41,45,46,47,48,49,50,51,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,123,149,153,154,155,156,157,161,180,181,218,225,],[90,-97,-98,-102,-99,-100,-101,-69,90,-51,-54,-58,-62,90,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-59,90,-70,-52,-53,-55,-56,-57,-65,-63,-64,90,90,]),'GREATER_THAN':([41,45,46,47,48,49,50,51,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,123,149,153,154,155,156,157,161,180,181,218,225,],[91,-97,-98,-102,-99,-100,-101,-69,91,-51,-54,-58,-62,91,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-59,91,-70,-52,-53,-55,-56,-57,-65,-63,-64,91,91,]),'GREATER_THAN_OR_EQUALS':([41,45,46,47,48,49,50,51,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,123,149,153,154,155,156,157,161,180,181,218,225,],[92,-97,-98,-102,-99,-100,-101,-69,92,-51,-54,-58,-62,92,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-59,92,-70,-52,-53,-55,-56,-57,-65,-63,-64,92,92,]),'IS_DIFFERENT':([41,45,46,47,48,49,50,51,57,58,60,61,62,96,99,100,101,102,103,104,105,106,107,108,118,123,149,153,154,155,156,157,161,180,181,218,225,],[93,-97,-98,-102,-99,-100,-101,-69,93,-51,-54,-58,-62,93,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-59,93,-70,-52,-53,-55,-56,-57,-65,-63,-64,93,93,]),'PAREN_FECHADO':([44,45,46,47,48,49,50,51,54,55,57,58,60,61,62,70,71,74,75,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,118,120,122,124,127,130,131,132,135,136,138,139,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,159,160,161,169,171,178,179,180,181,184,192,197,202,210,215,216,224,241,243,],[-25,-26,-27,-28,-29,-30,-31,-69,-44,-45,-49,-51,-54,-58,-62,-73,-73,-73,-73,149,-32,-42,-43,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-48,-59,-67,162,164,167,170,-71,172,173,174,176,-90,-33,-34,-35,-36,-37,-38,-41,-70,-46,-47,-50,-52,-53,-55,-56,-57,181,-66,-65,-74,-73,-39,-40,-63,-64,-120,-72,-89,-95,-75,-118,-119,229,244,245,]),'CHAVE_FECHADA':([44,45,46,47,48,49,50,51,54,55,57,58,60,61,62,96,97,98,99,100,101,102,103,104,105,106,107,108,111,118,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,158,161,178,179,180,181,190,],[-25,-26,-27,-28,-29,-30,-31,-69,-44,-45,-49,-51,-54,-58,-62,-32,-42,-43,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-48,-59,-33,-34,-35,-36,-37,-38,-41,-70,-46,-47,-50,-52,-53,-55,-56,-57,180,-65,-39,-40,-63,-64,210,]),'DOIS_PONTOS':([44,45,46,47,48,49,50,51,54,55,57,58,60,61,62,96,97,98,99,100,101,102,103,104,105,106,107,108,111,118,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,161,178,179,180,181,209,221,],[-25,-26,-27,-28,-29,-30,-31,-69,-44,-45,-49,-51,-54,-58,-62,-32,-42,-43,-60,-96,-69,-97,-98,-99,-100,-101,-102,-61,-48,-59,-33,-34,-35,-36,-37,-38,-41,-70,-46,-47,-50,-52,-53,-55,-56,-57,-65,-39,-40,-63,-64,222,227,]),'VIRGULA':([100,102,103,104,105,106,107,131,139,169,210,],[-96,-97,-98,-99,-100,-101,-102,171,177,-74,-75,]),'ELSE':([182,199,214,234,239,],[198,212,-76,-94,-93,]),'ELSEIF':([182,214,234,],[200,-76,200,]),'CASE':([189,207,219,238,242,],[208,208,208,-107,-106,]),'DEFAULT':([189,207,219,238,242,],[209,209,209,-107,-106,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracao':([0,2,28,],[2,28,28,]),'declaracao_variavel':([0,2,3,7,28,29,31,32,76,137,183,201,222,227,228,232,],[3,3,29,32,3,29,32,29,137,29,32,32,32,32,32,32,]),'declaracao_funcao':([0,2,28,],[4,4,4,]),'declaracao_estrutura':([0,2,28,],[5,5,5,]),'declaracao_ou_coisas':([0,2,7,28,31,183,201,222,227,228,232,],[7,7,31,7,31,201,31,228,232,31,31,]),'tipo':([0,2,3,7,28,29,31,32,65,70,71,74,75,76,137,171,183,201,222,227,228,232,],[8,8,30,30,8,30,30,30,125,129,129,129,129,30,30,129,30,30,30,30,30,30,]),'retorno':([0,2,7,28,31,183,201,222,227,228,232,],[12,12,12,12,12,12,12,12,12,12,12,]),'if':([0,2,7,28,31,183,201,222,227,228,232,],[13,13,13,13,13,13,13,13,13,13,13,]),'while':([0,2,7,28,31,183,201,222,227,228,232,],[14,14,14,14,14,14,14,14,14,14,14,]),'for':([0,2,7,28,31,183,201,222,227,228,232,],[15,15,15,15,15,15,15,15,15,15,15,]),'switch':([0,2,7,28,31,183,201,222,227,228,232,],[16,16,16,16,16,16,16,16,16,16,16,]),'expressao':([23,43,69,79,80,81,82,83,84,87,119,146,147,208,236,240,],[42,95,128,140,141,142,143,144,145,148,158,178,179,221,241,243,]),'atribuicao':([23,43,69,79,80,81,82,83,84,87,119,146,147,208,236,240,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'variavel_ou_valor':([23,43,52,53,56,59,63,64,69,78,79,80,81,82,83,84,87,109,110,112,113,114,115,116,117,119,146,147,163,166,177,186,203,204,206,208,213,217,226,230,236,240,],[51,51,101,101,101,101,123,123,51,139,51,51,51,51,51,51,51,101,101,101,101,101,101,101,101,51,51,51,184,187,139,205,123,123,218,51,123,225,231,235,51,51,]),'expressao_logica':([23,43,69,79,80,81,82,83,84,87,119,146,147,208,236,240,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'expressao_relacional':([23,43,56,69,79,80,81,82,83,84,87,109,110,119,146,147,208,236,240,],[55,55,111,55,55,55,55,55,55,55,55,150,151,55,55,55,55,55,55,]),'expressao_aritmetica':([23,43,56,69,79,80,81,82,83,84,87,109,110,112,119,146,147,208,236,240,],[57,57,57,57,57,57,57,57,57,57,57,57,57,152,57,57,57,57,57,57,]),'expressao_multiplicativa':([23,43,56,69,79,80,81,82,83,84,87,109,110,112,113,114,119,146,147,208,236,240,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,153,154,58,58,58,58,58,58,]),'expressao_unaria':([23,43,56,59,69,79,80,81,82,83,84,87,109,110,112,113,114,115,116,117,119,146,147,208,236,240,],[60,60,60,118,60,60,60,60,60,60,60,60,60,60,60,60,60,155,156,157,60,60,60,60,60,60,]),'expressao_postfix':([23,43,52,53,56,59,69,79,80,81,82,83,84,87,109,110,112,113,114,115,116,117,119,146,147,208,236,240,],[61,61,99,108,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'primaria':([23,43,52,53,56,59,69,79,80,81,82,83,84,87,109,110,112,113,114,115,116,117,119,146,147,208,236,240,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'comparador':([41,57,96,123,218,225,],[87,112,87,163,226,230,]),'statement':([63,64,203,204,213,],[122,124,215,216,224,]),'parametros':([70,71,74,75,171,],[130,132,135,136,192,]),'parametro':([70,71,74,75,171,],[131,131,131,131,131,]),'parametros_dado':([78,177,],[138,197,]),'argumentos':([120,],[159,]),'expressao_lista':([120,],[160,]),'bloco':([162,164,170,172,173,174,198,212,229,244,245,],[182,185,191,193,194,195,211,223,234,246,247,]),'bloco_switch':([167,],[188,]),'elseif':([182,234,],[199,239,]),'operador_logico':([184,],[202,]),'cases':([189,207,219,],[207,219,219,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaracao','programa',1,'p_programa','sintatico.py',111),
  ('declaracao -> declaracao_variavel','declaracao',1,'p_declaracao','sintatico.py',114),
  ('declaracao -> declaracao_funcao','declaracao',1,'p_declaracao','sintatico.py',115),
  ('declaracao -> declaracao_estrutura','declaracao',1,'p_declaracao','sintatico.py',116),
  ('declaracao -> declaracao declaracao','declaracao',2,'p_declaracao','sintatico.py',117),
  ('declaracao -> COMMENT','declaracao',1,'p_declaracao','sintatico.py',118),
  ('declaracao -> declaracao_ou_coisas','declaracao',1,'p_declaracao','sintatico.py',119),
  ('declaracao -> <empty>','declaracao',0,'p_declaracao','sintatico.py',120),
  ('declaracao_variavel -> tipo ID PONTO_VIRGULA','declaracao_variavel',3,'p_declaracao','sintatico.py',122),
  ('declaracao_variavel -> tipo ID EQUAL expressao PONTO_VIRGULA','declaracao_variavel',5,'p_declaracao','sintatico.py',123),
  ('declaracao_variavel -> ID PLUS PLUS PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',124),
  ('declaracao_variavel -> ID MINUS MINUS PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',125),
  ('declaracao_variavel -> declaracao_variavel declaracao_variavel','declaracao_variavel',2,'p_declaracao','sintatico.py',126),
  ('declaracao_funcao -> tipo ID PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',128),
  ('declaracao_funcao -> VOID ID PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',129),
  ('declaracao_funcao -> tipo MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',130),
  ('declaracao_funcao -> VOID MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',131),
  ('declaracao_estrutura -> STRUCT ID COLCHETE_ABERTO declaracao_variavel COLCHETE_FECHADO','declaracao_estrutura',5,'p_declaracao','sintatico.py',133),
  ('tipo -> INT','tipo',1,'p_tipo','sintatico.py',136),
  ('tipo -> STRING','tipo',1,'p_tipo','sintatico.py',137),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','sintatico.py',138),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','sintatico.py',139),
  ('tipo -> CHAR','tipo',1,'p_tipo','sintatico.py',140),
  ('tipo -> FLOAT','tipo',1,'p_tipo','sintatico.py',141),
  ('expressao -> atribuicao','expressao',1,'p_expressao','sintatico.py',144),
  ('atribuicao -> NUMBER_DEC','atribuicao',1,'p_expressao','sintatico.py',146),
  ('atribuicao -> NUMBER_INT','atribuicao',1,'p_expressao','sintatico.py',147),
  ('atribuicao -> TYPE_FLOAT','atribuicao',1,'p_expressao','sintatico.py',148),
  ('atribuicao -> TYPE_STRING','atribuicao',1,'p_expressao','sintatico.py',149),
  ('atribuicao -> TYPE_BOOLEAN','atribuicao',1,'p_expressao','sintatico.py',150),
  ('atribuicao -> TYPE_CHAR','atribuicao',1,'p_expressao','sintatico.py',151),
  ('atribuicao -> ID','atribuicao',1,'p_expressao','sintatico.py',152),
  ('atribuicao -> ID EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',153),
  ('atribuicao -> ID PLUS_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',154),
  ('atribuicao -> ID MINUS_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',155),
  ('atribuicao -> ID TIMES_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',156),
  ('atribuicao -> ID DIVIDE_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',157),
  ('atribuicao -> ID REST_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',158),
  ('atribuicao -> ID AND EQUAL expressao','atribuicao',4,'p_expressao','sintatico.py',159),
  ('atribuicao -> ID OR EQUAL expressao','atribuicao',4,'p_expressao','sintatico.py',160),
  ('atribuicao -> ID comparador expressao','atribuicao',3,'p_expressao','sintatico.py',161),
  ('atribuicao -> variavel_ou_valor PLUS_PLUS','atribuicao',2,'p_expressao','sintatico.py',162),
  ('atribuicao -> variavel_ou_valor MINUS_MINUS','atribuicao',2,'p_expressao','sintatico.py',163),
  ('atribuicao -> expressao_logica','atribuicao',1,'p_expressao','sintatico.py',164),
  ('expressao_logica -> expressao_relacional','expressao_logica',1,'p_expressao','sintatico.py',166),
  ('expressao_logica -> expressao_logica AND expressao_relacional','expressao_logica',3,'p_expressao','sintatico.py',167),
  ('expressao_logica -> expressao_logica OR expressao_relacional','expressao_logica',3,'p_expressao','sintatico.py',168),
  ('expressao_logica -> NOT expressao_relacional','expressao_logica',2,'p_expressao','sintatico.py',169),
  ('expressao_relacional -> expressao_aritmetica','expressao_relacional',1,'p_expressao','sintatico.py',171),
  ('expressao_relacional -> expressao_aritmetica comparador expressao_aritmetica','expressao_relacional',3,'p_expressao','sintatico.py',172),
  ('expressao_aritmetica -> expressao_multiplicativa','expressao_aritmetica',1,'p_expressao','sintatico.py',174),
  ('expressao_aritmetica -> expressao_aritmetica PLUS expressao_multiplicativa','expressao_aritmetica',3,'p_expressao','sintatico.py',175),
  ('expressao_aritmetica -> expressao_aritmetica MINUS expressao_multiplicativa','expressao_aritmetica',3,'p_expressao','sintatico.py',176),
  ('expressao_multiplicativa -> expressao_unaria','expressao_multiplicativa',1,'p_expressao','sintatico.py',178),
  ('expressao_multiplicativa -> expressao_multiplicativa TIMES expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',179),
  ('expressao_multiplicativa -> expressao_multiplicativa DIVIDE expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',180),
  ('expressao_multiplicativa -> expressao_multiplicativa REST expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',181),
  ('expressao_unaria -> expressao_postfix','expressao_unaria',1,'p_expressao','sintatico.py',183),
  ('expressao_unaria -> MINUS expressao_unaria','expressao_unaria',2,'p_expressao','sintatico.py',184),
  ('expressao_unaria -> PLUS_PLUS expressao_postfix','expressao_unaria',2,'p_expressao','sintatico.py',185),
  ('expressao_unaria -> MINUS_MINUS expressao_postfix','expressao_unaria',2,'p_expressao','sintatico.py',186),
  ('expressao_postfix -> primaria','expressao_postfix',1,'p_expressao','sintatico.py',188),
  ('expressao_postfix -> primaria CHAVE_ABERTA expressao CHAVE_FECHADA','expressao_postfix',4,'p_expressao','sintatico.py',189),
  ('expressao_postfix -> primaria PAREN_ABERTO argumentos PAREN_FECHADO','expressao_postfix',4,'p_expressao','sintatico.py',190),
  ('expressao_postfix -> primaria DOT ID','expressao_postfix',3,'p_expressao','sintatico.py',191),
  ('argumentos -> expressao_lista','argumentos',1,'p_expressao','sintatico.py',193),
  ('argumentos -> <empty>','argumentos',0,'p_expressao','sintatico.py',194),
  ('expressao_lista -> <empty>','expressao_lista',0,'p_expressao','sintatico.py',196),
  ('primaria -> variavel_ou_valor','primaria',1,'p_expressao','sintatico.py',198),
  ('primaria -> PAREN_ABERTO expressao PAREN_FECHADO','primaria',3,'p_expressao','sintatico.py',199),
  ('parametros -> parametro','parametros',1,'p_parametros','sintatico.py',202),
  ('parametros -> parametro VIRGULA parametros','parametros',3,'p_parametros','sintatico.py',203),
  ('parametros -> <empty>','parametros',0,'p_parametros','sintatico.py',204),
  ('parametro -> tipo ID','parametro',2,'p_parametros','sintatico.py',206),
  ('parametro -> tipo ID CHAVE_ABERTA CHAVE_FECHADA','parametro',4,'p_parametros','sintatico.py',207),
  ('bloco -> COLCHETE_ABERTO declaracao_ou_coisas COLCHETE_FECHADO','bloco',3,'p_bloco','sintatico.py',210),
  ('declaracao_ou_coisas -> declaracao_ou_coisas declaracao_ou_coisas','declaracao_ou_coisas',2,'p_declaracao_ou_coisas','sintatico.py',213),
  ('declaracao_ou_coisas -> retorno','declaracao_ou_coisas',1,'p_declaracao_ou_coisas','sintatico.py',214),
  ('declaracao_ou_coisas -> declaracao_variavel','declaracao_ou_coisas',1,'p_declaracao_ou_coisas','sintatico.py',215),
  ('declaracao_ou_coisas -> if','declaracao_ou_coisas',1,'p_declaracao_ou_coisas','sintatico.py',216),
  ('declaracao_ou_coisas -> while','declaracao_ou_coisas',1,'p_declaracao_ou_coisas','sintatico.py',217),
  ('declaracao_ou_coisas -> for','declaracao_ou_coisas',1,'p_declaracao_ou_coisas','sintatico.py',218),
  ('declaracao_ou_coisas -> switch','declaracao_ou_coisas',1,'p_declaracao_ou_coisas','sintatico.py',219),
  ('declaracao_ou_coisas -> <empty>','declaracao_ou_coisas',0,'p_declaracao_ou_coisas','sintatico.py',220),
  ('retorno -> RETURN PONTO_VIRGULA','retorno',2,'p_retorno','sintatico.py',223),
  ('retorno -> RETURN ID PONTO_VIRGULA','retorno',3,'p_retorno','sintatico.py',224),
  ('retorno -> RETURN expressao PONTO_VIRGULA','retorno',3,'p_retorno','sintatico.py',225),
  ('retorno -> RETURN ID PAREN_ABERTO parametros_dado PAREN_FECHADO PONTO_VIRGULA','retorno',6,'p_retorno','sintatico.py',226),
  ('parametros_dado -> variavel_ou_valor VIRGULA parametros_dado','parametros_dado',3,'p_retorno','sintatico.py',228),
  ('parametros_dado -> variavel_ou_valor','parametros_dado',1,'p_retorno','sintatico.py',229),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco ELSE bloco','if',7,'p_if_switch','sintatico.py',232),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco elseif ELSE bloco','if',8,'p_if_switch','sintatico.py',233),
  ('elseif -> ELSEIF PAREN_ABERTO statement PAREN_FECHADO bloco elseif','elseif',6,'p_if_switch','sintatico.py',235),
  ('elseif -> <empty>','elseif',0,'p_if_switch','sintatico.py',236),
  ('statement -> variavel_ou_valor comparador variavel_ou_valor operador_logico','statement',4,'p_if_switch','sintatico.py',238),
  ('variavel_ou_valor -> ID','variavel_ou_valor',1,'p_if_switch','sintatico.py',240),
  ('variavel_ou_valor -> NUMBER_DEC','variavel_ou_valor',1,'p_if_switch','sintatico.py',241),
  ('variavel_ou_valor -> NUMBER_INT','variavel_ou_valor',1,'p_if_switch','sintatico.py',242),
  ('variavel_ou_valor -> TYPE_STRING','variavel_ou_valor',1,'p_if_switch','sintatico.py',243),
  ('variavel_ou_valor -> TYPE_BOOLEAN','variavel_ou_valor',1,'p_if_switch','sintatico.py',244),
  ('variavel_ou_valor -> TYPE_CHAR','variavel_ou_valor',1,'p_if_switch','sintatico.py',245),
  ('variavel_ou_valor -> TYPE_FLOAT','variavel_ou_valor',1,'p_if_switch','sintatico.py',246),
  ('switch -> SWITCH PAREN_ABERTO ID PAREN_FECHADO bloco_switch','switch',5,'p_if_switch','sintatico.py',248),
  ('bloco_switch -> COLCHETE_ABERTO cases COLCHETE_FECHADO','bloco_switch',3,'p_if_switch','sintatico.py',250),
  ('cases -> cases cases','cases',2,'p_if_switch','sintatico.py',252),
  ('cases -> CASE expressao DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA','cases',6,'p_if_switch','sintatico.py',253),
  ('cases -> DEFAULT DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA','cases',5,'p_if_switch','sintatico.py',254),
  ('cases -> <empty>','cases',0,'p_if_switch','sintatico.py',255),
  ('while -> WHILE PAREN_ABERTO statement PAREN_FECHADO bloco','while',5,'p_loop','sintatico.py',258),
  ('for -> FOR PAREN_ABERTO tipo ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO bloco','for',14,'p_loop','sintatico.py',260),
  ('for -> FOR PAREN_ABERTO ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO bloco','for',13,'p_loop','sintatico.py',261),
  ('comparador -> LESS_THAN','comparador',1,'p_comparador','sintatico.py',264),
  ('comparador -> IS_EQUALS','comparador',1,'p_comparador','sintatico.py',265),
  ('comparador -> LESS_THAN_OR_EQUALS','comparador',1,'p_comparador','sintatico.py',266),
  ('comparador -> GREATER_THAN','comparador',1,'p_comparador','sintatico.py',267),
  ('comparador -> GREATER_THAN_OR_EQUALS','comparador',1,'p_comparador','sintatico.py',268),
  ('comparador -> IS_DIFFERENT','comparador',1,'p_comparador','sintatico.py',269),
  ('operador_logico -> AND statement','operador_logico',2,'p_operador_logico','sintatico.py',272),
  ('operador_logico -> OR statement','operador_logico',2,'p_operador_logico','sintatico.py',273),
  ('operador_logico -> <empty>','operador_logico',0,'p_operador_logico','sintatico.py',274),
  ('array -> ID chaves_array','array',2,'p_array','sintatico.py',277),
  ('array -> array_inicializacao','array',1,'p_array','sintatico.py',278),
  ('array_inicializacao -> COLCHETE_ABERTO expressao COLCHETE_FECHADO','array_inicializacao',3,'p_array','sintatico.py',280),
  ('chaves_array -> CHAVE_ABERTA expressao CHAVE_FECHADA chaves_array','chaves_array',4,'p_array','sintatico.py',282),
  ('chaves_array -> <empty>','chaves_array',0,'p_array','sintatico.py',283),
]
