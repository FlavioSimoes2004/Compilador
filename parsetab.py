
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN BREAK CASE CHAR CHAVE_ABERTA CHAVE_FECHADA COLCHETE_ABERTO COLCHETE_FECHADO COMMENT COMPARE_OPERATOR DEFAULT DIVIDE DIVIDE_EQUAL DOIS_PONTOS DOT DOUBLE ELSE ELSEIF EQUAL FLOAT FOR GREATER_THAN GREATER_THAN_OR_EQUALS ID IF INT IS_DIFFERENT IS_EQUALS LESS_THAN LESS_THAN_OR_EQUALS MAIN MINUS MINUS_EQUAL MINUS_MINUS NOT NUMBER_DEC NUMBER_INT OPERATOR OR PAREN_ABERTO PAREN_FECHADO PLUS PLUS_EQUAL PLUS_PLUS PONTO_VIRGULA PRINTLN REST REST_EQUAL RETURN SCANF SPECIAL_SYMBOL STRING STRUCT SWITCH TIMES TIMES_EQUAL TYPE_BOOLEAN TYPE_CHAR TYPE_FLOAT TYPE_STRING VIRGULA VOID WHILEprograma : declaracaodeclaracao : declaracao declaracao\n    | declaracao_variavel\n    | declaracao_funcao\n    | declaracao_estrutura\n    | estrutura_de_controle\n    | COMMENT\n    | \n    \n    declaracao_variavel : ID EQUAL expressao PONTO_VIRGULA\n    | tipo ID PONTO_VIRGULA\n    | tipo ID EQUAL expressao PONTO_VIRGULA\n    | ID PLUS PLUS PONTO_VIRGULA\n    | ID MINUS MINUS PONTO_VIRGULA\n    | declaracao_variavel declaracao_variavel\n    \n    declaracao_funcao : tipo ID PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | VOID ID PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | tipo MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco\n    | VOID MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco\n    \n    declaracao_estrutura : STRUCT ID COLCHETE_ABERTO declaracao_variavel COLCHETE_FECHADO\n    \n    declaracao_ou_coisas : declaracao_ou_coisas declaracao_ou_coisas\n    | retorno\n    | declaracao_variavel\n    | estrutura_de_controle\n    | COMMENT\n    | \n    \n    estrutura_de_controle : if\n    | while\n    | for\n    | switchtipo : INT\n    | STRING\n    | BOOLEAN\n    | DOUBLE\n    | CHAR\n    | FLOATexpressao : atribuicao\n    \n    atribuicao : NUMBER_DEC\n    | NUMBER_INT\n    | TYPE_FLOAT\n    | TYPE_STRING\n    | TYPE_BOOLEAN\n    | TYPE_CHAR\n    | ID\n    | ID EQUAL expressao\n    | ID PLUS_EQUAL expressao\n    | ID MINUS_EQUAL expressao\n    | ID TIMES_EQUAL expressao\n    | ID DIVIDE_EQUAL expressao\n    | ID REST_EQUAL expressao\n    | ID AND EQUAL expressao\n    | ID OR EQUAL expressao\n    | ID comparador expressao\n    | variavel_ou_valor PLUS_PLUS\n    | variavel_ou_valor MINUS_MINUS\n    | expressao_logica\n    \n    expressao_logica : expressao_relacional\n    | expressao_logica AND expressao_relacional\n    | expressao_logica OR expressao_relacional\n    | NOT expressao_relacional\n    \n    expressao_relacional : expressao_aritmetica\n    | expressao_aritmetica comparador expressao_aritmetica\n    \n    expressao_aritmetica : expressao_multiplicativa\n    | expressao_aritmetica PLUS expressao_multiplicativa\n    | expressao_aritmetica MINUS expressao_multiplicativa\n    \n    expressao_multiplicativa : expressao_unaria\n    | expressao_multiplicativa TIMES expressao_unaria\n    | expressao_multiplicativa DIVIDE expressao_unaria\n    | expressao_multiplicativa REST expressao_unaria\n    \n    expressao_unaria : expressao_postfix\n    | MINUS expressao_unaria\n    | PLUS_PLUS expressao_postfix\n    | MINUS_MINUS expressao_postfix\n    \n    expressao_postfix : primaria\n    | primaria CHAVE_ABERTA expressao CHAVE_FECHADA\n    | primaria PAREN_ABERTO argumentos PAREN_FECHADO\n    | primaria DOT ID\n    \n    argumentos : expressao_lista\n    | \n\n    expressao_lista : \n    \n    primaria : variavel_ou_valor\n    | PAREN_ABERTO expressao PAREN_FECHADOparametros : parametro\n    | parametro VIRGULA parametros\n    | \n    \n    parametro : tipo ID\n    | tipo ID CHAVE_ABERTA CHAVE_FECHADAbloco : COLCHETE_ABERTO declaracao_ou_coisas COLCHETE_FECHADOretorno : RETURN PONTO_VIRGULA\n    | RETURN ID PONTO_VIRGULA\n    | RETURN expressao PONTO_VIRGULA\n    | RETURN ID PAREN_ABERTO parametros_dado PAREN_FECHADO PONTO_VIRGULA\n    \n    parametros_dado : variavel_ou_valor VIRGULA parametros_dado\n    | variavel_ou_valorif : IF PAREN_ABERTO statement PAREN_FECHADO bloco\n    | IF PAREN_ABERTO statement PAREN_FECHADO bloco ELSE bloco\n    | IF PAREN_ABERTO statement PAREN_FECHADO bloco elseif ELSE bloco\n\n    elseif : ELSEIF PAREN_ABERTO statement PAREN_FECHADO bloco elseif\n    | \n    \n    statement : variavel_ou_valor comparador variavel_ou_valor operador_logico\n    \n    variavel_ou_valor : ID\n    | NUMBER_DEC\n    | NUMBER_INT\n    | TYPE_STRING\n    | TYPE_BOOLEAN\n    | TYPE_CHAR\n    | TYPE_FLOAT\n    \n    switch : SWITCH PAREN_ABERTO ID PAREN_FECHADO bloco_switch\n    \n    bloco_switch : COLCHETE_ABERTO cases COLCHETE_FECHADO\n    \n    cases : cases cases\n    | CASE expressao DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA\n    | DEFAULT DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA\n    | while : WHILE PAREN_ABERTO statement PAREN_FECHADO bloco\n    \n    for : FOR PAREN_ABERTO tipo ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO bloco\n    | FOR PAREN_ABERTO ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO blococomparador : LESS_THAN\n    | IS_EQUALS\n    | LESS_THAN_OR_EQUALS\n    | GREATER_THAN\n    | GREATER_THAN_OR_EQUALS\n    | IS_DIFFERENToperador_logico : AND statement\n    | OR statement\n    | array : ID chaves_array\n    | array_inicializacao\n    \n    array_inicializacao : COLCHETE_ABERTO expressao COLCHETE_FECHADO\n    \n    chaves_array : CHAVE_ABERTA expressao CHAVE_FECHADA chaves_array\n    | '
    
_lr_action_items = {'COMMENT':([0,2,3,4,5,6,7,12,13,14,15,26,27,66,101,121,122,159,166,167,168,170,173,180,182,183,184,188,189,190,191,192,203,206,207,208,216,218,219,221,223,226,227,233,243,251,252,],[7,7,-3,-4,-5,-6,-7,-26,-27,-28,-29,7,-14,-10,-9,-12,-13,-11,-19,-94,192,-113,-107,-15,-17,-16,-18,192,-21,-22,-23,-24,-95,192,-87,-88,-108,192,-96,-89,-90,192,192,192,-91,-115,-114,]),'ID':([0,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,37,38,39,40,52,53,56,59,63,66,67,72,83,86,87,88,89,90,91,94,95,96,97,98,99,100,101,107,108,110,111,112,113,114,115,117,119,121,122,124,130,132,135,143,144,159,166,167,168,170,171,173,180,182,183,184,188,189,190,191,192,193,195,196,198,200,203,205,206,207,208,213,216,218,219,221,222,223,225,226,227,231,233,237,239,243,245,251,252,],[8,8,8,-4,-5,-6,-7,32,34,36,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,8,8,41,42,75,75,84,85,75,75,75,75,42,-10,42,8,134,42,42,42,42,42,42,42,-116,-117,-118,-119,-120,-121,-9,75,75,75,75,75,75,75,75,42,157,-12,-13,160,8,75,75,42,42,-11,-19,-94,8,-113,75,-107,-15,-17,-16,-18,8,-21,8,-23,-24,209,75,75,75,42,-95,75,8,-87,-88,75,-108,8,-96,-89,75,-90,75,8,8,75,8,75,42,-91,42,-115,-114,]),'VOID':([0,2,3,4,5,6,7,12,13,14,15,26,27,66,101,121,122,159,166,167,170,173,180,182,183,184,203,207,216,219,251,252,],[10,10,-3,-4,-5,-6,-7,-26,-27,-28,-29,10,-14,-10,-9,-12,-13,-11,-19,-94,-113,-107,-15,-17,-16,-18,-95,-87,-108,-96,-115,-114,]),'STRUCT':([0,2,3,4,5,6,7,12,13,14,15,26,27,66,101,121,122,159,166,167,170,173,180,182,183,184,203,207,216,219,251,252,],[11,11,-3,-4,-5,-6,-7,-26,-27,-28,-29,11,-14,-10,-9,-12,-13,-11,-19,-94,-113,-107,-15,-17,-16,-18,-95,-87,-108,-96,-115,-114,]),'INT':([0,2,3,4,5,6,7,12,13,14,15,26,27,39,66,68,69,70,71,72,101,121,122,130,159,162,166,167,168,170,173,180,182,183,184,188,189,190,191,192,203,206,207,208,216,218,219,221,223,226,227,233,243,251,252,],[16,16,16,-4,-5,-6,-7,-26,-27,-28,-29,16,16,16,-10,16,16,16,16,16,-9,-12,-13,16,-11,16,-19,-94,16,-113,-107,-15,-17,-16,-18,16,-21,16,-23,-24,-95,16,-87,-88,-108,16,-96,-89,-90,16,16,16,-91,-115,-114,]),'STRING':([0,2,3,4,5,6,7,12,13,14,15,26,27,39,66,68,69,70,71,72,101,121,122,130,159,162,166,167,168,170,173,180,182,183,184,188,189,190,191,192,203,206,207,208,216,218,219,221,223,226,227,233,243,251,252,],[17,17,17,-4,-5,-6,-7,-26,-27,-28,-29,17,17,17,-10,17,17,17,17,17,-9,-12,-13,17,-11,17,-19,-94,17,-113,-107,-15,-17,-16,-18,17,-21,17,-23,-24,-95,17,-87,-88,-108,17,-96,-89,-90,17,17,17,-91,-115,-114,]),'BOOLEAN':([0,2,3,4,5,6,7,12,13,14,15,26,27,39,66,68,69,70,71,72,101,121,122,130,159,162,166,167,168,170,173,180,182,183,184,188,189,190,191,192,203,206,207,208,216,218,219,221,223,226,227,233,243,251,252,],[18,18,18,-4,-5,-6,-7,-26,-27,-28,-29,18,18,18,-10,18,18,18,18,18,-9,-12,-13,18,-11,18,-19,-94,18,-113,-107,-15,-17,-16,-18,18,-21,18,-23,-24,-95,18,-87,-88,-108,18,-96,-89,-90,18,18,18,-91,-115,-114,]),'DOUBLE':([0,2,3,4,5,6,7,12,13,14,15,26,27,39,66,68,69,70,71,72,101,121,122,130,159,162,166,167,168,170,173,180,182,183,184,188,189,190,191,192,203,206,207,208,216,218,219,221,223,226,227,233,243,251,252,],[19,19,19,-4,-5,-6,-7,-26,-27,-28,-29,19,19,19,-10,19,19,19,19,19,-9,-12,-13,19,-11,19,-19,-94,19,-113,-107,-15,-17,-16,-18,19,-21,19,-23,-24,-95,19,-87,-88,-108,19,-96,-89,-90,19,19,19,-91,-115,-114,]),'CHAR':([0,2,3,4,5,6,7,12,13,14,15,26,27,39,66,68,69,70,71,72,101,121,122,130,159,162,166,167,168,170,173,180,182,183,184,188,189,190,191,192,203,206,207,208,216,218,219,221,223,226,227,233,243,251,252,],[20,20,20,-4,-5,-6,-7,-26,-27,-28,-29,20,20,20,-10,20,20,20,20,20,-9,-12,-13,20,-11,20,-19,-94,20,-113,-107,-15,-17,-16,-18,20,-21,20,-23,-24,-95,20,-87,-88,-108,20,-96,-89,-90,20,20,20,-91,-115,-114,]),'FLOAT':([0,2,3,4,5,6,7,12,13,14,15,26,27,39,66,68,69,70,71,72,101,121,122,130,159,162,166,167,168,170,173,180,182,183,184,188,189,190,191,192,203,206,207,208,216,218,219,221,223,226,227,233,243,251,252,],[21,21,21,-4,-5,-6,-7,-26,-27,-28,-29,21,21,21,-10,21,21,21,21,21,-9,-12,-13,21,-11,21,-19,-94,21,-113,-107,-15,-17,-16,-18,21,-21,21,-23,-24,-95,21,-87,-88,-108,21,-96,-89,-90,21,21,21,-91,-115,-114,]),'IF':([0,2,3,4,5,6,7,12,13,14,15,26,27,66,101,121,122,159,166,167,168,170,173,180,182,183,184,188,189,190,191,192,203,206,207,208,216,218,219,221,223,226,227,233,243,251,252,],[22,22,-3,-4,-5,-6,-7,-26,-27,-28,-29,22,-14,-10,-9,-12,-13,-11,-19,-94,22,-113,-107,-15,-17,-16,-18,22,-21,-22,-23,-24,-95,22,-87,-88,-108,22,-96,-89,-90,22,22,22,-91,-115,-114,]),'WHILE':([0,2,3,4,5,6,7,12,13,14,15,26,27,66,101,121,122,159,166,167,168,170,173,180,182,183,184,188,189,190,191,192,203,206,207,208,216,218,219,221,223,226,227,233,243,251,252,],[23,23,-3,-4,-5,-6,-7,-26,-27,-28,-29,23,-14,-10,-9,-12,-13,-11,-19,-94,23,-113,-107,-15,-17,-16,-18,23,-21,-22,-23,-24,-95,23,-87,-88,-108,23,-96,-89,-90,23,23,23,-91,-115,-114,]),'FOR':([0,2,3,4,5,6,7,12,13,14,15,26,27,66,101,121,122,159,166,167,168,170,173,180,182,183,184,188,189,190,191,192,203,206,207,208,216,218,219,221,223,226,227,233,243,251,252,],[24,24,-3,-4,-5,-6,-7,-26,-27,-28,-29,24,-14,-10,-9,-12,-13,-11,-19,-94,24,-113,-107,-15,-17,-16,-18,24,-21,-22,-23,-24,-95,24,-87,-88,-108,24,-96,-89,-90,24,24,24,-91,-115,-114,]),'SWITCH':([0,2,3,4,5,6,7,12,13,14,15,26,27,66,101,121,122,159,166,167,168,170,173,180,182,183,184,188,189,190,191,192,203,206,207,208,216,218,219,221,223,226,227,233,243,251,252,],[25,25,-3,-4,-5,-6,-7,-26,-27,-28,-29,25,-14,-10,-9,-12,-13,-11,-19,-94,25,-113,-107,-15,-17,-16,-18,25,-21,-22,-23,-24,-95,25,-87,-88,-108,25,-96,-89,-90,25,25,25,-91,-115,-114,]),'$end':([0,1,2,3,4,5,6,7,12,13,14,15,26,27,66,101,121,122,159,166,167,170,173,180,182,183,184,203,207,216,219,251,252,],[-8,0,-1,-3,-4,-5,-6,-7,-26,-27,-28,-29,-2,-14,-10,-9,-12,-13,-11,-19,-94,-113,-107,-15,-17,-16,-18,-95,-87,-108,-96,-115,-114,]),'EQUAL':([8,32,41,42,84,92,93,134,209,],[29,67,67,86,135,143,144,171,86,]),'PLUS':([8,30,42,45,46,47,48,49,50,51,57,58,60,61,62,75,76,77,78,79,80,81,104,105,106,116,148,149,150,151,152,153,157,158,177,178,209,],[30,64,-100,-101,-102,-106,-103,-104,-105,-80,111,-62,-65,-69,-73,-100,-101,-102,-103,-104,-105,-106,-71,-80,-72,-70,111,-63,-64,-66,-67,-68,-76,-81,-74,-75,-100,]),'MINUS':([8,29,31,42,45,46,47,48,49,50,51,56,57,58,59,60,61,62,63,67,75,76,77,78,79,80,81,86,87,88,89,90,91,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,115,116,117,143,144,148,149,150,151,152,153,157,158,177,178,193,200,209,239,245,],[31,59,65,-100,-101,-102,-106,-103,-104,-105,-80,59,112,-62,59,-65,-69,-73,59,59,-100,-101,-102,-103,-104,-105,-106,59,59,59,59,59,59,59,-116,-117,-118,-119,-120,-121,-71,-80,-72,59,59,59,59,59,59,59,59,-70,59,59,59,112,-63,-64,-66,-67,-68,-76,-81,-74,-75,59,59,-100,59,59,]),'MAIN':([9,10,16,17,18,19,20,21,],[33,35,-30,-31,-32,-33,-34,-35,]),'COLCHETE_FECHADO':([12,13,14,15,27,66,101,121,122,130,159,167,168,170,173,174,188,189,190,191,192,199,203,206,207,208,215,216,219,221,223,241,243,247,251,252,],[-26,-27,-28,-29,-14,-10,-9,-12,-13,166,-11,-94,-25,-113,-107,-112,207,-21,-22,-23,-24,216,-95,-20,-87,-88,-109,-108,-96,-89,-90,-111,-91,-110,-115,-114,]),'RETURN':([12,13,14,15,27,66,101,121,122,159,167,168,170,173,188,189,190,191,192,203,206,207,208,216,218,219,221,223,226,227,233,243,251,252,],[-26,-27,-28,-29,-14,-10,-9,-12,-13,-11,-94,193,-113,-107,193,-21,-22,-23,-24,-95,193,-87,-88,-108,193,-96,-89,-90,193,193,193,-91,-115,-114,]),'BREAK':([12,13,14,15,27,66,101,121,122,159,167,170,173,189,190,191,192,203,206,207,208,216,218,219,221,223,226,227,233,243,251,252,],[-26,-27,-28,-29,-14,-10,-9,-12,-13,-11,-94,-113,-107,-21,-22,-23,-24,-95,-20,-87,-88,-108,-25,-96,-89,-90,-25,234,240,-91,-115,-114,]),'PAREN_ABERTO':([22,23,24,25,29,32,33,34,35,42,45,46,47,48,49,50,51,52,53,56,59,62,63,67,75,76,77,78,79,80,81,86,87,88,89,90,91,94,95,96,97,98,99,100,105,107,108,110,111,112,113,114,115,117,143,144,158,187,193,200,209,239,245,],[37,38,39,40,63,68,69,70,71,-100,-101,-102,-106,-103,-104,-105,-80,63,63,63,63,118,63,63,-100,-101,-102,-103,-104,-105,-106,63,63,63,63,63,63,63,-116,-117,-118,-119,-120,-121,-80,63,63,63,63,63,63,63,63,63,63,63,-81,205,63,63,222,63,63,]),'NUMBER_DEC':([29,37,38,52,53,56,59,63,67,86,87,88,89,90,91,94,95,96,97,98,99,100,107,108,110,111,112,113,114,115,117,132,135,143,144,171,193,195,196,198,200,205,213,222,225,231,237,239,245,],[45,76,76,76,76,76,76,45,45,45,45,45,45,45,45,45,-116,-117,-118,-119,-120,-121,76,76,76,76,76,76,76,76,45,76,76,45,45,76,45,76,76,76,45,76,76,76,76,76,76,45,45,]),'NUMBER_INT':([29,37,38,52,53,56,59,63,67,86,87,88,89,90,91,94,95,96,97,98,99,100,107,108,110,111,112,113,114,115,117,132,135,143,144,171,193,195,196,198,200,205,213,222,225,231,237,239,245,],[46,77,77,77,77,77,77,46,46,46,46,46,46,46,46,46,-116,-117,-118,-119,-120,-121,77,77,77,77,77,77,77,77,46,77,77,46,46,77,46,77,77,77,46,77,77,77,77,77,77,46,46,]),'TYPE_FLOAT':([29,37,38,52,53,56,59,63,67,86,87,88,89,90,91,94,95,96,97,98,99,100,107,108,110,111,112,113,114,115,117,132,135,143,144,171,193,195,196,198,200,205,213,222,225,231,237,239,245,],[47,81,81,81,81,81,81,47,47,47,47,47,47,47,47,47,-116,-117,-118,-119,-120,-121,81,81,81,81,81,81,81,81,47,81,81,47,47,81,47,81,81,81,47,81,81,81,81,81,81,47,47,]),'TYPE_STRING':([29,37,38,52,53,56,59,63,67,86,87,88,89,90,91,94,95,96,97,98,99,100,107,108,110,111,112,113,114,115,117,132,135,143,144,171,193,195,196,198,200,205,213,222,225,231,237,239,245,],[48,78,78,78,78,78,78,48,48,48,48,48,48,48,48,48,-116,-117,-118,-119,-120,-121,78,78,78,78,78,78,78,78,48,78,78,48,48,78,48,78,78,78,48,78,78,78,78,78,78,48,48,]),'TYPE_BOOLEAN':([29,37,38,52,53,56,59,63,67,86,87,88,89,90,91,94,95,96,97,98,99,100,107,108,110,111,112,113,114,115,117,132,135,143,144,171,193,195,196,198,200,205,213,222,225,231,237,239,245,],[49,79,79,79,79,79,79,49,49,49,49,49,49,49,49,49,-116,-117,-118,-119,-120,-121,79,79,79,79,79,79,79,79,49,79,79,49,49,79,49,79,79,79,49,79,79,79,79,79,79,49,49,]),'TYPE_CHAR':([29,37,38,52,53,56,59,63,67,86,87,88,89,90,91,94,95,96,97,98,99,100,107,108,110,111,112,113,114,115,117,132,135,143,144,171,193,195,196,198,200,205,213,222,225,231,237,239,245,],[50,80,80,80,80,80,80,50,50,50,50,50,50,50,50,50,-116,-117,-118,-119,-120,-121,80,80,80,80,80,80,80,80,50,80,80,50,50,80,50,80,80,80,50,80,80,80,80,80,80,50,50,]),'NOT':([29,63,67,86,87,88,89,90,91,94,95,96,97,98,99,100,117,143,144,193,200,239,245,],[56,56,56,56,56,56,56,56,56,56,-116,-117,-118,-119,-120,-121,56,56,56,56,56,56,56,]),'PLUS_PLUS':([29,42,45,46,47,48,49,50,51,56,59,63,67,86,87,88,89,90,91,94,95,96,97,98,99,100,107,108,110,111,112,113,114,115,117,143,144,193,200,209,239,245,],[52,-100,-101,-102,-106,-103,-104,-105,102,52,52,52,52,52,52,52,52,52,52,52,-116,-117,-118,-119,-120,-121,52,52,52,52,52,52,52,52,52,52,52,52,52,-100,52,52,]),'MINUS_MINUS':([29,42,45,46,47,48,49,50,51,56,59,63,67,86,87,88,89,90,91,94,95,96,97,98,99,100,107,108,110,111,112,113,114,115,117,143,144,193,200,209,239,245,],[53,-100,-101,-102,-106,-103,-104,-105,103,53,53,53,53,53,53,53,53,53,53,53,-116,-117,-118,-119,-120,-121,53,53,53,53,53,53,53,53,53,53,53,53,53,-100,53,53,]),'PONTO_VIRGULA':([32,41,42,43,44,45,46,47,48,49,50,51,54,55,57,58,60,61,62,64,65,75,76,77,78,79,80,81,102,103,104,105,106,109,116,123,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,157,158,172,175,176,177,178,193,197,209,210,232,234,236,238,240,],[66,66,-43,101,-36,-37,-38,-39,-40,-41,-42,-80,-55,-56,-60,-62,-65,-69,-73,121,122,-100,-101,-102,-103,-104,-105,-106,-53,-54,-71,-80,-72,-59,-70,159,-44,-45,-46,-47,-48,-49,-52,-57,-58,-61,-63,-64,-66,-67,-68,-76,-81,198,-50,-51,-74,-75,208,213,221,223,239,241,243,245,247,]),'COLCHETE_ABERTO':([36,131,133,136,161,163,164,165,185,204,228,249,250,],[72,168,168,174,168,168,168,168,168,168,168,168,168,]),'PAREN_FECHADO':([42,44,45,46,47,48,49,50,51,54,55,57,58,60,61,62,68,69,70,71,73,75,76,77,78,79,80,81,82,85,102,103,104,105,106,109,116,118,120,125,126,127,128,129,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,155,156,157,158,160,162,169,175,176,177,178,181,194,202,211,212,220,229,230,244,246,248,],[-43,-36,-37,-38,-39,-40,-41,-42,-80,-55,-56,-60,-62,-65,-69,-73,-84,-84,-84,-84,131,-100,-101,-102,-103,-104,-105,-106,133,136,-53,-54,-71,-80,-72,-59,-70,-78,158,161,-82,163,164,165,-44,-45,-46,-47,-48,-49,-52,-57,-58,-61,-63,-64,-66,-67,-68,178,-77,-76,-81,-85,-84,-124,-50,-51,-74,-75,-83,-99,-86,-122,-123,228,236,-93,-92,249,250,]),'CHAVE_FECHADA':([42,44,45,46,47,48,49,50,51,54,55,57,58,60,61,62,75,76,77,78,79,80,81,102,103,104,105,106,109,116,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,154,157,158,175,176,177,178,179,],[-43,-36,-37,-38,-39,-40,-41,-42,-80,-55,-56,-60,-62,-65,-69,-73,-100,-101,-102,-103,-104,-105,-106,-53,-54,-71,-80,-72,-59,-70,-44,-45,-46,-47,-48,-49,-52,-57,-58,-61,-63,-64,-66,-67,-68,177,-76,-81,-50,-51,-74,-75,202,]),'DOIS_PONTOS':([42,44,45,46,47,48,49,50,51,54,55,57,58,60,61,62,75,76,77,78,79,80,81,102,103,104,105,106,109,116,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,157,158,175,176,177,178,201,217,],[-43,-36,-37,-38,-39,-40,-41,-42,-80,-55,-56,-60,-62,-65,-69,-73,-100,-101,-102,-103,-104,-105,-106,-53,-54,-71,-80,-72,-59,-70,-44,-45,-46,-47,-48,-49,-52,-57,-58,-61,-63,-64,-66,-67,-68,-76,-81,-50,-51,-74,-75,218,226,]),'PLUS_EQUAL':([42,209,],[87,87,]),'MINUS_EQUAL':([42,209,],[88,88,]),'TIMES_EQUAL':([42,209,],[89,89,]),'DIVIDE_EQUAL':([42,209,],[90,90,]),'REST_EQUAL':([42,209,],[91,91,]),'AND':([42,45,46,47,48,49,50,51,54,55,57,58,60,61,62,75,76,77,78,79,80,81,104,105,106,109,116,146,147,148,149,150,151,152,153,157,158,169,177,178,209,],[92,-101,-102,-106,-103,-104,-105,-80,107,-56,-60,-62,-65,-69,-73,-100,-101,-102,-103,-104,-105,-106,-71,-80,-72,-59,-70,-57,-58,-61,-63,-64,-66,-67,-68,-76,-81,195,-74,-75,92,]),'OR':([42,45,46,47,48,49,50,51,54,55,57,58,60,61,62,75,76,77,78,79,80,81,104,105,106,109,116,146,147,148,149,150,151,152,153,157,158,169,177,178,209,],[93,-101,-102,-106,-103,-104,-105,-80,108,-56,-60,-62,-65,-69,-73,-100,-101,-102,-103,-104,-105,-106,-71,-80,-72,-59,-70,-57,-58,-61,-63,-64,-66,-67,-68,-76,-81,196,-74,-75,93,]),'CHAVE_ABERTA':([42,45,46,47,48,49,50,51,62,75,76,77,78,79,80,81,105,158,160,209,],[-100,-101,-102,-106,-103,-104,-105,-80,117,-100,-101,-102,-103,-104,-105,-106,-80,-81,179,-100,]),'DOT':([42,45,46,47,48,49,50,51,62,75,76,77,78,79,80,81,105,158,209,],[-100,-101,-102,-106,-103,-104,-105,-80,119,-100,-101,-102,-103,-104,-105,-106,-80,-81,-100,]),'TIMES':([42,45,46,47,48,49,50,51,58,60,61,62,75,76,77,78,79,80,81,104,105,106,116,149,150,151,152,153,157,158,177,178,209,],[-100,-101,-102,-106,-103,-104,-105,-80,113,-65,-69,-73,-100,-101,-102,-103,-104,-105,-106,-71,-80,-72,-70,113,113,-66,-67,-68,-76,-81,-74,-75,-100,]),'DIVIDE':([42,45,46,47,48,49,50,51,58,60,61,62,75,76,77,78,79,80,81,104,105,106,116,149,150,151,152,153,157,158,177,178,209,],[-100,-101,-102,-106,-103,-104,-105,-80,114,-65,-69,-73,-100,-101,-102,-103,-104,-105,-106,-71,-80,-72,-70,114,114,-66,-67,-68,-76,-81,-74,-75,-100,]),'REST':([42,45,46,47,48,49,50,51,58,60,61,62,75,76,77,78,79,80,81,104,105,106,116,149,150,151,152,153,157,158,177,178,209,],[-100,-101,-102,-106,-103,-104,-105,-80,115,-65,-69,-73,-100,-101,-102,-103,-104,-105,-106,-71,-80,-72,-70,115,115,-66,-67,-68,-76,-81,-74,-75,-100,]),'LESS_THAN':([42,45,46,47,48,49,50,51,57,58,60,61,62,74,75,76,77,78,79,80,81,104,105,106,116,149,150,151,152,153,157,158,177,178,209,214,224,],[95,-101,-102,-106,-103,-104,-105,-80,95,-62,-65,-69,-73,95,-100,-101,-102,-103,-104,-105,-106,-71,-80,-72,-70,-63,-64,-66,-67,-68,-76,-81,-74,-75,95,95,95,]),'IS_EQUALS':([42,45,46,47,48,49,50,51,57,58,60,61,62,74,75,76,77,78,79,80,81,104,105,106,116,149,150,151,152,153,157,158,177,178,209,214,224,],[96,-101,-102,-106,-103,-104,-105,-80,96,-62,-65,-69,-73,96,-100,-101,-102,-103,-104,-105,-106,-71,-80,-72,-70,-63,-64,-66,-67,-68,-76,-81,-74,-75,96,96,96,]),'LESS_THAN_OR_EQUALS':([42,45,46,47,48,49,50,51,57,58,60,61,62,74,75,76,77,78,79,80,81,104,105,106,116,149,150,151,152,153,157,158,177,178,209,214,224,],[97,-101,-102,-106,-103,-104,-105,-80,97,-62,-65,-69,-73,97,-100,-101,-102,-103,-104,-105,-106,-71,-80,-72,-70,-63,-64,-66,-67,-68,-76,-81,-74,-75,97,97,97,]),'GREATER_THAN':([42,45,46,47,48,49,50,51,57,58,60,61,62,74,75,76,77,78,79,80,81,104,105,106,116,149,150,151,152,153,157,158,177,178,209,214,224,],[98,-101,-102,-106,-103,-104,-105,-80,98,-62,-65,-69,-73,98,-100,-101,-102,-103,-104,-105,-106,-71,-80,-72,-70,-63,-64,-66,-67,-68,-76,-81,-74,-75,98,98,98,]),'GREATER_THAN_OR_EQUALS':([42,45,46,47,48,49,50,51,57,58,60,61,62,74,75,76,77,78,79,80,81,104,105,106,116,149,150,151,152,153,157,158,177,178,209,214,224,],[99,-101,-102,-106,-103,-104,-105,-80,99,-62,-65,-69,-73,99,-100,-101,-102,-103,-104,-105,-106,-71,-80,-72,-70,-63,-64,-66,-67,-68,-76,-81,-74,-75,99,99,99,]),'IS_DIFFERENT':([42,45,46,47,48,49,50,51,57,58,60,61,62,74,75,76,77,78,79,80,81,104,105,106,116,149,150,151,152,153,157,158,177,178,209,214,224,],[100,-101,-102,-106,-103,-104,-105,-80,100,-62,-65,-69,-73,100,-100,-101,-102,-103,-104,-105,-106,-71,-80,-72,-70,-63,-64,-66,-67,-68,-76,-81,-74,-75,100,100,100,]),'VIRGULA':([75,76,77,78,79,80,81,126,160,202,230,],[-100,-101,-102,-103,-104,-105,-106,162,-85,-86,237,]),'ELSE':([167,186,207,235,242,],[185,204,-87,-98,-97,]),'ELSEIF':([167,207,235,],[187,-87,187,]),'CASE':([174,199,215,241,247,],[200,200,200,-111,-110,]),'DEFAULT':([174,199,215,241,247,],[201,201,201,-111,-110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracao':([0,2,26,],[2,26,26,]),'declaracao_variavel':([0,2,3,26,27,72,130,168,188,190,206,218,226,227,233,],[3,3,27,3,27,130,27,190,190,27,190,190,190,190,190,]),'declaracao_funcao':([0,2,26,],[4,4,4,]),'declaracao_estrutura':([0,2,26,],[5,5,5,]),'estrutura_de_controle':([0,2,26,168,188,206,218,226,227,233,],[6,6,6,191,191,191,191,191,191,191,]),'tipo':([0,2,3,26,27,39,68,69,70,71,72,130,162,168,188,190,206,218,226,227,233,],[9,9,28,9,28,83,124,124,124,124,28,28,124,28,28,28,28,28,28,28,28,]),'if':([0,2,26,168,188,206,218,226,227,233,],[12,12,12,12,12,12,12,12,12,12,]),'while':([0,2,26,168,188,206,218,226,227,233,],[13,13,13,13,13,13,13,13,13,13,]),'for':([0,2,26,168,188,206,218,226,227,233,],[14,14,14,14,14,14,14,14,14,14,]),'switch':([0,2,26,168,188,206,218,226,227,233,],[15,15,15,15,15,15,15,15,15,15,]),'expressao':([29,63,67,86,87,88,89,90,91,94,117,143,144,193,200,239,245,],[43,120,123,137,138,139,140,141,142,145,154,175,176,210,217,246,248,]),'atribuicao':([29,63,67,86,87,88,89,90,91,94,117,143,144,193,200,239,245,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'variavel_ou_valor':([29,37,38,52,53,56,59,63,67,86,87,88,89,90,91,94,107,108,110,111,112,113,114,115,117,132,135,143,144,171,193,195,196,198,200,205,213,222,225,231,237,239,245,],[51,74,74,105,105,105,105,51,51,51,51,51,51,51,51,51,105,105,105,105,105,105,105,105,51,169,172,51,51,197,51,74,74,214,51,74,224,230,232,238,230,51,51,]),'expressao_logica':([29,63,67,86,87,88,89,90,91,94,117,143,144,193,200,239,245,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'expressao_relacional':([29,56,63,67,86,87,88,89,90,91,94,107,108,117,143,144,193,200,239,245,],[55,109,55,55,55,55,55,55,55,55,55,146,147,55,55,55,55,55,55,55,]),'expressao_aritmetica':([29,56,63,67,86,87,88,89,90,91,94,107,108,110,117,143,144,193,200,239,245,],[57,57,57,57,57,57,57,57,57,57,57,57,57,148,57,57,57,57,57,57,57,]),'expressao_multiplicativa':([29,56,63,67,86,87,88,89,90,91,94,107,108,110,111,112,117,143,144,193,200,239,245,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,149,150,58,58,58,58,58,58,58,]),'expressao_unaria':([29,56,59,63,67,86,87,88,89,90,91,94,107,108,110,111,112,113,114,115,117,143,144,193,200,239,245,],[60,60,116,60,60,60,60,60,60,60,60,60,60,60,60,60,60,151,152,153,60,60,60,60,60,60,60,]),'expressao_postfix':([29,52,53,56,59,63,67,86,87,88,89,90,91,94,107,108,110,111,112,113,114,115,117,143,144,193,200,239,245,],[61,104,106,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'primaria':([29,52,53,56,59,63,67,86,87,88,89,90,91,94,107,108,110,111,112,113,114,115,117,143,144,193,200,239,245,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'statement':([37,38,195,196,205,],[73,82,211,212,220,]),'comparador':([42,57,74,209,214,224,],[94,110,132,94,225,231,]),'parametros':([68,69,70,71,162,],[125,127,128,129,181,]),'parametro':([68,69,70,71,162,],[126,126,126,126,126,]),'argumentos':([118,],[155,]),'expressao_lista':([118,],[156,]),'bloco':([131,133,161,163,164,165,185,204,228,249,250,],[167,170,180,182,183,184,203,219,235,251,252,]),'bloco_switch':([136,],[173,]),'elseif':([167,235,],[186,242,]),'declaracao_ou_coisas':([168,188,206,218,226,227,233,],[188,206,206,227,233,206,206,]),'retorno':([168,188,206,218,226,227,233,],[189,189,189,189,189,189,189,]),'operador_logico':([169,],[194,]),'cases':([174,199,215,],[199,215,215,]),'parametros_dado':([222,237,],[229,244,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaracao','programa',1,'p_programa','sintatico.py',112),
  ('declaracao -> declaracao declaracao','declaracao',2,'p_declaracao','sintatico.py',115),
  ('declaracao -> declaracao_variavel','declaracao',1,'p_declaracao','sintatico.py',116),
  ('declaracao -> declaracao_funcao','declaracao',1,'p_declaracao','sintatico.py',117),
  ('declaracao -> declaracao_estrutura','declaracao',1,'p_declaracao','sintatico.py',118),
  ('declaracao -> estrutura_de_controle','declaracao',1,'p_declaracao','sintatico.py',119),
  ('declaracao -> COMMENT','declaracao',1,'p_declaracao','sintatico.py',120),
  ('declaracao -> <empty>','declaracao',0,'p_declaracao','sintatico.py',121),
  ('declaracao_variavel -> ID EQUAL expressao PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',123),
  ('declaracao_variavel -> tipo ID PONTO_VIRGULA','declaracao_variavel',3,'p_declaracao','sintatico.py',124),
  ('declaracao_variavel -> tipo ID EQUAL expressao PONTO_VIRGULA','declaracao_variavel',5,'p_declaracao','sintatico.py',125),
  ('declaracao_variavel -> ID PLUS PLUS PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',126),
  ('declaracao_variavel -> ID MINUS MINUS PONTO_VIRGULA','declaracao_variavel',4,'p_declaracao','sintatico.py',127),
  ('declaracao_variavel -> declaracao_variavel declaracao_variavel','declaracao_variavel',2,'p_declaracao','sintatico.py',128),
  ('declaracao_funcao -> tipo ID PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',130),
  ('declaracao_funcao -> VOID ID PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',131),
  ('declaracao_funcao -> tipo MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',132),
  ('declaracao_funcao -> VOID MAIN PAREN_ABERTO parametros PAREN_FECHADO bloco','declaracao_funcao',6,'p_declaracao','sintatico.py',133),
  ('declaracao_estrutura -> STRUCT ID COLCHETE_ABERTO declaracao_variavel COLCHETE_FECHADO','declaracao_estrutura',5,'p_declaracao','sintatico.py',135),
  ('declaracao_ou_coisas -> declaracao_ou_coisas declaracao_ou_coisas','declaracao_ou_coisas',2,'p_declaracao','sintatico.py',137),
  ('declaracao_ou_coisas -> retorno','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',138),
  ('declaracao_ou_coisas -> declaracao_variavel','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',139),
  ('declaracao_ou_coisas -> estrutura_de_controle','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',140),
  ('declaracao_ou_coisas -> COMMENT','declaracao_ou_coisas',1,'p_declaracao','sintatico.py',141),
  ('declaracao_ou_coisas -> <empty>','declaracao_ou_coisas',0,'p_declaracao','sintatico.py',142),
  ('estrutura_de_controle -> if','estrutura_de_controle',1,'p_declaracao','sintatico.py',144),
  ('estrutura_de_controle -> while','estrutura_de_controle',1,'p_declaracao','sintatico.py',145),
  ('estrutura_de_controle -> for','estrutura_de_controle',1,'p_declaracao','sintatico.py',146),
  ('estrutura_de_controle -> switch','estrutura_de_controle',1,'p_declaracao','sintatico.py',147),
  ('tipo -> INT','tipo',1,'p_tipo','sintatico.py',150),
  ('tipo -> STRING','tipo',1,'p_tipo','sintatico.py',151),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','sintatico.py',152),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','sintatico.py',153),
  ('tipo -> CHAR','tipo',1,'p_tipo','sintatico.py',154),
  ('tipo -> FLOAT','tipo',1,'p_tipo','sintatico.py',155),
  ('expressao -> atribuicao','expressao',1,'p_expressao','sintatico.py',158),
  ('atribuicao -> NUMBER_DEC','atribuicao',1,'p_expressao','sintatico.py',160),
  ('atribuicao -> NUMBER_INT','atribuicao',1,'p_expressao','sintatico.py',161),
  ('atribuicao -> TYPE_FLOAT','atribuicao',1,'p_expressao','sintatico.py',162),
  ('atribuicao -> TYPE_STRING','atribuicao',1,'p_expressao','sintatico.py',163),
  ('atribuicao -> TYPE_BOOLEAN','atribuicao',1,'p_expressao','sintatico.py',164),
  ('atribuicao -> TYPE_CHAR','atribuicao',1,'p_expressao','sintatico.py',165),
  ('atribuicao -> ID','atribuicao',1,'p_expressao','sintatico.py',166),
  ('atribuicao -> ID EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',167),
  ('atribuicao -> ID PLUS_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',168),
  ('atribuicao -> ID MINUS_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',169),
  ('atribuicao -> ID TIMES_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',170),
  ('atribuicao -> ID DIVIDE_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',171),
  ('atribuicao -> ID REST_EQUAL expressao','atribuicao',3,'p_expressao','sintatico.py',172),
  ('atribuicao -> ID AND EQUAL expressao','atribuicao',4,'p_expressao','sintatico.py',173),
  ('atribuicao -> ID OR EQUAL expressao','atribuicao',4,'p_expressao','sintatico.py',174),
  ('atribuicao -> ID comparador expressao','atribuicao',3,'p_expressao','sintatico.py',175),
  ('atribuicao -> variavel_ou_valor PLUS_PLUS','atribuicao',2,'p_expressao','sintatico.py',176),
  ('atribuicao -> variavel_ou_valor MINUS_MINUS','atribuicao',2,'p_expressao','sintatico.py',177),
  ('atribuicao -> expressao_logica','atribuicao',1,'p_expressao','sintatico.py',178),
  ('expressao_logica -> expressao_relacional','expressao_logica',1,'p_expressao','sintatico.py',180),
  ('expressao_logica -> expressao_logica AND expressao_relacional','expressao_logica',3,'p_expressao','sintatico.py',181),
  ('expressao_logica -> expressao_logica OR expressao_relacional','expressao_logica',3,'p_expressao','sintatico.py',182),
  ('expressao_logica -> NOT expressao_relacional','expressao_logica',2,'p_expressao','sintatico.py',183),
  ('expressao_relacional -> expressao_aritmetica','expressao_relacional',1,'p_expressao','sintatico.py',185),
  ('expressao_relacional -> expressao_aritmetica comparador expressao_aritmetica','expressao_relacional',3,'p_expressao','sintatico.py',186),
  ('expressao_aritmetica -> expressao_multiplicativa','expressao_aritmetica',1,'p_expressao','sintatico.py',188),
  ('expressao_aritmetica -> expressao_aritmetica PLUS expressao_multiplicativa','expressao_aritmetica',3,'p_expressao','sintatico.py',189),
  ('expressao_aritmetica -> expressao_aritmetica MINUS expressao_multiplicativa','expressao_aritmetica',3,'p_expressao','sintatico.py',190),
  ('expressao_multiplicativa -> expressao_unaria','expressao_multiplicativa',1,'p_expressao','sintatico.py',192),
  ('expressao_multiplicativa -> expressao_multiplicativa TIMES expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',193),
  ('expressao_multiplicativa -> expressao_multiplicativa DIVIDE expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',194),
  ('expressao_multiplicativa -> expressao_multiplicativa REST expressao_unaria','expressao_multiplicativa',3,'p_expressao','sintatico.py',195),
  ('expressao_unaria -> expressao_postfix','expressao_unaria',1,'p_expressao','sintatico.py',197),
  ('expressao_unaria -> MINUS expressao_unaria','expressao_unaria',2,'p_expressao','sintatico.py',198),
  ('expressao_unaria -> PLUS_PLUS expressao_postfix','expressao_unaria',2,'p_expressao','sintatico.py',199),
  ('expressao_unaria -> MINUS_MINUS expressao_postfix','expressao_unaria',2,'p_expressao','sintatico.py',200),
  ('expressao_postfix -> primaria','expressao_postfix',1,'p_expressao','sintatico.py',202),
  ('expressao_postfix -> primaria CHAVE_ABERTA expressao CHAVE_FECHADA','expressao_postfix',4,'p_expressao','sintatico.py',203),
  ('expressao_postfix -> primaria PAREN_ABERTO argumentos PAREN_FECHADO','expressao_postfix',4,'p_expressao','sintatico.py',204),
  ('expressao_postfix -> primaria DOT ID','expressao_postfix',3,'p_expressao','sintatico.py',205),
  ('argumentos -> expressao_lista','argumentos',1,'p_expressao','sintatico.py',207),
  ('argumentos -> <empty>','argumentos',0,'p_expressao','sintatico.py',208),
  ('expressao_lista -> <empty>','expressao_lista',0,'p_expressao','sintatico.py',210),
  ('primaria -> variavel_ou_valor','primaria',1,'p_expressao','sintatico.py',212),
  ('primaria -> PAREN_ABERTO expressao PAREN_FECHADO','primaria',3,'p_expressao','sintatico.py',213),
  ('parametros -> parametro','parametros',1,'p_parametros','sintatico.py',216),
  ('parametros -> parametro VIRGULA parametros','parametros',3,'p_parametros','sintatico.py',217),
  ('parametros -> <empty>','parametros',0,'p_parametros','sintatico.py',218),
  ('parametro -> tipo ID','parametro',2,'p_parametros','sintatico.py',220),
  ('parametro -> tipo ID CHAVE_ABERTA CHAVE_FECHADA','parametro',4,'p_parametros','sintatico.py',221),
  ('bloco -> COLCHETE_ABERTO declaracao_ou_coisas COLCHETE_FECHADO','bloco',3,'p_bloco','sintatico.py',224),
  ('retorno -> RETURN PONTO_VIRGULA','retorno',2,'p_retorno','sintatico.py',227),
  ('retorno -> RETURN ID PONTO_VIRGULA','retorno',3,'p_retorno','sintatico.py',228),
  ('retorno -> RETURN expressao PONTO_VIRGULA','retorno',3,'p_retorno','sintatico.py',229),
  ('retorno -> RETURN ID PAREN_ABERTO parametros_dado PAREN_FECHADO PONTO_VIRGULA','retorno',6,'p_retorno','sintatico.py',230),
  ('parametros_dado -> variavel_ou_valor VIRGULA parametros_dado','parametros_dado',3,'p_retorno','sintatico.py',232),
  ('parametros_dado -> variavel_ou_valor','parametros_dado',1,'p_retorno','sintatico.py',233),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco','if',5,'p_if_switch','sintatico.py',236),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco ELSE bloco','if',7,'p_if_switch','sintatico.py',237),
  ('if -> IF PAREN_ABERTO statement PAREN_FECHADO bloco elseif ELSE bloco','if',8,'p_if_switch','sintatico.py',238),
  ('elseif -> ELSEIF PAREN_ABERTO statement PAREN_FECHADO bloco elseif','elseif',6,'p_if_switch','sintatico.py',240),
  ('elseif -> <empty>','elseif',0,'p_if_switch','sintatico.py',241),
  ('statement -> variavel_ou_valor comparador variavel_ou_valor operador_logico','statement',4,'p_if_switch','sintatico.py',243),
  ('variavel_ou_valor -> ID','variavel_ou_valor',1,'p_if_switch','sintatico.py',245),
  ('variavel_ou_valor -> NUMBER_DEC','variavel_ou_valor',1,'p_if_switch','sintatico.py',246),
  ('variavel_ou_valor -> NUMBER_INT','variavel_ou_valor',1,'p_if_switch','sintatico.py',247),
  ('variavel_ou_valor -> TYPE_STRING','variavel_ou_valor',1,'p_if_switch','sintatico.py',248),
  ('variavel_ou_valor -> TYPE_BOOLEAN','variavel_ou_valor',1,'p_if_switch','sintatico.py',249),
  ('variavel_ou_valor -> TYPE_CHAR','variavel_ou_valor',1,'p_if_switch','sintatico.py',250),
  ('variavel_ou_valor -> TYPE_FLOAT','variavel_ou_valor',1,'p_if_switch','sintatico.py',251),
  ('switch -> SWITCH PAREN_ABERTO ID PAREN_FECHADO bloco_switch','switch',5,'p_if_switch','sintatico.py',253),
  ('bloco_switch -> COLCHETE_ABERTO cases COLCHETE_FECHADO','bloco_switch',3,'p_if_switch','sintatico.py',255),
  ('cases -> cases cases','cases',2,'p_if_switch','sintatico.py',257),
  ('cases -> CASE expressao DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA','cases',6,'p_if_switch','sintatico.py',258),
  ('cases -> DEFAULT DOIS_PONTOS declaracao_ou_coisas BREAK PONTO_VIRGULA','cases',5,'p_if_switch','sintatico.py',259),
  ('cases -> <empty>','cases',0,'p_if_switch','sintatico.py',260),
  ('while -> WHILE PAREN_ABERTO statement PAREN_FECHADO bloco','while',5,'p_loop','sintatico.py',263),
  ('for -> FOR PAREN_ABERTO tipo ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO bloco','for',14,'p_loop','sintatico.py',265),
  ('for -> FOR PAREN_ABERTO ID EQUAL variavel_ou_valor PONTO_VIRGULA variavel_ou_valor comparador variavel_ou_valor PONTO_VIRGULA expressao PAREN_FECHADO bloco','for',13,'p_loop','sintatico.py',266),
  ('comparador -> LESS_THAN','comparador',1,'p_comparador','sintatico.py',269),
  ('comparador -> IS_EQUALS','comparador',1,'p_comparador','sintatico.py',270),
  ('comparador -> LESS_THAN_OR_EQUALS','comparador',1,'p_comparador','sintatico.py',271),
  ('comparador -> GREATER_THAN','comparador',1,'p_comparador','sintatico.py',272),
  ('comparador -> GREATER_THAN_OR_EQUALS','comparador',1,'p_comparador','sintatico.py',273),
  ('comparador -> IS_DIFFERENT','comparador',1,'p_comparador','sintatico.py',274),
  ('operador_logico -> AND statement','operador_logico',2,'p_operador_logico','sintatico.py',277),
  ('operador_logico -> OR statement','operador_logico',2,'p_operador_logico','sintatico.py',278),
  ('operador_logico -> <empty>','operador_logico',0,'p_operador_logico','sintatico.py',279),
  ('array -> ID chaves_array','array',2,'p_array','sintatico.py',282),
  ('array -> array_inicializacao','array',1,'p_array','sintatico.py',283),
  ('array_inicializacao -> COLCHETE_ABERTO expressao COLCHETE_FECHADO','array_inicializacao',3,'p_array','sintatico.py',285),
  ('chaves_array -> CHAVE_ABERTA expressao CHAVE_FECHADA chaves_array','chaves_array',4,'p_array','sintatico.py',287),
  ('chaves_array -> <empty>','chaves_array',0,'p_array','sintatico.py',288),
]
